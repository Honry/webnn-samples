{"version":3,"sources":["webpack://onnxruntime-web/webpack/universalModuleDefinition","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm-threaded.min.js","webpack://onnxruntime-web/./lib/wasm/binding/ort-wasm.js","webpack://onnxruntime-web/./node_modules/@protobufjs/aspromise/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/base64/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/eventemitter/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/float/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/inquire/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/pool/index.js","webpack://onnxruntime-web/./node_modules/@protobufjs/utf8/index.js","webpack://onnxruntime-web/./node_modules/flatbuffers/js/flatbuffers.mjs","webpack://onnxruntime-web/./node_modules/guid-typescript/dist/guid.js","webpack://onnxruntime-web/./node_modules/long/src/long.js","webpack://onnxruntime-web/./node_modules/onnx-proto/dist/onnx.js","webpack://onnxruntime-web/./node_modules/protobufjs/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/index-minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/reader_buffer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/roots.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/rpc/service.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/longbits.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/util/minimal.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer.js","webpack://onnxruntime-web/./node_modules/protobufjs/src/writer_buffer.js","webpack://onnxruntime-web/./lib/backend-onnxjs.ts","webpack://onnxruntime-web/./lib/backend-wasm.ts","webpack://onnxruntime-web/./lib/index.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute-with-cache-key.ts","webpack://onnxruntime-web/./lib/onnxjs/attribute.ts","webpack://onnxruntime-web/./lib/onnxjs/backend.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/backend-webgl.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-coordinate-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-definitions.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-encoding-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-fragcolor-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-function-inliner.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-preprocessor.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-registered-libs.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-shape-utils-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-source.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/glsl-vec-lib.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/inference-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/op-resolve-rules.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/batch-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/binary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/concat.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-grouped.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/conv.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/depth-to-space.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/dot-product.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/flatten.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/fuse-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gather.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/gemm.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/im2col.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/image-scaler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/instance-normalization.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul-pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/matmul.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/packing-utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pad.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/pool.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reduce.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/reshape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/resize-packed.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/shape.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/slice.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/softmax.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/split.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/squeeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/sum.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/tile.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/transpose.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/uint8-encode.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unary-op.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unpack.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/unsqueeze.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/ops/upsample.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/program-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-data-encoder.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout-strategy.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-layout.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/texture-manager.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/types.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/utils.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context-factory.ts","webpack://onnxruntime-web/./lib/onnxjs/backends/webgl/webgl-context.ts","webpack://onnxruntime-web/./lib/onnxjs/execution-plan.ts","webpack://onnxruntime-web/./lib/onnxjs/graph.ts","webpack://onnxruntime-web/./lib/onnxjs/instrument.ts","webpack://onnxruntime-web/./lib/onnxjs/model.ts","webpack://onnxruntime-web/./lib/onnxjs/operators.ts","webpack://onnxruntime-web/./lib/onnxjs/opset.ts","webpack://onnxruntime-web/./lib/onnxjs/ort-schema/ort-generated.ts","webpack://onnxruntime-web/./lib/onnxjs/session-handler.ts","webpack://onnxruntime-web/./lib/onnxjs/session.ts","webpack://onnxruntime-web/./lib/onnxjs/tensor.ts","webpack://onnxruntime-web/./lib/onnxjs/util.ts","webpack://onnxruntime-web/./lib/wasm/options-utils.ts","webpack://onnxruntime-web/./lib/wasm/proxy-wrapper.ts","webpack://onnxruntime-web/./lib/wasm/run-options.ts","webpack://onnxruntime-web/./lib/wasm/session-handler.ts","webpack://onnxruntime-web/./lib/wasm/session-options.ts","webpack://onnxruntime-web/./lib/wasm/string-utils.ts","webpack://onnxruntime-web/./lib/wasm/wasm-core-impl.ts","webpack://onnxruntime-web/./lib/wasm/wasm-factory.ts","webpack://onnxruntime-web/./lib/wasm/proxy-worker/main.ts","webpack://onnxruntime-web/./node_modules/worker-loader/dist/runtime/inline.js","webpack://onnxruntime-web/external {\"commonjs\":\"onnxruntime-common\",\"commonjs2\":\"onnxruntime-common\",\"root\":\"ort\"}","webpack://onnxruntime-web/webpack/bootstrap","webpack://onnxruntime-web/webpack/runtime/compat get default export","webpack://onnxruntime-web/webpack/runtime/define property getters","webpack://onnxruntime-web/webpack/runtime/global","webpack://onnxruntime-web/webpack/runtime/hasOwnProperty shorthand","webpack://onnxruntime-web/webpack/runtime/make namespace object","webpack://onnxruntime-web/webpack/startup"],"names":["root","factory","exports","module","require","define","amd","a","i","self","__WEBPACK_EXTERNAL_MODULE__2174__","_scriptDir","e","document","currentScript","src","t","R","buffer","j","$","N","n","W","r","Y","U","q","o","B","u","c","s","ready","Promise","f","l","hasOwnProperty","d","p","m","h","b","g","_","y","window","w","importScripts","v","process","versions","node","A","ENVIRONMENT_IS_PTHREAD","T","O","locateFile","__dirname","normalize","readFileSync","Uint8Array","I","readFile","argv","length","replace","slice","on","cn","le","ae","exitCode","exit","inspect","Worker","M","console","error","location","href","indexOf","substr","lastIndexOf","XMLHttpRequest","open","send","responseText","responseType","response","onload","status","onerror","performance","E","x","S","print","log","bind","k","printErr","warn","thisProgram","quit","wasmBinary","D","noExitRuntime","WebAssembly","C","P","X","F","TextDecoder","this","decode","SharedArrayBuffer","call","G","H","subarray","String","fromCharCode","L","z","charCodeAt","V","Q","Z","It","HEAP8","Int8Array","HEAP16","Int16Array","HEAP32","Int32Array","HEAPU8","HEAPU16","Uint16Array","HEAPU32","Uint32Array","HEAPF32","Float32Array","HEAPF64","Float64Array","J","INITIAL_MEMORY","wasmMemory","Memory","initial","maximum","shared","Error","byteLength","K","ee","te","ne","re","ie","oe","preRun","shift","unshift","ue","ce","se","fe","onAbort","RuntimeError","de","startsWith","pe","preloadedImages","preloadedAudios","me","985948","he","Cc","Ub","get","be","Atomics","load","un","compareExchange","notify","ge","ye","Pb","fc","worker","_emscripten_futex_wake","_e","Sb","Rb","oc","od","Gc","store","Vt","Yt","Hc","receiveObjectTransfer","Nc","threadInit","Xc","threadCancel","Wc","threadExit","wc","setExitStatus","Pc","nc","tc","pop","Qt","uc","Nt","postMessage","cmd","vc","terminate","Ob","lc","Qb","jt","kc","Tb","Oc","push","splice","Jc","onmessage","data","Ac","targetThread","ud","transferList","Bt","Te","thread","loaded","Zb","threadId","text","alert","fn","returnCode","target","filename","lineno","message","urlOrBlob","mainScriptUrlOrBlob","wasmModule","xc","Dc","cd","now","we","Date","Ft","ve","Le","Ae","Yb","Uc","Rc","Sc","Qc","Tc","Ec","dc","Vb","detached","Zt","start_routine","Vc","arg","threadInfoStruct","stackBase","stackSize","time","bd","Oe","exchange","wait","Me","establishStackSpace","rn","tn","invokeEntryPoint","hrtime","__performance_now_clock_drift","Ee","xe","Se","ke","De","hd","Re","Ce","Pe","Xe","Ie","Fe","jd","je","Math","ceil","an","fill","Lc","Ic","yc","fd","rd","flags","offset","Ne","We","Ye","kd","Ue","qe","Be","Ge","He","arguments","en","nn","Gt","ze","Ve","Qe","querySelector","Ze","cc","sc","ed","Ht","bc","ac","getParameter","width","height","viewport","$e","Je","Ke","et","tt","nt","split","rt","it","BYTES_PER_ELEMENT","at","alpha","ot","type","dimensions","ut","windowDimensions","padding","strides","dilations","autoPad","layout","ct","st","ft","lt","dt","pt","mt","ht","bt","gt","_t","USER","LOGNAME","PATH","PWD","HOME","LANG","navigator","languages","yt","forEach","wt","vt","At","Tt","md","ld","Ot","Mt","Et","toTimeString","match","zc","getFullYear","getTimezoneOffset","max","Kt","Jt","Number","$t","xt","St","kt","Dt","Rt","getTime","getMonth","getDate","setDate","setMonth","setFullYear","Ct","toString","getDay","Nb","jc","$c","Zc","hc","$b","Wb","ic","vd","Yc","ad","RegExp","substring","abs","includes","Array","set","Xb","Mc","create","mc","object","ec","release","Pt","Xt","qt","dd","Ut","Lt","ba","Sa","ca","da","apply","copyWithin","hardwareConcurrency","min","grow","setTimeout","stack","zt","aa","depth","stencil","antialias","premultipliedAlpha","preserveDrawingBuffer","powerPreference","failIfMajorPerformanceCaveat","Kc","pd","qc","Bc","sd","td","rc","getContext","WebGLRenderingContext","nd","attributes","version","canvas","Fc","getExtension","vertexAttribDivisor","vertexAttribDivisorANGLE","drawArraysInstanced","drawArraysInstancedANGLE","drawElementsInstanced","drawElementsInstancedANGLE","createVertexArray","createVertexArrayOES","deleteVertexArray","deleteVertexArrayOES","bindVertexArray","bindVertexArrayOES","isVertexArray","isVertexArrayOES","drawBuffers","drawBuffersWEBGL","gd","qd","getSupportedExtensions","Qa","devicePreference","ml","createContext","ta","Ta","getUTCSeconds","getUTCMinutes","getUTCHours","getUTCDate","getUTCMonth","getUTCFullYear","getUTCDay","UTC","pc","getSeconds","getMinutes","getHours","setTime","Pa","Oa","Ka","add","Ja","averagePool2d","Ia","scale","bias","axis","epsilon","activation","batchNormalization","Ha","build","Ga","minValue","maxValue","clamp","Fa","concat","Ea","constant","Da","groups","inputLayout","filterLayout","conv2d","Ca","beta","aTranspose","bTranspose","gemm","Ba","input","Aa","leakyRelu","za","ya","matmul","xa","maxPool2d","sa","wa","relu","va","ua","reshape","Na","compute","Ma","La","qa","ra","resource","oa","pa","ma","na","la","ka","ja","ia","Ra","ha","MLGraphBuilder","ga","fa","ea","asm","nb","Ua","sb","monitorRunDependencies","clearInterval","instance","fetch","credentials","then","ok","arrayBuffer","catch","resolve","instantiate","instantiateWasm","instantiateStreaming","___wasm_call_ctors","_OrtInit","Va","_OrtCreateSessionOptions","Wa","_OrtSessionOptionsAppendExecutionProviderWebNN","Xa","_OrtAddSessionConfigEntry","Ya","_OrtReleaseSessionOptions","Za","_OrtCreateSession","_a","_OrtReleaseSession","$a","_OrtGetInputCount","ab","_OrtGetOutputCount","bb","_OrtGetInputName","cb","_OrtGetOutputName","db","_OrtFree","eb","_OrtCreateTensor","fb","_OrtGetTensorData","gb","_OrtReleaseTensor","hb","_OrtCreateRunOptions","ib","_OrtAddRunConfigEntry","jb","_OrtReleaseRunOptions","kb","_OrtRun","lb","_OrtEndProfiling","mb","_malloc","ob","___errno_location","pb","_free","qb","_pthread_self","rb","_emscripten_tls_init","_emscripten_current_thread_process_queued_calls","tb","Wt","_emscripten_register_main_browser_thread_id","ub","_emscripten_main_browser_thread_id","vb","_emscripten_sync_run_in_main_thread_4","wb","_emscripten_main_thread_process_queued_calls","xb","_emscripten_run_in_main_runtime_thread_js","yb","__emscripten_call_on_thread","zb","_pthread_testcancel","Ab","_pthread_exit","Bb","__emscripten_thread_init","Cb","___pthread_tsd_run_dtors","Db","_emscripten_get_global_libc","Eb","__get_tzname","Fb","__get_daylight","Gb","__get_timezone","Hb","stackSave","Ib","stackRestore","Jb","stackAlloc","Kb","_emscripten_stack_set_limits","Lb","_memalign","Mb","__emscripten_allow_main_runtime_queued_calls","__emscripten_main_thread_futex","name","sn","calledRun","onRuntimeInitialized","postRun","setStatus","_fflush","onExit","UTF8ToString","stringToUTF8","lengthBytesUTF8","keepRuntimeAlive","PThread","ExitStatus","run","preInit","ortWasm","undefined","ctx","params","index","pending","reject","err","base64","string","charAt","b64","s64","encode","start","end","parts","chunk","join","invalidEncoding","test","EventEmitter","_listeners","prototype","evt","off","listeners","emit","args","f32","f8b","writeFloat_f32_cpy","val","buf","pos","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatLE","writeFloatBE","readFloatLE","readFloatBE","writeFloat_ieee754","writeUint","sign","isNaN","round","exponent","floor","LN2","pow","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleLE","writeDoubleBE","readDoubleLE","readDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","lo","hi","inquire","moduleName","mod","eval","Object","keys","alloc","size","SIZE","MAX","slab","utf8","len","read","write","c1","c2","flatbuffers","Offset","Table","SIZEOF_SHORT","SIZEOF_INT","FILE_IDENTIFIER_LENGTH","SIZE_PREFIX_LENGTH","Encoding","UTF8_BYTES","UTF16_STRING","int32","float32","float64","isLittleEndian","Long","low","high","ZERO","toFloat64","equals","other","Builder","opt_initial_size","initial_size","ByteBuffer","allocate","space","minalign","vtable","vtable_in_use","isNested","object_start","vtables","vector_num_elems","force_defaults","clear","capacity","forceDefaults","dataBuffer","asUint8Array","bytes","position","prep","additional_bytes","align_size","old_buf_size","growByteBuffer","pad","byte_size","writeInt8","value","writeInt16","writeInt32","writeInt64","writeFloat32","writeFloat64","addInt8","addInt16","addInt32","addInt64","addFloat32","addFloat64","addFieldInt8","voffset","defaultValue","slot","addFieldInt16","addFieldInt32","addFieldInt64","addFieldFloat32","addFieldFloat64","addFieldOffset","addOffset","addFieldStruct","nested","obj","notNested","new_buf_size","nbb","setPosition","startObject","numfields","endObject","vtableloc","trimmed_size","existing_vtable","vt1","outer_loop","vt2","readInt16","finish","root_table","opt_file_identifier","opt_size_prefix","size_prefix","file_identifier","finishSizePrefixed","requiredField","table","field","table_start","vtable_start","readInt32","startVector","elem_size","num_elems","alignment","endVector","createString","codePoint","createLong","bytes_","position_","readInt8","readUint8","readUint16","readUint32","readInt64","readUint64","readFloat32","readFloat64","writeUint8","writeUint16","writeUint32","writeUint64","getBufferIdentifier","result","__offset","bb_pos","vtable_offset","__union","__string","opt_encoding","__indirect","__vector","__vector_len","__has_identifier","ident","__esModule","Guid","guid","TypeError","EMPTY","isGuid","validator","gen","createEmpty","parse","raw","count","out","random","isEmpty","toJSON","wasm","Instance","Module","unsigned","isLong","__isLong__","defineProperty","INT_CACHE","UINT_CACHE","fromInt","cachedObj","cache","fromBits","fromNumber","UZERO","TWO_PWR_64_DBL","MAX_UNSIGNED_VALUE","TWO_PWR_63_DBL","MIN_VALUE","MAX_VALUE","neg","TWO_PWR_32_DBL","lowBits","highBits","pow_dbl","fromString","str","radix","RangeError","radixToPower","parseInt","power","mul","fromValue","TWO_PWR_16_DBL","TWO_PWR_24","ONE","UONE","NEG_ONE","LongPrototype","toInt","toNumber","isZero","isNegative","eq","radixLong","div","rem1","sub","rem","remDiv","digits","getHighBits","getHighBitsUnsigned","getLowBits","getLowBitsUnsigned","getNumBitsAbs","bit","eqz","isPositive","isOdd","isEven","notEquals","neq","lessThan","comp","lessThanOrEqual","lte","greaterThan","greaterThanOrEqual","gte","compare","thisNeg","otherNeg","negate","not","addend","a48","a32","a16","a00","b48","b32","b16","c48","c32","c16","c00","subtract","subtrahend","multiply","multiplier","get_high","b00","divide","divisor","approx","res","div_u","div_s","toUnsigned","shru","shr","shl","log2","delta","approxRes","approxRem","modulo","rem_u","rem_s","and","or","xor","shiftLeft","numBits","shiftRight","shiftRightUnsigned","shr_u","toSigned","toBytes","toBytesLE","toBytesBE","fromBytes","fromBytesLE","fromBytesBE","valuesById","values","onnx","$protobuf","$Reader","Reader","$Writer","Writer","$util","util","$root","roots","Version","AttributeProto","properties","floats","ints","strings","tensors","graphs","refAttrName","docString","newBuffer","emptyArray","writer","uint32","float","int64","TensorProto","fork","ldelim","GraphProto","encodeDelimited","reader","tag","end2","skipType","decodeDelimited","verify","isString","isInteger","isArray","fromObject","LongBits","toObject","options","arrays","defaults","long","longs","enums","json","isFinite","AttributeType","constructor","toJSONOptions","ValueInfoProto","TypeProto","NodeProto","output","attribute","opType","domain","ModelProto","opsetImport","metadataProps","irVersion","producerName","producerVersion","modelVersion","graph","OperatorSetIdProto","StringStringEntryProto","key","TensorAnnotation","quantParameterTensorNames","tensorName","initializer","valueInfo","quantizationAnnotation","dims","floatData","int32Data","stringData","int64Data","externalData","doubleData","uint64Data","dataType","segment","rawData","dataLocation","Segment","double","uint64","DataLocation","DataType","begin","TensorShapeProto","dim","Dimension","$oneOfFields","dimValue","dimParam","denotation","oneOfGetter","oneOfSetter","oneofs","tensorType","Tensor","elemType","shape","protobuf","configure","_configure","BufferWriter","BufferReader","rpc","indexOutOfRange","writeLength","create_array","Buffer","isBuffer","readLongVarint","bits","readFixed32_end","readFixed64","_slice","sint32","bool","fixed32","sfixed32","skip","wireType","BufferReader_","merge","sint64","zzDecode","fixed64","sfixed64","utf8Slice","Service","rpcImpl","requestDelimited","responseDelimited","Boolean","rpcCall","method","requestCtor","responseCtor","request","callback","asPromise","endedByRPC","zero","zzEncode","zeroHash","from","toLong","fromHash","hash","toHash","mask","part0","part1","part2","dst","ifNotSet","newError","CustomError","captureStackTrace","pool","isNode","global","freeze","emptyObject","isObject","isset","isSet","prop","utf8Write","_Buffer_from","_Buffer_allocUnsafe","sizeOrArray","dcodeIO","key2Re","key32Re","key64Re","longToHash","longFromHash","lcFirst","toLowerCase","ProtocolError","fieldNames","fieldMap","encoding","allocUnsafe","Op","next","noop","State","head","tail","states","writeByte","VarintOp","writeVarint64","writeFixed32","_push","writeBytes","reset","BufferWriter_","writeStringBuffer","writeBytesBuffer","copy","onnxjsBackend","pathOrBuffer","session","Session","loadModel","OnnxjsSessionHandler","initializeFlags","env","initTimeout","simd","proxy","numThreads","numCpuLogicalCores","cpus","wasmBackend","initWasm","promisify","handler","OnnxruntimeWebAssemblySessionHandler","registerBackend","AttributeWithCacheKeyImpl","assign","_cacheKey","getOwnPropertyNames","sort","map","createAttributeWithCacheKey","ortFbs","onnxruntime","experimental","fbs","Attribute","_attributes","Map","attr","getValue","getType","delete","valueAndType","FLOAT","INT","STRING","TENSOR","FLOATS","INTS","STRINGS","TENSORS","attrType","GRAPH","GRAPHS","getValueNoCheck","LongUtil","longToNumber","arr","numberValue","maybeLong","fromProto","fromOrtTensor","utf8String","byteOffset","getValueNoCheckFromOnnxFormat","getValueNoCheckFromOrtFormat","floatsArray","intsLength","stringsLength","tensorsLength","backendsCache","tryLoadBackend","backendHint","backendObj","backend","initialize","createSessionHandler","dispose","isBackend","init","webgl","WebGLBackend","resolveBackend","hint","hints","contextId","matmulMaxBatchSize","textureCacheMode","pack","async","glContext","createWebGLContext","Logger","setWithEnv","verbose","warning","context","WebGLSessionHandler","CoordsGlslLib","GlslLib","super","offsetToCoords","coordsToOffset","toVec","valueFrom","getCommonUtilFuncs","getInputsSamplingSnippets","getOutputSamplingSnippet","GlslLibRoutine","outputLayout","outputTextureLayout","isPacked","getPackedOutputSamplingSnippet","getUnpackedOutputSamplingSnippet","outShape","unpackedShape","outTexShape","funcName","getOutputScalarCoords","getOutputPacked1DCoords","getOutputPacked2DCoords","getOutputPacked3DCoords","getOutputPackedNDCoords","floatTextureSetRGBASource","getGlsl","getOutputUnpacked1DCoords","getOutputUnpacked2DCoords","getOutputUnpacked3DCoords","getOutputUnpacked4DCoords","getOutputUnpacked5DCoords","getOutputUnpacked6DCoords","floatTextureSetRSource","texShape","packedTexShape","source","ArrayUtil","arraysEqual","texelsInLogicalRow","texelsInBatch","texelsInBatchN","batches","coords","rank","coordsToCompute","coordsFromIndexSnippet","stride","glsl","texture2D","programInfo","inputNames","samplerName","inputTextureLayouts","generateShaderFuncNameFromInputSamplerName","getPackedSamplerFromInput","getUnpackedSamplerFromInput","outCoordFuncName","generateShaderFuncNameFromInputSamplerNameAtOutCoords","getPackedSamplerAtOutputCoords","getUnpackedSamplerAtOutputCoords","inShape","texName","texFuncSnippet","inRank","outRank","broadcastDims","BroadcastUtil","getBroadcastDims","getCoordsDataType","rankDiff","coordsSnippet","fields","getGlChannels","unpackedCoordsSnippet","isInputScalar","ShapeUtil","isOutputScalar","rows","cols","inTexShape","getPackedSamplerScalar","getPackedSampler1D","getPackedSampler2D","getPackedSampler3D","getPackedSamplerND","getUnpackedSamplerScalar","getUnpackedSampler1D","getUnpackedSampler2D","getUnpackedSampler3D","getUnpackedSampler4D","getUnpackedSampler5D","getUnpackedSampler6D","texNumR","texNumC","packedSampler","valuesPerRow","squeezedShape","keptDims","newInputShape","squeezeInputShape","newInputLayout","JSON","stringify","samplerRoutine","routineBody","getSqueezedParams","dependencies","tNumR","tNumC","newShape","squeezeShape","stride0","stride1","routine","revDims","reverse","stride2","stride3","stride4","xScale","yScale","stridesBlock","body","getValueFromSingle","varName","transpose","FunctionType","nodes","cycleCheck","Set","alreadyTraversed","createOrderedNodes","graphNodes","dfsTraverse","has","EncodingGlslLib","encodeFloat32","decodeFloat32","endianness","ArrayBuffer","FragColorGlslLib","setFragColor","getColorAsFloat","INLINE_FUNC_DEF_REGEX","script","inlineDefs","exec","tokens","trim","filter","regexString","regex","variable","declLine","newBody","paramRedecLine","replacement","libs","glslLibRoutineDependencyGraph","GlslContext","glslRegistry","lib","libName","routinesInLib","getFunctions","currentNode","GlslLibRoutineNode","addDependency","shaderSource","hasMain","getDefaultFragShaderMain","replaceInlines","getFragShaderPreamble","getUniforms","variables","getImports","routinesIncluded","selectGlslLibRoutinesToBeIncluded","routines","classAndRoutine","TopologicalSortGlslRoutines","returnOrderedNodes","samplers","uniformLines","sampler","arrayLength","VecGlslLib","ShapeUtilsGlslLib","bcastIndex","bcastMatmulIndex","offsetToIndices","indicesToOffset","incrementIndices","outputRank","dimOffset","block","indexToOffsetSingle","offsetToIndicesSingle","shapeInit","GLSL_ES_2_0","varyingVertex","varyingFrag","outputDeclaration","GLSL_ES_3_0","outputShapeLength","binaryVecFunctions","copyVec","setVecItem","getVecItem","nameOp","fname","assignmentBlock","packedTextureDataCache","unpackedTextureDataCache","textureType","calculateTextureWidthAndHeight","layoutStrategy","program","inputs","inputTypes","inputTextureDatas","getOrCreateTextureData","texture","cacheHint","getProgramInfoUniqueKey","artifact","programManager","getArtifact","createTextureLayoutFromTextureType","outputTextureData","createTextureData","setArtifact","runProgram","executeProgram","tensor","TextureType","packed","getTextureData","dataId","unpack","packedLastDimension","group","channels","adjustedKernelShape","adjustedLayout","numberData","numFeatureMaps","oldRowSize","newRowSize","oldOffset","newOffset","unpackedTextureLayout","createTextureLayoutFromShape","reverseWH","unpackedTextureData","usage","textureManager","createTextureFromLayout","createTextureDataFromTexture","reshapedDims","inputTD","unpacked","newTextureLayout","computeStrides","isReshapeCheap","squeezedInputShape","processDims3D","squeezedOutputShape","squeezedInputTensor","reshapePacked","squeezedOutputTensor","createPackedReshape3DProgramInfoLoader","tensorId","textureData","_id","readTexture","readTextureAsync","setTextureData","isInitializer","clearActiveTextures","releaseTexture","isFloat32DownloadSupported","readUint8TextureAsFloat","encodeAsUint8","createPackProgramInfoLoader","createUnpackProgramInfoLoader","WEBGL_OP_RESOLVE_RULES","unaryOps","acos","binaryOps","asin","atan","averagePool","parseAveragePoolAttributes","parseBatchNormalizationAttributes","clip","parseClipAttributes","parseConcatAttributes","conv","parseConvAttributes","cos","identity","depthToSpace","parseDepthToSpaceAttributes","equal","elu","parseEluAttributes","exp","flatten","parseFlattenAttributes","gather","parseGatherAttributes","parseGemmAttributesV7","parseGemmAttributesV11","globalAveragePool","parseGlobalAveragePoolAttributes","globalMaxPool","greater","imageScaler","parseImageScalerAttributes","instanceNormalization","parseInstanceNormalizationAttributes","parseLeakyReluAttributes","less","matMul","parseMatMulAttributes","maxPool","parseMaxPoolAttributes","parsePadAttributes","pRelu","reduceLogSum","parseReduceAttributes","reduceMax","reduceMean","reduceMin","reduceProd","reduceSum","reduceLogSumSquare","resize","parseResizeAttributesV10","parseResizeAttributesV11","sigmoid","sin","sliceV10","parseSliceAttributes","softmax","parseSoftmaxAttributes","parseSplitAttributes","sqrt","squeeze","parseSqueezeAttributes","sum","tan","tanh","tile","parseTransposeAttributes","upsample","parseUpsampleAttributesV7","parseUpsampleAttributesV9","unsqueeze","parseUnsqueezeAttributes","batchNormalizationProgramMetadata","inferenceHandler","validateInputs","cacheKey","createBatchNormalizationProgramInfo","getFloat","momentum","spatial","getInt","scaleWidth","scaleHeight","mean","var_","glslAdd","ValueBased","glslDiv","glslMul","glslSub","glslEqual","glslGreater","glslLess","glslAnd","glslOr","glslXor","glslPow","glslBuiltinBinary","glslPRelu","createBinaryProgramInfoLoader","glslFunc","outputTensorType","createBinaryProgramInfo","isBroadcast","areEqual","outputShape","usePackedTexture","calculatedShape","calcShape","aRank","bRank","aBcast","bBcast","createPackedConcatProgramInfoLoader","metadata","inputCount","inputShape","dataNShape","axisIndex","getChannels","dtype","unpackChannel","unpackFromChannel","shapes","offsets","channel","lastChannels","allChannels","getValueSnippet","getShiftedChannelsSnippet","lastIndex","createPackedConcatProgramInfo","channelIdx","idx","createUnpackedConcatProgramInfoLoader","sizeInConcatAxis","previousSum","getTextureIndexWhereDataResidesMethod","getTextureIndexWhereDataResidesLinearSearch","getTextureIndexWhereDataResidesBinarySearch","getFetchDataFromCorrectTextureMethod","getGetSizeInConcatAxisValueFromIndexMethod","createUnpackedConcatProgramInfo","numberOfTensors","tensorRank","codeLines","inputType","inputDimensionality","createUnpackedGroupedConvProgramInfoLoader","hasBias","processBias","xShape","wShape","outputChannelsPerGroup","kernelShape","pads","calculateOutputShape","activationFunction","applyActivation","getActicationSnippet","createUnpackedGroupedConvProgramInfo","conv2DPackedPointwise","xshape","kshape","reshapedX","reshapedK","matmulInputs","matmulOutput","createPackedMatmulProgramInfoLoader","conv2DPacked","im2colOutput","createPackedIm2ColProgramInfoLoader","kernelReshaped","adjustPads","batchSize","inputSpatialShape","spatialRank","outChannels","dilatedKernelShape","outputSpatialShape","adjustedAttributes","getAdjustedConvAttributes","packMode","isPointwise","conv2DUnpackedPointwise","conv2DUnpacked","reshapeUnpacked","createMatmulProgramInfoLoader","xIm2Col","createIm2ColProgramInfoLoader","dotProductInputs","createDotProductProgramInfoLoader","PoolConvUtil","adjustPadsBasedOnAutoPad","newAttributes","activationAttributes","parseInternalActivationAttributes","getString","getInts","blocksize","blocksizeSqr","transposePerm","mode","firstReshapeShape","firstReshapedTensor","transposeAttributes","perm","transposeOutput","secondReshapeShape","activationCacheKey","createDotProductProgramMetadata","im2colShape","calculateIm2ColDims","kWidth","kHeight","im2colStrides","im2colWidth","im2colHeight","initValue","sharedDim","createDotProductProgramInfo","outputDims","flattenShape","func","glslRelu","glslSigmoid","glslClip","clipMin","clipMax","activationName","createGatherProgramInfoLoader","gatherProgramMetadata","indexDataShape","normalizeAxis","indexCopyOps","createGatherProgramInfo","NUMBER_TYPES","createGemmProgramInfoLoader","parseGemmAttributes","isOptionalC","transA","transB","createGemmProgramInfo","aShape","bShape","GemmUtil","getShapeOfGemmResult","line","wshape","kernelSize","unrolled","row","col","createPackedIm2ColProgramInfo","im2colDims","createIm2ColProgramInfo","createImageScalerProgramInfoLoader","getFloats","imageScalerProgramMetadata","createGetBiasMethod","createImageScalerProgramInfo","numChannels","meanAndVariance","createMeanAndVarianceProgramInfoLoader","createComputeOutputProgramInfoLoader","meanAndVarianceProgramMetadata","xDims","channelSize","createMeanAndVarianceProgramInfo","computeOutputProgramMetadata","meanAndVarianceShape","textureWidth","textureHeight","meanAndVarianceWidth","meanAndVarianceHeight","createComputeOutputProgramInfo","sharedDimIndex","coordsDataType","allGlChannels","getBiasForMatmulSnippet","getBiasForMatmul","getBcastedSamplerForMatmulSnippet","unpackedACoordsSnippet","unpackedBCoordsSnippet","inAShape","inBShape","inARank","inBRank","rankADiff","rankBDiff","broadcastADims","broadcastBDims","coordsASnippet","coordsBSnippet","swapDimSnippet","getBcastSamplerForMatmul","getSamplerAInLoopSnippet","getA","getSamplerBInLoopSnippet","getB","createPackedMatmulProgramInfo","arank","brank","createMatmulProgramInfo","packProgramMetadata","unpackedReversed","inputRank","setup","reversedInputWH","outOfBoundsCondition","cond","getOutOfBoundsCondition","getOutput","createPackProgramInfo","getVecChannels","padProgramMetadata","createPadProgramInfo","padShape","getPadFunction","getPadConstant","getPadReflect","getPadEdge","createAveragePoolProgramInfo","ceilMode","countIncludePad","isGlobalOperator","adjustPoolAttributes","computePoolOutputShape","op2","generatePoolingCode","createMaxPoolProgramInfo","storageOrder","globalMaxPoolAttributes","globalMaxPoolMetadata","inputDims","op1","kw","sw","pwStart","pwEnd","dimW","codeW","codeH","codeHEnd","kh","sh","phStart","phEnd","dimH","kernelStrides","stridesRank","padsRank","offsetToIndicesFunction","copyInputDims","copyArray","copyPads","copyKernelStrides","copyStrides","padCode","reduce","cur","array","arrayName","reduceOp","reduceProgramMetadata","createReduceProgramInfo","axes","keepDims","iRank","idxCopy","normalizeAxes","ops","reduceOps","idxZero","input3D","outputShape3D","createPackedReshape3DProgramMetadata","inputShape3D","mainLoop","outputCoords","getReshapedInputCoords","getFlattenedIndexFrom3D","createPackedReshape3DProgramInfo","batch","isCheapReshape","calculateReshapedDims","integerData","resizeProgramMetadata","createPackedResizeProgramInfo","parseUpsampleAttributes","scales","prepareInputs","every","coordinateTransformMode","outputHeight","outputWidth","inputHeight","inputWidth","scalesHeight","scalesWidth","getSourceFracIndex","outputSizes","scalesTensor","scalesInputIdx","sizesInputIdx","parseScalesData","isResize","sizesTensor","parseScalesDataFromOutputSize","yDims","scalesValidation","sliceProgramMetadata","createSliceProgramInfo","starts","ends","normalizedAxes","sliceOps","validateInputsV10","generateSliceAttributesFromInputs","some","softmaxComputeMaxProgramMetadata","softmaxComputeScaleProgramMetadata","softmaxProgramMetadata","sizeToDimension","sizeFromDimension","computeMaxProgramInfo","createComputeMaxProgramInfo","computeScaleProgramInfo","createComputScaleProgramInfo","softMaxProgramInfo","createSoftMaxProgramInfo","maxElementPerLogicalRow","normalizationPerLogicalRow","splitProgramMetadata","getProgramCount","createSplitProgramInfo","numOutputs","outputs","SplitUtil","splitShape","sumProgramMetadata","createSumProgramInfo","tileProgramMetadata","createTileProgramInfo","tileOps","transposeProgramMetadata","createTransposeProgramInfo","getAdjustedPerm","unpackedOutputShape","getOutputShape","getPermFunctionBody","sortBasedOnPerm","reverseFunc","downloadUint8AsFloat","glslAbs","glslBuiltinUnary","glslAcos","glslAsin","glslAtan","glslCeil","glslCos","glslElu","glslExp","glslFloor","glslIdentity","glslLeakyRelu","glslLog","glslNeg","glslNot","glslSin","glslSqrt","glslTan","glslTanh","createElementwiseProgramInfoLoader","createElementwiseProgramInfo","unpackProgramMetadata","createUnpackProgramInfo","innerDims","sourceCoords","getSourceCoords","unsqueezeShape","upsampleProgramMetadata","createUpsampleProgramInfo","opset","extrapolationValue","needRoiInput","useExtrapolation","nearestMode","cubicCoefficientA","excludeOutside","useNearest2xOptimization","roiInputIdx","outputPitches","inputPitches","precalculatedPitches","getInputFloatFunction","profiler","textureLayoutStrategy","repo","attributesBound","buildArtifact","event","gl","useProgram","bindOutput","bindAttributes","attribLocations","bindUniforms","uniformLocations","draw","vertexShader","deleteShader","deleteProgram","preprocessor","GlslPreprocessor","fragScript","preprocess","compile","getUniformLocations","getAttribLocations","fragShaderScript","vertexShaderScript","getVertexShaderSource","compileShader","VERTEX_SHADER","debug","fragShader","FRAGMENT_SHADER","createProgram","attachFramebuffer","positionHandle","textureCoordHandle","textureCoord","setVertexAttributes","textures","texturePosition","find","bindTexture","uniform1fv","uniform1f","uniform1iv","uniform1i","uniformHandle","bindTextureToUniform","getAttribLocation","getUniformLocation","reference","PreferLogicalStrategy","maxTextureSize","ProgramManager","TextureManager","reuseTextures","pack2unpackMap","unpack2packMap","WebGLInferenceHandler","initializers","getValues","opsets","op","resolveOperator","impl","opImpl","opInit","internalFormat","R32F","format","RED","RGBA32F","RGBA","textureSize","dataSize","dest","ALPHA","UNSIGNED_BYTE","_textureSize","isEmptyArray","parseAxisParam","assert","ax","isInt","sizeFromShape","sizeToSquarishShape","prefs","breakAxis","wsize","hsize","totalSize","wh","computeTexture","logShape","squeezeResult","dimsToSkip","computeTextureWH","inferredDims","reversedWH","config","pendingRead","inUseTextures","idleTextures","textureLookup","textureDataType","toEncoderType","encoder","getEncoder","updateTexture","toTextureData","allocateTexture","toTensorData","subscribers","createAndWaitForFence","tensorData","deleteTexture","_dataType","checkFn","delayFn","_counter","maxCounter","tryCount","tryFn","nextBackoff","toUpperCase","createNewWebGLContext","createElement","createCanvas","WebGLContext","webgl2","isContextLost","disable","DEPTH_TEST","STENCIL_TEST","BLEND","DITHER","POLYGON_OFFSET_FILL","SAMPLE_COVERAGE","enable","SCISSOR_TEST","CULL_FACE","cullFace","BACK","linearSearchLastTrue","frameBufferBound","itemsToPoll","getExtensions","vertexbuffer","createVertexbuffer","framebuffer","createFramebuffer","queryVitalParameters","createTexture","TEXTURE_2D","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","checkError","texSubImage2D","bindFramebuffer","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","scissor","readPixels","ACTIVE_TEXTURE","TEXTURE0","TEXTURE_BINDING_2D","FRAMEBUFFER_BINDING","vertexAttribPointer","enableVertexAttribArray","attachShader","linkProgram","shaderType","shader","createShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","activeTexture","drawArrays","TRIANGLE_STRIP","getError","label","DataEncoders","RedFloat32DataEncoder","isRenderFloat32Supported","RGBAFloatDataEncoder","textureHalfFloatExtension","HALF_FLOAT_OES","Uint8DataEncoder","unit","maxTextureImageUnits","disposed","deleteFramebuffer","bindBuffer","ARRAY_BUFFER","deleteBuffer","ELEMENT_ARRAY_BUFFER","createBuffer","geometry","createDefaultGeometry","bufferData","STATIC_DRAW","isFloatTextureAttachableToFrameBuffer","checkFloatTextureAttachableToFrameBuffer","checkRenderFloat32","checkFloat32Download","isBlendSupported","checkFloat32Blend","MAX_TEXTURE_SIZE","MAX_TEXTURE_IMAGE_UNITS","colorBufferFloatExtension","disjointTimerQueryWebgl2Extension","textureFloatExtension","frameBuffer","isComplete","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","fragmentShader","POINTS","NO_ERROR","gl2","ext","query","createQuery","beginQuery","TIME_ELAPSED_EXT","endQuery","available","disjoint","getQueryParameter","QUERY_RESULT_AVAILABLE","GPU_DISJOINT_EXT","timeElapsed","QUERY_RESULT","deleteQuery","repeatedTry","isTimerResultAvailable","getTimerResult","fenceContext","createFence","pollFence","isFencePassed","fenceSync","SYNC_GPU_COMMANDS_COMPLETE","flush","clientWaitSync","ALREADY_SIGNALED","CONDITION_SATISFIED","addItemToPoll","isDoneFn","resolveFn","pollItems","KernelOp","getNodes","_ops","_starter","resolved","_values","getInputIndices","sessionHandler","modelInputs","createInferenceHandler","graphInputs","sequence","graphValues","rear","thisOpIndex","thisOp","inputList","inputTensors","outputList","downstreamNodes","currentDownstreamNodeIndex","to","currentDownstreamNode","getOutputIndices","outputIndex","outputTensor","getData","Graph","graphProto","GraphImpl","Value","_from","_to","ProtoUtil","tensorValueTypeFromProto","Node","_nodeProto","tensorAttributesFromORTFormat","executeNode","graphInitializer","buildGraph","transformGraph","checkIsAcyclic","_allInputIndices","_allInputNames","_allOutputIndices","_allOutputNames","_allData","_nodes","buildGraphFromOnnxFormat","buildGraphFromOrtFormat","dataIndices","nodesIndices","inputValueNames","currentIndex","tensorDimsFromProto","tensorDataTypeFromProto","nodeProto","pick","dataIndex","inputsLength","inputName","nodeArgsLength","nodeArgs","valueType","TypeInfoValue","tensor_type","TensorTypeAndShape","dimLength","initializersLength","tensorDimsFromORTFormat","outputsLength","outputName","nodesLength","attributesLength","starters","nodesStack","nodesState","nodeIndex","outgoingEdgeIndex","downstreamNodeIndex","removeAllIdentityNodes","removeAllDropoutNodes","fuseConvActivationNodes","finalizeGraph","ind","inputValueIndex","outputValueIndex","nodesConsumingOutput","delIndex","replaceIndex","deleteNode","isActivation","child","SEVERITY_VALUE","info","fatal","LOGGER_PROVIDER_MAP","_severity","_content","_category","severity","content","category","color","LOGGER_DEFAULT_CONFIG","provider","minimalSeverity","logDateTime","logSourceLocation","LOGGER_CONFIG_MAP","arg0","arg1","arg2","arg3","logInternal","toISOString","previousConfig","logLevel","Event","startTime","endCallback","timer","endTimer","waitForQueryAndGetTime","EventRecord","endTime","maxNumberEvents","flushBatchSize","flushIntervalInMilliseconds","_started","_flushPointer","_maxNumberEvents","_flushBatchSize","_flushIntervalInMilliseconds","_timingEvents","_flushTime","logOneEvent","isPromise","reason","eventRes","endSync","beginTimer","checkTimer","toFixed","currentTime","previousPointer","isOrtFormat","loadFromOnnxFormat","loadFromOrtFormat","modelProto","_opsets","_graph","ortModel","InferenceSession","getRootAsInferenceSession","model","opsetImportLength","opsetId","INT_TYPES","FLOAT_TYPES","matchSelector","selector","endsWith","rangeStart","pair","rangeEnd","rules","rule","versionSelector","DimensionValueType","TensorDataType","NodeType","Shape","__init","builder","numElems","startShape","addDim","endShape","DimensionValue","optionalEncoding","valueOffset","denotationOffset","startDimension","addValue","addDenotation","endDimension","UNKNOWN","dimType","dimParamOffset","startDimensionValue","addDimType","addDimValue","addDimParam","endDimensionValue","UNDEFINED","shapeOffset","startTensorTypeAndShape","addElemType","addShape","endTensorTypeAndShape","MapType","TypeInfo","keyType","valueTypeOffset","startMapType","addKeyType","addValueType","endMapType","SequenceType","elemTypeOffset","startSequenceType","endSequenceType","EdgeEnd","node_index","src_arg_index","dst_arg_index","NodeEdge","inputEdgesOffset","outputEdgesOffset","startNodeEdge","addNodeIndex","addInputEdges","addOutputEdges","endNodeEdge","Primitive","nameOffset","docStringOffset","domainOffset","sinceVersion","opTypeOffset","executionProviderTypeOffset","inputsOffset","outputsOffset","attributesOffset","inputArgCountsOffset","implicitInputsOffset","startNode","addName","addDocString","addDomain","addSinceVersion","addIndex","addOpType","addType","addExecutionProviderType","addInputs","addOutputs","addAttributes","addInputArgCounts","addImplicitInputs","endNode","ValueInfo","typeOffset","startValueInfo","endValueInfo","NONE","startTypeInfo","endTypeInfo","OperatorSetId","startOperatorSetId","addVersion","endOperatorSetId","dimsOffset","rawDataOffset","stringDataOffset","startTensor","addDims","addDataType","addRawData","addStringData","endTensor","SparseTensor","valuesOffset","indicesOffset","startSparseTensor","addValues","addIndices","endSparseTensor","sOffset","tOffset","gOffset","floatsOffset","intsOffset","stringsOffset","tensorsOffset","graphsOffset","startAttribute","addF","addI","addS","addT","addG","addFloats","addInts","addStrings","addTensors","addGraphs","endAttribute","initializersOffset","nodeArgsOffset","nodesOffset","maxNodeIndex","nodeEdgesOffset","sparseInitializersOffset","startGraph","addInitializers","addNodeArgs","addNodes","addMaxNodeIndex","addNodeEdges","addSparseInitializers","endGraph","Model","opsetImportOffset","producerNameOffset","producerVersionOffset","graphOffset","graphDocStringOffset","startModel","addIrVersion","addOpsetImport","addProducerName","addProducerVersion","addModelVersion","addGraph","addGraphDocString","endModel","KernelCreateInfos","nodeIndicesOffset","kernelDefHashesOffset","startKernelCreateInfos","addNodeIndices","addKernelDefHashes","endKernelCreateInfos","SubGraphSessionState","SessionState","graphIdOffset","sessionStateOffset","startSubGraphSessionState","addGraphId","addSessionState","endSubGraphSessionState","kernelsOffset","subGraphSessionStatesOffset","startSessionState","addKernels","addSubGraphSessionStates","endSessionState","ortVersionOffset","modelOffset","startInferenceSession","addOrtVersion","addModel","endInferenceSession","outputNames","feeds","_fetches","_options","inputMap","feed","outputMap","startProfiling","endProfiling","_initialized","Profiler","graphInputTypes","graphInputDims","_model","getInputNames","getOutputNames","stop","isView","modelProtoBlob","onGraphInitialized","initializeOps","_executionPlan","ExecutionPlan","normalizeAndValidateInputs","outputTensors","execute","createOutput","modelInputNames","sortedInputs","sortedInputsIndex","validateInputTensorDims","modelInputIndices","modelValues","graphInput","validateInputTensorTypes","givenInputs","expectedType","actualType","noneDimSupported","expectedDims","actualDims","compareTensorDims","modelOutputNames","dataProvider","asyncDataProvider","validateDimsAndCalcSize","empty","dataviewConstructor","sizeof","createView","indices","_strides","tensorProto","dataDest","dataSource","DataView","elementSize","sizeofProto","readProto","INT32","INT16","UINT16","INT8","UINT8","BOOL","INT64","DOUBLE","UINT32","UINT64","element","ortTensor","stringDataLength","rawDataArray","rawDataLength","view","getUint8","getInt8","getUint16","getInt16","getFloat32","getInt32","getUint32","getFloat64","expectedDimensions","expr","msg","n1","n2","MatMulUtil","dimsA","dimsB","adims","bdims","isMatMul","crank","cdims","cShapeMatMul","calcMatMulShape","aLen","bLen","broadcastedIndices","originalShape","originalIndices","fillIndex","inplace","resultType","outputIndices","originalIndicesA","originalIndicesB","rest","valA","valB","isAScalar","isBScalar","finalShape","finalRank","targetIndex","sourceIndex","blockSize","leftShape","transLeft","rightShape","transRight","biasShape","kDim","isValidBroadcast","typeProto","dimsLength","getSizeFromDimensionRange","axisToIncrementOn","originalDims","shapeHints","nDims","unknownDimension","newTensorSize","oldTensorSize","shape1","shape2","total","right","inSqueezeList","inputDimsIterator","determineSplit","numElementsAlongAxis","ReduceUtil","keepdims","calcReduceShape","inputStrides","indicesY","calcReduceByAxis","curAxisInd","step","adjustPadAndReturnShape","computeShapeHelper","filterDims","inSize","dilation","kernel","padHeadIndex","padTailIndex","dkernel","padNeeded","iterateExtraOptions","prefix","seen","entries","isProxy","proxyWorker","initWasmCallbacks","initOrtCallbacks","initializing","initialized","aborted","createSessionCallbacks","releaseSessionCallbacks","runCallbacks","endProfilingCallbacks","ensureWorker","onProxyWorkerMessage","ev","scriptSrc","wasmPaths","in","initializeWebAssembly","initOrt","loggingLevel","core","createSession","releaseSession","sessionId","inputIndices","extractTransferableBuffers","setRunOptions","getInstance","runOptionsHandle","allocs","runOptions","logSeverityLevel","logVerbosityLevel","tagDataOffset","allocWasmString","extra","WeakSet","keyDataOffset","valueDataOffset","ortInit","getLogLevel","fetches","inputArray","kvp","setSessionOptions","sessionOptionsHandle","sessionOptions","use_ort_model_bytes_directly","appendDefaultOptions","graphOptimizationLevel","getGraphOptimzationLevel","enableCpuMemArena","enableMemPattern","executionMode","getExecutionMode","logIdDataOffset","logId","enableProfiling","executionProviders","ep","webnnOptions","dataLength","dataOffset","errorCode","activeSessions","modelDataOffset","sessionHandle","outputCount","inputNamesUTF8Encoded","outputNamesUTF8Encoded","tensorDataTypeStringToEnum","tensorDataTypeEnumToString","numericTensorTypeToTypedArray","BigInt64Array","BigUint64Array","runOptionsAllocs","inputValues","inputAllocs","dataByteLength","dimIndex","beforeRunStack","inputValuesOffset","inputNamesOffset","outputValuesOffset","outputNamesOffset","inputValuesIndex","inputNamesIndex","outputValuesIndex","outputNamesIndex","beforeGetTensorDataStack","tensorDataOffset","tensorDataIndex","maxBytesToRead","profileFileName","buffers","getWasmFileName","useSimd","useThreads","timeout","MessageChannel","port1","validate","isMultiThreadSupported","isSimdSupported","wasmPrefixOverride","wasmFileName","wasmOverrideFileName","wasmPathOverride","isTimeout","tasks","fileName","scriptDirectory","Blob","URL","createObjectURL","path","scriptSourceCode","what","race","terminateAllThreads","Worker_fn","workerConstructor","workerOptions","url","globalScope","blob","BlobBuilder","WebKitBlobBuilder","MozBlobBuilder","MSBlobBuilder","append","getBlob","webkitURL","objectURL","revokeObjectURL","encodeURIComponent","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","getter","definition","enumerable","globalThis","Function","Symbol","toStringTag","__webpack_exports__"],"mappings":"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","file":"ort-web.es6.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"onnxruntime-common\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse {\n\t\tvar a = typeof exports === 'object' ? factory(require(\"onnxruntime-common\")) : factory(root[\"ort\"]);\n\t\tfor(var i in a) (typeof exports === 'object' ? exports : root)[i] = a[i];\n\t}\n})(self, function(__WEBPACK_EXTERNAL_MODULE__2174__) {\nreturn ","var _scriptDir,e=(_scriptDir=\"undefined\"!=typeof document&&document.currentScript?document.currentScript.src:void 0,\"undefined\"!=typeof __filename&&(_scriptDir=_scriptDir||__filename),function(e){function t(){return R.buffer!=j&&$(R.buffer),N}function n(){return R.buffer!=j&&$(R.buffer),W}function r(){return R.buffer!=j&&$(R.buffer),Y}function i(){return R.buffer!=j&&$(R.buffer),U}function a(){return R.buffer!=j&&$(R.buffer),q}function o(){return R.buffer!=j&&$(R.buffer),B}var u,c,s;e=e||{},u||(u=void 0!==e?e:{}),u.ready=new Promise((function(e,t){c=e,s=t}));var f,l={};for(f in u)u.hasOwnProperty(f)&&(l[f]=u[f]);var d=\"./this.program\";function p(e,t){throw t}var m,h,b,g,_,y=\"object\"==typeof window,w=\"function\"==typeof importScripts,v=\"object\"==typeof process&&\"object\"==typeof process.versions&&\"string\"==typeof process.versions.node,A=u.ENVIRONMENT_IS_PTHREAD||!1,T=\"\";function O(e){return u.locateFile?u.locateFile(e,T):T+e}if(v){if(T=w?require(\"path\").dirname(T)+\"/\":__dirname+\"/\",m=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=m(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},h=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",(function(e){if(!(e instanceof cn))throw e})),process.on(\"unhandledRejection\",le),p=function(e,t){if(ae())throw process.exitCode=e,t;process.exit(e)},u.inspect=function(){return\"[Emscripten Module object]\"},void 0===global.Worker){var M;try{M=require(\"worker_threads\")}catch(e){throw console.error('The \"worker_threads\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}global.Worker=M.Worker}}else(y||w)&&(w?T=self.location.href:\"undefined\"!=typeof document&&document.currentScript&&(T=document.currentScript.src),_scriptDir&&(T=_scriptDir),T=0!==T.indexOf(\"blob:\")?T.substr(0,T.lastIndexOf(\"/\")+1):\"\",v?(m=function(e,t){return g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFileSync(e,t?null:\"utf8\")},b=function(e){return(e=m(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},h=function(e,t,n){g||(g=require(\"fs\")),_||(_=require(\"path\")),e=_.normalize(e),g.readFile(e,(function(e,r){e?n(e):t(r.buffer)}))}):(m=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.send(null),t.responseText},w&&(b=function(e){var t=new XMLHttpRequest;return t.open(\"GET\",e,!1),t.responseType=\"arraybuffer\",t.send(null),new Uint8Array(t.response)}),h=function(e,t,n){var r=new XMLHttpRequest;r.open(\"GET\",e,!0),r.responseType=\"arraybuffer\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));v&&\"undefined\"==typeof performance&&(global.performance=require(\"perf_hooks\").performance);var E,x,S=u.print||console.log.bind(console),k=u.printErr||console.warn.bind(console);for(f in l)l.hasOwnProperty(f)&&(u[f]=l[f]);l=null,u.thisProgram&&(d=u.thisProgram),u.quit&&(p=u.quit),u.wasmBinary&&(x=u.wasmBinary);var D=u.noExitRuntime||!1;\"object\"!=typeof WebAssembly&&le(\"no native wasm support detected\");var R,C,P,X=!1;function I(e,t){e||le(\"Assertion failed: \"+t)}function F(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var j,N,W,Y,U,q,B,G=\"undefined\"!=typeof TextDecoder?new F(\"utf8\"):void 0;function H(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&G)return G.decode(e.subarray(t,n));for(r=\"\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function L(e,t){return e?H(n(),e,t):\"\"}function z(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function V(e,t,r){return z(e,n(),t,r)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Z(e){var n=Q(e)+1,r=It(n);return r&&z(e,t(),r,n),r}function $(e){j=e,u.HEAP8=N=new Int8Array(e),u.HEAP16=new Int16Array(e),u.HEAP32=Y=new Int32Array(e),u.HEAPU8=W=new Uint8Array(e),u.HEAPU16=new Uint16Array(e),u.HEAPU32=U=new Uint32Array(e),u.HEAPF32=q=new Float32Array(e),u.HEAPF64=B=new Float64Array(e)}\"undefined\"!=typeof TextDecoder&&new F(\"utf-16le\"),A&&(j=u.buffer);var J=u.INITIAL_MEMORY||16777216;if(A)R=u.wasmMemory,j=u.buffer;else if(u.wasmMemory)R=u.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:J/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw k(\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\"),v&&console.log(\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\"),Error(\"bad memory\");R&&(j=R.buffer),J=j.byteLength,$(j);var K,ee=[],te=[],ne=[],re=[],ie=0;function ae(){return D||0<ie}function oe(){var e=u.preRun.shift();ee.unshift(e)}var ue,ce=0,se=null,fe=null;function le(e){throw u.onAbort&&u.onAbort(e),I(!A),k(e),X=!0,P=1,e=new WebAssembly.RuntimeError(\"abort(\"+e+\"). Build with -s ASSERTIONS=1 for more info.\"),s(e),e}function de(){return ue.startsWith(\"data:application/octet-stream;base64,\")}function pe(){var e=ue;try{if(e==ue&&x)return new Uint8Array(x);if(b)return b(e);throw\"both async and sync fetching of the wasm failed\"}catch(e){le(e)}}u.preloadedImages={},u.preloadedAudios={},ue=\"ort-wasm-threaded.wasm\",de()||(ue=O(ue));var me={985948:function(){throw\"Canceled!\"}};function he(e){for(;0<e.length;){var t=e.shift();if(\"function\"==typeof t)t(u);else{var n=t.Cc;\"number\"==typeof n?void 0===t.Ub?K.get(n)():K.get(n)(t.Ub):n(void 0===t.Ub?null:t.Ub)}}}function be(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var i=Atomics.load(r(),un>>2),a=0;if(i==e&&Atomics.compareExchange(r(),un>>2,i,0)==i&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(r(),e>>2,n)))return e+a;throw\"Atomics.notify returned an unexpected value \"+e}function ge(e){if(A)throw\"Internal Error! cleanupThread() can only ever be called from main application thread!\";if(!e)throw\"Internal Error! Null pthread_ptr in cleanupThread!\";var t=ye.Pb[e];t&&(r()[e+12>>2]=0,ye.fc(t.worker))}u._emscripten_futex_wake=be;var _e,ye={Sb:[],Rb:[],oc:[],od:function(){},Gc:function(){for(var e=It(228),t=0;57>t;++t)i()[e/4+t]=0;r()[e+12>>2]=e,t=e+152,r()[t>>2]=t;var n=It(512);for(t=0;128>t;++t)i()[n/4+t]=0;Atomics.store(i(),e+100>>2,n),Atomics.store(i(),e+40>>2,e),Vt(e,!w,1),Yt(e)},Hc:function(){ye.receiveObjectTransfer=ye.Nc,ye.threadInit=ye.Xc,ye.threadCancel=ye.Wc,ye.threadExit=ye.wc,ye.setExitStatus=ye.Pc},Pb:{},nc:[],tc:function(){for(;0<ye.nc.length;)ye.nc.pop()();Qt()},uc:function(e,t){Atomics.store(i(),e+56>>2,1),Atomics.store(i(),e+60>>2,0),ye.tc(),Atomics.store(i(),e+4>>2,t),Atomics.store(i(),e+0>>2,1),be(e+0,2147483647),Vt(0,0,0)},Pc:function(e){P=e},wc:function(e){var t=Nt();t&&(ye.uc(t,e),A&&postMessage({cmd:\"exit\"}))},Wc:function(){ye.uc(Nt(),-1),postMessage({cmd:\"cancelDone\"})},vc:function(){for(var e in ye.Pb){var t=ye.Pb[e];t&&t.worker&&ye.fc(t.worker)}for(ye.Pb={},e=0;e<ye.Sb.length;++e){var n=ye.Sb[e];n.terminate()}for(ye.Sb=[],e=0;e<ye.Rb.length;++e)t=(n=ye.Rb[e]).Ob,ye.lc(t),n.terminate();ye.Rb=[]},lc:function(e){if(e){if(e.Qb){var t=r()[e.Qb+100>>2];r()[e.Qb+100>>2]=0,jt(t),jt(e.Qb)}e.Qb=0,e.kc&&e.Tb&&jt(e.Tb),e.Tb=0,e.worker&&(e.worker.Ob=null)}},fc:function(e){ye.Oc((function(){delete ye.Pb[e.Ob.Qb],ye.Sb.push(e),ye.Rb.splice(ye.Rb.indexOf(e),1),ye.lc(e.Ob),e.Ob=void 0}))},Oc:function(e){r()[on>>2]=0;try{e()}finally{r()[on>>2]=1}},Nc:function(){},Xc:function(){for(var e in ye.oc)ye.oc[e]()},Jc:function(e,t){e.onmessage=function(n){var a=n.data,o=a.cmd;if(e.Ob&&(ye.Ac=e.Ob.Qb),a.targetThread&&a.targetThread!=Nt()){var u=ye.Pb[a.ud];u?u.worker.postMessage(n.data,a.transferList):k('Internal error! Worker sent a message \"'+o+'\" to target pthread '+a.targetThread+\", but that thread no longer exists!\")}else if(\"processQueuedMainThreadWork\"===o)Bt();else if(\"spawnThread\"===o)Te(n.data);else if(\"cleanupThread\"===o)ge(a.thread);else if(\"killThread\"===o){if(n=a.thread,A)throw\"Internal Error! killThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in killThread!\";r()[n+12>>2]=0,a=ye.Pb[n],delete ye.Pb[n],a.worker.terminate(),ye.lc(a),ye.Rb.splice(ye.Rb.indexOf(a.worker),1),a.worker.Ob=void 0}else if(\"cancelThread\"===o){if(n=a.thread,A)throw\"Internal Error! cancelThread() can only ever be called from main application thread!\";if(!n)throw\"Internal Error! Null pthread_ptr in cancelThread!\";ye.Pb[n].worker.postMessage({cmd:\"cancel\"})}else if(\"loaded\"===o)e.loaded=!0,t&&t(e),e.Zb&&(e.Zb(),delete e.Zb);else if(\"print\"===o)S(\"Thread \"+a.threadId+\": \"+a.text);else if(\"printErr\"===o)k(\"Thread \"+a.threadId+\": \"+a.text);else if(\"alert\"===o)alert(\"Thread \"+a.threadId+\": \"+a.text);else if(\"exit\"===o)e.Ob&&Atomics.load(i(),e.Ob.Qb+64>>2)&&ye.fc(e);else if(\"exitProcess\"===o)try{fn(a.returnCode)}catch(e){if(e instanceof cn)return;throw e}else\"cancelDone\"===o?ye.fc(e):\"objectTransfer\"!==o&&(\"setimmediate\"===n.data.target?e.postMessage(n.data):k(\"worker sent an unknown command \"+o));ye.Ac=void 0},e.onerror=function(e){k(\"pthread sent an error! \"+e.filename+\":\"+e.lineno+\": \"+e.message)},v&&void 0!==e.on&&(e.on(\"message\",(function(t){e.onmessage({data:t})})),e.on(\"error\",(function(t){e.onerror(t)})),e.on(\"exit\",(function(){}))),e.postMessage({cmd:\"load\",urlOrBlob:u.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:C})},xc:function(){var e=O(\"ort-wasm-threaded.worker.js\");ye.Sb.push(new Worker(e))},Dc:function(){return 0==ye.Sb.length&&(ye.xc(),ye.Jc(ye.Sb[0])),ye.Sb.pop()},cd:function(e){for(e=performance.now()+e;performance.now()<e;);}};function we(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return r()[Ft()>>2]=28,-1;e=_e()}return r()[t>>2]=e/1e3|0,r()[t+4>>2]=e%1e3*1e6|0,0}function ve(e,t){if(A)return Le(1,1,e,t);ne.unshift({Cc:e,Ub:t})}function Ae(e){this.Yb=e-16,this.Uc=function(e){r()[this.Yb+4>>2]=e},this.Rc=function(e){r()[this.Yb+8>>2]=e},this.Sc=function(){r()[this.Yb>>2]=0},this.Qc=function(){t()[this.Yb+12>>0]=0},this.Tc=function(){t()[this.Yb+13>>0]=0},this.Ec=function(e,t){this.Uc(e),this.Rc(t),this.Sc(),this.Qc(),this.Tc()}}function Te(e){if(A)throw\"Internal Error! spawnThread() can only ever be called from main application thread!\";var t=ye.Dc();if(!t)return 6;if(void 0!==t.Ob)throw\"Internal error!\";if(!e.dc)throw\"Internal error, no pthread ptr!\";ye.Rb.push(t);for(var n=It(512),a=0;128>a;++a)r()[n+4*a>>2]=0;var o=e.Tb+e.Vb,u=(a=ye.Pb[e.dc]={worker:t,Tb:e.Tb,Vb:e.Vb,kc:e.kc,Qb:e.dc}).Qb>>2;Atomics.store(i(),u+16,e.detached),Atomics.store(i(),u+25,n),Atomics.store(i(),u+10,a.Qb),Atomics.store(i(),u+20,e.Vb),Atomics.store(i(),u+19,o),Atomics.store(i(),u+26,e.Vb),Atomics.store(i(),u+28,o),Atomics.store(i(),u+29,e.detached),n=Zt()+40,Atomics.store(i(),u+43,n),t.Ob=a;var c={cmd:\"run\",start_routine:e.Vc,arg:e.Ub,threadInfoStruct:e.dc,stackBase:e.Tb,stackSize:e.Vb};return t.Zb=function(){c.time=performance.now(),t.postMessage(c,e.bd)},t.loaded&&(t.Zb(),delete t.Zb),0}function Oe(e,n,i){if(0>=e||e>t().length||1&e)return-28;if(y){if(Atomics.load(r(),e>>2)!=n)return-6;var a=performance.now();for(i=a+i,Atomics.exchange(r(),un>>2,e);;){if((a=performance.now())>i)return Atomics.exchange(r(),un>>2,0),-73;if(0==(a=Atomics.exchange(r(),un>>2,0)))break;if(Bt(),Atomics.load(r(),e>>2)!=n)return-6;Atomics.exchange(r(),un>>2,e)}return 0}if(\"timed-out\"===(e=Atomics.wait(r(),e>>2,n,i)))return-73;if(\"not-equal\"===e)return-6;if(\"ok\"===e)return 0;throw\"Atomics.wait returned an unexpected value \"+e}function Me(){v||w||(E||(E={}),E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]||(E[\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\"]=1,k(\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\")))}u.establishStackSpace=function(e,t){rn(e,t),tn(e)},u.invokeEntryPoint=function(e,t){return K.get(e)(t)},_e=v?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-u.__performance_now_clock_drift}:function(){return performance.now()};var Ee={},xe=[null,[],[]];function Se(e,t){var n=xe[e];0===t||10===t?((1===e?S:k)(H(n,0)),n.length=0):n.push(t)}var ke={};function De(e,t){return A?Le(2,1,e,t):(e=L(e),ke.hd(e,t))}function Re(e,t,n){return A?Le(3,1,e,t,n):0}function Ce(e,t){if(A)return Le(4,1,e,t)}function Pe(e,t,n){if(A)return Le(5,1,e,t,n)}function Xe(e,t,n){return A?Le(6,1,e,t,n):0}function Ie(e,t){if(A)return Le(7,1,e,t)}function Fe(e,t){return A?Le(8,1,e,t):(e=L(e),ke.jd(e,t))}function je(e,t,r,i,a,o){if(A)t=Le(9,1,e,t,r,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=an(65536,u))?n().fill(0,e,e+u):e=0,e?(Ee[e]={Lc:e,Ic:t,yc:!0,fd:a,rd:r,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function Ne(e,t){if(A)e=Le(10,1,e,t);else{var n=Ee[e];0!==t&&n?(t===n.Ic&&(Ee[e]=null,n.yc&&jt(n.Lc)),e=0):e=-28}return e}function We(e,t,n){if(A)return Le(11,1,e,t,n)}function Ye(e,t,n){return A?Le(12,1,e,t,n):(e=L(e),ke.kd(e,t,n))}function Ue(e){if(A)return Le(13,1,e)}function qe(e,t){if(A)return Le(14,1,e,t)}function Be(e){if(A)return Le(15,1,e)}function Ge(){if(A)return Le(16,1);le()}var He=[];function Le(e,t){for(var n=arguments.length-2,r=en(),i=nn(8*n),a=i>>3,u=0;u<n;u++){var c=arguments[2+u];o()[a+u]=c}return n=Gt(e,n,i,t),tn(r),n}var ze=[],Ve=[0,\"undefined\"!=typeof document?document:0,\"undefined\"!=typeof window?window:0];function Qe(e){return e=2<e?L(e):e,Ve[e]||(\"undefined\"!=typeof document?document.querySelector(e):void 0)}function Ze(e,t,n){var i=Qe(e);if(!i)return-4;if(i.cc&&(r()[i.cc>>2]=t,r()[i.cc+4>>2]=n),!i.sc&&i.ed){if(i.cc){i=r()[i.cc+8>>2],e=e?L(e):\"\";var a=en(),o=nn(12),u=0;if(e){u=Q(e)+1;var c=It(u);V(e,c,u),u=c}return r()[o>>2]=u,r()[o+4>>2]=t,r()[o+8>>2]=n,Ht(0,i,657457152,0,u,o),tn(a),1}return-4}return i.sc&&(i=i.sc),e=!1,i.bc&&i.bc.ac&&(e=0===(e=i.bc.ac.getParameter(2978))[0]&&0===e[1]&&e[2]===i.width&&e[3]===i.height),i.width=t,i.height=n,e&&i.bc.ac.viewport(0,0,t,n),0}function $e(e,t,n){return A?Le(17,1,e,t,n):Ze(e,t,n)}var Je=[\"default\",\"low-power\",\"high-performance\"],Ke=[\"explicit\",\"same-upper\",\"same-lower\"],et=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],tt=[\"nchw\",\"nhwc\"],nt=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function rt(e,t){if(0!==e&&0!==t){for(var n=[],i=0;i<e;++i,t+=4)n.push(r()[t>>2]);return n}}function it(e,t=\"float32\"){const a=r()[e>>2]+i()[e+8>>2];return e=i()[e+4>>2],I(\"float32\"===t),new Float32Array(n().buffer,a,e/Float32Array.BYTES_PER_ELEMENT)}function at(e){return{alpha:a()[e>>2]}}function ot(e){return{type:nt[i()[e>>2]],dimensions:rt(i()[e+8>>2],r()[e+4>>2])}}function ut(e){return{windowDimensions:rt(i()[e>>2],r()[e+4>>2]),padding:\"explicit\"===Ke[r()[e+32>>2]]?rt(i()[e+8>>2],r()[e+12>>2]):void 0,strides:rt(i()[e+16>>2],r()[e+20>>2]),dilations:rt(i()[e+24>>2],r()[e+28>>2]),autoPad:Ke[r()[e+32>>2]],layout:tt[r()[e+36>>2]]}}var ct,st,ft,lt,dt,pt,mt,ht,bt,gt={};function _t(){if(!bt){var e,t={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:d||\"./this.program\"};for(e in gt)void 0===gt[e]?delete t[e]:t[e]=gt[e];var n=[];for(e in t)n.push(e+\"=\"+t[e]);bt=n}return bt}function yt(e,n){if(A)return Le(18,1,e,n);var i=0;return _t().forEach((function(a,o){var u=n+i;for(o=r()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,i+=a.length+1})),0}function wt(e,t){if(A)return Le(19,1,e,t);var n=_t();r()[e>>2]=n.length;var i=0;return n.forEach((function(e){i+=e.length+1})),r()[t>>2]=i,0}function vt(e){return A?Le(20,1,e):0}function At(e,n){return A?Le(21,1,e,n):(e=1==e||2==e?2:le(),t()[n>>0]=e,0)}function Tt(e,t,n,i){return A?Le(22,1,e,t,n,i):(e=ke.md(e),t=ke.ld(e,t,n),r()[i>>2]=t,0)}function Ot(e,t,n,r,i){if(A)return Le(23,1,e,t,n,r,i)}function Mt(e,t,i,a){if(A)return Le(24,1,e,t,i,a);for(var o=0,u=0;u<i;u++){for(var c=r()[t+8*u>>2],s=r()[t+(8*u+4)>>2],f=0;f<s;f++)Se(e,n()[c+f]);o+=s}return r()[a>>2]=o,0}function Et(){function e(e){return(e=e.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?e[1]:\"GMT\"}if(A)return Le(25,1);if(!Et.zc){Et.zc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),i=new Date(t,6,1);t=n.getTimezoneOffset();var a=i.getTimezoneOffset(),o=Math.max(t,a);r()[Kt()>>2]=60*o,r()[Jt()>>2]=Number(t!=a),n=e(n),i=e(i),n=Z(n),i=Z(i),a<t?(r()[$t()>>2]=n,r()[$t()+4>>2]=i):(r()[$t()>>2]=i,r()[$t()+4>>2]=n)}}function xt(e){return 0==e%4&&(0!=e%100||0==e%400)}function St(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var kt=[31,29,31,30,31,30,31,31,30,31,30,31],Dt=[31,28,31,30,31,30,31,31,30,31,30,31];function Rt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(xt(e.getFullYear())?kt:Dt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Ct(e,n,i,a){function o(e,t,n){for(e=\"number\"==typeof e?e.toString():e||\"\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\"0\")}function c(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function s(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function f(e){e=Rt(new Date(e.Nb+1900,0,1),e.jc);var t=new Date(e.getFullYear()+1,0,4),n=s(new Date(e.getFullYear(),0,4));return t=s(t),0>=c(n,e)?0>=c(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var l=r()[a+40>>2];for(var d in a={$c:r()[a>>2],Zc:r()[a+4>>2],hc:r()[a+8>>2],$b:r()[a+12>>2],Wb:r()[a+16>>2],Nb:r()[a+20>>2],ic:r()[a+24>>2],jc:r()[a+28>>2],vd:r()[a+32>>2],Yc:r()[a+36>>2],ad:l?L(l):\"\"},i=L(i),l={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"})i=i.replace(new RegExp(d,\"g\"),l[d]);var p=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),m=\"January February March April May June July August September October November December\".split(\" \");for(d in l={\"%a\":function(e){return p[e.ic].substring(0,3)},\"%A\":function(e){return p[e.ic]},\"%b\":function(e){return m[e.Wb].substring(0,3)},\"%B\":function(e){return m[e.Wb]},\"%C\":function(e){return u((e.Nb+1900)/100|0,2)},\"%d\":function(e){return u(e.$b,2)},\"%e\":function(e){return o(e.$b,2,\" \")},\"%g\":function(e){return f(e).toString().substring(2)},\"%G\":function(e){return f(e)},\"%H\":function(e){return u(e.hc,2)},\"%I\":function(e){return 0==(e=e.hc)?e=12:12<e&&(e-=12),u(e,2)},\"%j\":function(e){return u(e.$b+St(xt(e.Nb+1900)?kt:Dt,e.Wb-1),3)},\"%m\":function(e){return u(e.Wb+1,2)},\"%M\":function(e){return u(e.Zc,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(e){return 0<=e.hc&&12>e.hc?\"AM\":\"PM\"},\"%S\":function(e){return u(e.$c,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(e){return e.ic||7},\"%U\":function(e){var t=new Date(e.Nb+1900,0,1),n=0===t.getDay()?t:Rt(t,7-t.getDay());return 0>c(n,e=new Date(e.Nb+1900,e.Wb,e.$b))?u(Math.ceil((31-n.getDate()+(St(xt(e.getFullYear())?kt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%V\":function(e){var t=new Date(e.Nb+1901,0,4),n=s(new Date(e.Nb+1900,0,4));t=s(t);var r=Rt(new Date(e.Nb+1900,0,1),e.jc);return 0>c(r,n)?\"53\":0>=c(t,r)?\"01\":u(Math.ceil((n.getFullYear()<e.Nb+1900?e.jc+32-n.getDate():e.jc+1-n.getDate())/7),2)},\"%w\":function(e){return e.ic},\"%W\":function(e){var t=new Date(e.Nb,0,1),n=1===t.getDay()?t:Rt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>c(n,e=new Date(e.Nb+1900,e.Wb,e.$b))?u(Math.ceil((31-n.getDate()+(St(xt(e.getFullYear())?kt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===c(n,t)?\"01\":\"00\"},\"%y\":function(e){return(e.Nb+1900).toString().substring(2)},\"%Y\":function(e){return e.Nb+1900},\"%z\":function(e){var t=0<=(e=e.Yc);return e=Math.abs(e)/60,(t?\"+\":\"-\")+String(\"0000\"+(e/60*100+e%60)).slice(-4)},\"%Z\":function(e){return e.ad},\"%%\":function(){return\"%\"}})i.includes(d)&&(i=i.replace(new RegExp(d,\"g\"),l[d](a)));return(d=function(e){var t=Array(Q(e)+1);return z(e,t,0,t.length),t}(i)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}ct||(ct=ct||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},st=st||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},ft=ft||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},lt=lt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},dt=dt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},pt=pt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},mt=mt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},ht=ht||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}});var Pt=[null,ve,De,Re,Ce,Pe,Xe,Ie,Fe,je,Ne,We,Ye,Ue,qe,Be,Ge,$e,yt,wt,vt,At,Tt,Ot,Mt,Et],Xt={h:function(e,t,n,r){le(\"Assertion failed: \"+L(e)+\", at: \"+[t?L(t):\"unknown filename\",n,r?L(r):\"unknown function\"])},T:function(e,t){return we(e,t)},b:function(e){return It(e+16)+16},d:function(e,t){return ve(e,t)},e:function(e,t){ye.nc.push((function(){K.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Ec(t,n),e},X:function(e,t,n,a){if(\"undefined\"==typeof SharedArrayBuffer)return k(\"Current environment does not support SharedArrayBuffer, pthreads are not available!\"),6;if(!e)return k(\"pthread_create called with a null thread pointer!\"),28;var o=[];if(A&&0===o.length)return qt(687865856,e,t,n,a);var u=0,c=0;if(t&&-1!=t){var s=r()[t>>2];s+=81920,u=r()[t+8>>2],c=0!==r()[t+12>>2]}else s=2097152;(t=0==u)?u=an(16,s):I(0<(u-=s));for(var f=It(228),l=0;57>l;++l)i()[(f>>2)+l]=0;return r()[e>>2]=f,r()[f+12>>2]=f,e=f+152,r()[e>>2]=e,n={Tb:u,Vb:s,kc:t,detached:c,Vc:n,dc:f,Ub:a,bd:o},A?(n.dd=\"spawnThread\",postMessage(n,o),0):Te(n)},U:function(e){throw A?ye.wc(e):(ye.tc(),fn(e)),\"unwind\"},W:function(e,t){return function(e,t){if(!e)return k(\"pthread_join attempted on a null thread pointer!\"),71;if(A&&Nt()==e)return k(\"PThread \"+e+\" is attempting to join to itself!\"),16;if(!A&&Ut()==e)return k(\"Main thread \"+e+\" is attempting to join to itself!\"),16;if(r()[e+12>>2]!==e)return k(\"pthread_join attempted on thread \"+e+\", which does not point to a valid thread, or does not exist anymore!\"),71;if(Atomics.load(i(),e+64>>2))return k(\"Attempted to join thread \"+e+\", which was already detached!\"),28;for(Me();;){var n=Atomics.load(i(),e+0>>2);if(1==n)return n=Atomics.load(i(),e+4>>2),t&&(r()[t>>2]=n),Atomics.store(i(),e+64>>2,1),A?postMessage({cmd:\"cleanupThread\",thread:e}):ge(e),0;Lt(),A||Bt(),Oe(e+0,n,A?100:1)}}(e,t)},K:De,r:Re,R:Ce,L:Pe,u:function(){return 42},D:Xe,N:Ie,Q:Fe,P:je,O:Ne,q:We,J:Ye,H:Ue,v:qe,I:Be,ba:function(e,t){if(e==t)postMessage({cmd:\"processQueuedMainThreadWork\"});else if(A)postMessage({targetThread:e,cmd:\"processThreadQueue\"});else{if(!(e=(e=ye.Pb[e])&&e.worker))return;e.postMessage({cmd:\"processThreadQueue\"})}return 1},f:Ge,x:we,Sa:function(e,t){return e-t},V:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},m:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ca:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},M:function(){le(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},da:function(e,t,i){var a;for(He.length=0,i>>=2;a=n()[t++];)(a=105>a)&&1&i&&i++,He.push(a?o()[i++>>1]:r()[i]),++i;return me[e].apply(null,He)},C:Me,n:function(){},k:Oe,j:be,S:function(){return 2147483648},i:_e,A:function(e,t,r){n().copyWithin(e,t,t+r)},o:function(){return v?require(\"os\").cpus().length:navigator.hardwareConcurrency},_:function(e,t,n){ze.length=t,n>>=3;for(var r=0;r<t;r++)ze[r]=o()[n+r];return(0>e?me[-e-1]:Pt[e]).apply(null,ze)},B:function(e){var t=n().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var r=1;4>=r;r*=2){var i=t*(1+.2/r);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-j.byteLength+65535>>>16),$(R.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},$:function(e,t,n){return Qe(e)?Ze(e,t,n):$e(e,t,n)},w:function(){},Z:function(e,t,n){return ie+=1,setTimeout((function(){--ie,function(e){if(!X){try{e()}catch(e){if(e instanceof cn)return;if(\"unwind\"!==e)throw e&&\"object\"==typeof e&&e.stack&&k(\"exception thrown: \"+[e,e.stack]),e}if(!ae())try{A?zt(P):fn(P)}catch(e){if(!(e instanceof cn))throw e}}}((function(){K.get(e)(n)}))}),t)},aa:function(e,t){t>>=2;var n=r()[t+6];return t={alpha:!!r()[t],depth:!!r()[t+1],stencil:!!r()[t+2],antialias:!!r()[t+3],premultipliedAlpha:!!r()[t+4],preserveDrawingBuffer:!!r()[t+5],powerPreference:Je[n],failIfMajorPerformanceCaveat:!!r()[t+7],Kc:r()[t+8],pd:r()[t+9],qc:r()[t+10],Bc:r()[t+11],sd:r()[t+12],td:r()[t+13]},!(e=Qe(e))||t.Bc?0:function(e,t){e.rc||(e.rc=e.getContext,e.getContext=function(t,n){return\"webgl\"==t==(n=e.rc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\"webgl\",t);return n?function(e,t){var n=It(8);r()[n+4>>2]=Nt();var i={nd:n,attributes:t,version:t.Kc,ac:e};return e.canvas&&(e.canvas.bc=i),(void 0===t.qc||t.qc)&&function(e){if(e||(e=void 0),!e.Fc){e.Fc=!0;var t=e.ac;!function(e){var t=e.getExtension(\"ANGLE_instanced_arrays\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\"OES_vertex_array_object\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\"WEBGL_draw_buffers\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.gd=t.getExtension(\"EXT_disjoint_timer_query\"),t.qd=t.getExtension(\"WEBGL_multi_draw\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\"lose_context\")||e.includes(\"debug\")||t.getExtension(e)}))}}(i),n}(n,t):0}(e,t)},Qa:function(e){var t={devicePreference:\"default\",powerPreference:\"default\"};return 0!==e&&(t={devicePreference:[\"default\",\"gpu\",\"cpu\"][i()[e>>2]],powerPreference:[\"default\",\"high-performance\",\"low-power\"][i()[e+4>>2]]}),ct.create(navigator.ml.createContext(t))},F:yt,G:wt,l:vt,E:At,t:Tt,z:Ot,p:Mt,ta:function(e){var t=Date.now();return r()[e>>2]=t/1e3|0,r()[e+4>>2]=t%1e3*1e3|0,0},Ta:function e(t,n){return t=new Date(1e3*r()[t>>2]),r()[n>>2]=t.getUTCSeconds(),r()[n+4>>2]=t.getUTCMinutes(),r()[n+8>>2]=t.getUTCHours(),r()[n+12>>2]=t.getUTCDate(),r()[n+16>>2]=t.getUTCMonth(),r()[n+20>>2]=t.getUTCFullYear()-1900,r()[n+24>>2]=t.getUTCDay(),r()[n+36>>2]=0,r()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,r()[n+28>>2]=t,e.pc||(e.pc=Z(\"GMT\")),r()[n+40>>2]=e.pc,n},Y:function(){ye.Gc()},s:function(e,t){Et(),e=new Date(1e3*r()[e>>2]),r()[t>>2]=e.getSeconds(),r()[t+4>>2]=e.getMinutes(),r()[t+8>>2]=e.getHours(),r()[t+12>>2]=e.getDate(),r()[t+16>>2]=e.getMonth(),r()[t+20>>2]=e.getFullYear()-1900,r()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),i=(e.getTime()-n.getTime())/864e5|0;return r()[t+28>>2]=i,r()[t+36>>2]=-60*e.getTimezoneOffset(),i=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(i!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,i)),r()[t+32>>2]=e,e=r()[$t()+(e?4:0)>>2],r()[t+40>>2]=e,t},a:R||u.wasmMemory,y:function(e){Et();var t=new Date(r()[e+20>>2]+1900,r()[e+16>>2],r()[e+12>>2],r()[e+8>>2],r()[e+4>>2],r()[e>>2],0),n=r()[e+32>>2],i=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),c=Math.min(u,o);return 0>n?r()[e+32>>2]=Number(o!=u&&c==i):0<n!=(c==i)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?c:o)-i))),r()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,r()[e+28>>2]=n,r()[e>>2]=t.getSeconds(),r()[e+4>>2]=t.getMinutes(),r()[e+8>>2]=t.getHours(),r()[e+12>>2]=t.getDate(),r()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Pa:function(e){ct.ec(e)},Oa:function(e){ct.release(e)},Ka:function(e,t,n){return e=ft.get(e),t=mt.get(t),n=mt.get(n),n=e.add(t,n),mt.create(n)},Ja:function(e,t,n){return e=ft.get(e),t=mt.get(t),n=ut(n),n=e.averagePool2d(t,n),mt.create(n)},Ia:function(e,t,n,i,o){return e=ft.get(e),t=mt.get(t),n=mt.get(n),i=mt.get(i),o={scale:mt.get(r()[o>>2]),bias:mt.get(r()[o+4>>2]),axis:r()[o+8>>2],epsilon:a()[o+12>>2],activation:ht.get(r()[o+16>>2])},o=e.batchNormalization(t,n,i,o),mt.create(o)},Ha:function(e,t){e=ft.get(e),t=pt.get(t);try{var n=e.build(t);return st.create(n)}catch(e){return console.log(\"builder.build failed: \"+e),0}},Ga:function(e,t,n){return e=ft.get(e),t=mt.get(t),n={minValue:a()[n>>2],maxValue:a()[n+4>>2]},n=e.clamp(t,n),mt.create(n)},Fa:function(e,t,n,r){e=ft.get(e),t=rt(t,n),n=[];for(var i=0;i<t.length;++i)n.push(mt.get(t[i]));return r=e.concat(n,r),mt.create(r)},Ea:function(e,t,n){return e=ft.get(e),n=it(n,(t=ot(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),mt.create(n)},Da:function(e,t,n,a){return e=ft.get(e),t=mt.get(t),n=mt.get(n),a={padding:\"explicit\"===Ke[r()[a+40>>2]]?rt(i()[a>>2],r()[a+4>>2]):void 0,strides:rt(i()[a+8>>2],r()[a+12>>2]),dilations:rt(i()[a+16>>2],r()[a+20>>2]),autoPad:Ke[r()[a+40>>2]],groups:r()[a+48>>2],inputLayout:tt[r()[a+52>>2]],filterLayout:et[r()[a+56>>2]],bias:mt.get(r()[a+60>>2]),activation:ht.get(r()[a+64>>2])},a=e.conv2d(t,n,a),mt.create(a)},Ca:function(e,n,i,o){return e=ft.get(e),n=mt.get(n),i=mt.get(i),o={c:mt.get(r()[o>>2]),alpha:a()[o+4>>2],beta:a()[o+8>>2],aTranspose:0!==t()[o+12>>0],bTranspose:0!==t()[o+13>>0]},o=e.gemm(n,i,o),mt.create(o)},Ba:function(e,t,n){return e=ft.get(e),t=L(t),n=ot(n),n=e.input(t,n),mt.create(n)},Aa:function(e,t,n){return e=ft.get(e),t=mt.get(t),n=at(n),n=e.leakyRelu(t,n),mt.create(n)},za:function(e,t){return e=ft.get(e),t=at(t),t=e.leakyRelu(t),ht.create(t)},ya:function(e,t,n){return e=ft.get(e),t=mt.get(t),n=mt.get(n),n=e.matmul(t,n),mt.create(n)},xa:function(e,t,n){return e=ft.get(e),t=mt.get(t),n=ut(n),n=e.maxPool2d(t,n),mt.create(n)},sa:function(e){ft.release(e)},wa:function(e,t){return e=ft.get(e),t=mt.get(t),t=e.relu(t),mt.create(t)},va:function(e){return e=ft.get(e).relu(),ht.create(e)},ua:function(e,t,n,r){return e=ft.get(e),t=mt.get(t),n=rt(r,n),n=e.reshape(t,n),mt.create(n)},Na:function(e,t,n){return e=st.get(e),t=lt.get(t),n=dt.get(n),e.compute(t,n)},Ma:function(e){st.ec(e)},La:function(e){st.release(e)},qa:function(e){lt.release(e)},ra:function(e,t,n){e=lt.get(e),t=L(t),n=0===r()[n+12>>2]?it(n+0):{resource:it(n+0),dimensions:rt(i()[n+16>>2],r()[n+12>>2])},e[t]=n},oa:function(e){pt.release(e)},pa:function(e,t,n){e=pt.get(e),t=L(t),n=mt.get(n),e[t]=n},ma:function(e){dt.release(e)},na:function(e,t,n){e=dt.get(e),t=L(t),n=it(n),e[t]=n},la:function(e){mt.ec(e)},ka:function(e){mt.release(e)},ja:function(e){ht.ec(e)},ia:function(e){ht.release(e)},Ra:Ct,g:function(e,t,n,r){return Ct(e,t,n,r)},ha:function(e){return e=ct.get(e),e=new MLGraphBuilder(e),ft.create(e)},ga:function(){return lt.create({})},fa:function(){return pt.create({})},ea:function(){return dt.create({})}};!function(){function e(e,t){u.asm=e.exports,K=u.asm.nb,te.unshift(u.asm.Ua),ye.oc.push(u.asm.sb),C=t,A||(ce--,u.monitorRunDependencies&&u.monitorRunDependencies(ce),0==ce&&(null!==se&&(clearInterval(se),se=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!x&&(y||w)){if(\"function\"==typeof fetch&&!ue.startsWith(\"file://\"))return fetch(ue,{credentials:\"same-origin\"}).then((function(e){if(!e.ok)throw\"failed to load wasm binary file at '\"+ue+\"'\";return e.arrayBuffer()})).catch((function(){return pe()}));if(h)return new Promise((function(e,t){h(ue,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return pe()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){k(\"failed to asynchronously prepare wasm: \"+e),le(e)}))}var r={a:Xt};if(A||(ce++,u.monitorRunDependencies&&u.monitorRunDependencies(ce)),u.instantiateWasm)try{return u.instantiateWasm(r,e)}catch(e){return k(\"Module.instantiateWasm callback failed with error: \"+e),!1}(x||\"function\"!=typeof WebAssembly.instantiateStreaming||de()||ue.startsWith(\"file://\")||\"function\"!=typeof fetch?n(t):fetch(ue,{credentials:\"same-origin\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return k(\"wasm streaming compile failed: \"+e),k(\"falling back to ArrayBuffer instantiation\"),n(t)}))}))).catch(s)}(),u.___wasm_call_ctors=function(){return(u.___wasm_call_ctors=u.asm.Ua).apply(null,arguments)},u._OrtInit=function(){return(u._OrtInit=u.asm.Va).apply(null,arguments)},u._OrtCreateSessionOptions=function(){return(u._OrtCreateSessionOptions=u.asm.Wa).apply(null,arguments)},u._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(u._OrtSessionOptionsAppendExecutionProviderWebNN=u.asm.Xa).apply(null,arguments)},u._OrtAddSessionConfigEntry=function(){return(u._OrtAddSessionConfigEntry=u.asm.Ya).apply(null,arguments)},u._OrtReleaseSessionOptions=function(){return(u._OrtReleaseSessionOptions=u.asm.Za).apply(null,arguments)},u._OrtCreateSession=function(){return(u._OrtCreateSession=u.asm._a).apply(null,arguments)},u._OrtReleaseSession=function(){return(u._OrtReleaseSession=u.asm.$a).apply(null,arguments)},u._OrtGetInputCount=function(){return(u._OrtGetInputCount=u.asm.ab).apply(null,arguments)},u._OrtGetOutputCount=function(){return(u._OrtGetOutputCount=u.asm.bb).apply(null,arguments)},u._OrtGetInputName=function(){return(u._OrtGetInputName=u.asm.cb).apply(null,arguments)},u._OrtGetOutputName=function(){return(u._OrtGetOutputName=u.asm.db).apply(null,arguments)},u._OrtFree=function(){return(u._OrtFree=u.asm.eb).apply(null,arguments)},u._OrtCreateTensor=function(){return(u._OrtCreateTensor=u.asm.fb).apply(null,arguments)},u._OrtGetTensorData=function(){return(u._OrtGetTensorData=u.asm.gb).apply(null,arguments)},u._OrtReleaseTensor=function(){return(u._OrtReleaseTensor=u.asm.hb).apply(null,arguments)},u._OrtCreateRunOptions=function(){return(u._OrtCreateRunOptions=u.asm.ib).apply(null,arguments)},u._OrtAddRunConfigEntry=function(){return(u._OrtAddRunConfigEntry=u.asm.jb).apply(null,arguments)},u._OrtReleaseRunOptions=function(){return(u._OrtReleaseRunOptions=u.asm.kb).apply(null,arguments)},u._OrtRun=function(){return(u._OrtRun=u.asm.lb).apply(null,arguments)},u._OrtEndProfiling=function(){return(u._OrtEndProfiling=u.asm.mb).apply(null,arguments)};var It=u._malloc=function(){return(It=u._malloc=u.asm.ob).apply(null,arguments)},Ft=u.___errno_location=function(){return(Ft=u.___errno_location=u.asm.pb).apply(null,arguments)},jt=u._free=function(){return(jt=u._free=u.asm.qb).apply(null,arguments)},Nt=u._pthread_self=function(){return(Nt=u._pthread_self=u.asm.rb).apply(null,arguments)};u._emscripten_tls_init=function(){return(u._emscripten_tls_init=u.asm.sb).apply(null,arguments)},u._emscripten_current_thread_process_queued_calls=function(){return(u._emscripten_current_thread_process_queued_calls=u.asm.tb).apply(null,arguments)};var Wt,Yt=u._emscripten_register_main_browser_thread_id=function(){return(Yt=u._emscripten_register_main_browser_thread_id=u.asm.ub).apply(null,arguments)},Ut=u._emscripten_main_browser_thread_id=function(){return(Ut=u._emscripten_main_browser_thread_id=u.asm.vb).apply(null,arguments)},qt=u._emscripten_sync_run_in_main_thread_4=function(){return(qt=u._emscripten_sync_run_in_main_thread_4=u.asm.wb).apply(null,arguments)},Bt=u._emscripten_main_thread_process_queued_calls=function(){return(Bt=u._emscripten_main_thread_process_queued_calls=u.asm.xb).apply(null,arguments)},Gt=u._emscripten_run_in_main_runtime_thread_js=function(){return(Gt=u._emscripten_run_in_main_runtime_thread_js=u.asm.yb).apply(null,arguments)},Ht=u.__emscripten_call_on_thread=function(){return(Ht=u.__emscripten_call_on_thread=u.asm.zb).apply(null,arguments)},Lt=u._pthread_testcancel=function(){return(Lt=u._pthread_testcancel=u.asm.Ab).apply(null,arguments)},zt=u._pthread_exit=function(){return(zt=u._pthread_exit=u.asm.Bb).apply(null,arguments)},Vt=u.__emscripten_thread_init=function(){return(Vt=u.__emscripten_thread_init=u.asm.Cb).apply(null,arguments)},Qt=u.___pthread_tsd_run_dtors=function(){return(Qt=u.___pthread_tsd_run_dtors=u.asm.Db).apply(null,arguments)},Zt=u._emscripten_get_global_libc=function(){return(Zt=u._emscripten_get_global_libc=u.asm.Eb).apply(null,arguments)},$t=u.__get_tzname=function(){return($t=u.__get_tzname=u.asm.Fb).apply(null,arguments)},Jt=u.__get_daylight=function(){return(Jt=u.__get_daylight=u.asm.Gb).apply(null,arguments)},Kt=u.__get_timezone=function(){return(Kt=u.__get_timezone=u.asm.Hb).apply(null,arguments)},en=u.stackSave=function(){return(en=u.stackSave=u.asm.Ib).apply(null,arguments)},tn=u.stackRestore=function(){return(tn=u.stackRestore=u.asm.Jb).apply(null,arguments)},nn=u.stackAlloc=function(){return(nn=u.stackAlloc=u.asm.Kb).apply(null,arguments)},rn=u._emscripten_stack_set_limits=function(){return(rn=u._emscripten_stack_set_limits=u.asm.Lb).apply(null,arguments)},an=u._memalign=function(){return(an=u._memalign=u.asm.Mb).apply(null,arguments)},on=u.__emscripten_allow_main_runtime_queued_calls=985500,un=u.__emscripten_main_thread_futex=989508;function cn(e){this.name=\"ExitStatus\",this.message=\"Program terminated with exit(\"+e+\")\",this.status=e}function sn(){function e(){if(!Wt&&(Wt=!0,u.calledRun=!0,!X)&&(A||he(te),c(u),u.onRuntimeInitialized&&u.onRuntimeInitialized(),!A)){if(u.postRun)for(\"function\"==typeof u.postRun&&(u.postRun=[u.postRun]);u.postRun.length;){var e=u.postRun.shift();re.unshift(e)}he(re)}}if(!(0<ce))if(A)c(u),A||he(te),postMessage({cmd:\"loaded\"});else{if(!A){if(u.preRun)for(\"function\"==typeof u.preRun&&(u.preRun=[u.preRun]);u.preRun.length;)oe();he(ee)}0<ce||(u.setStatus?(u.setStatus(\"Running...\"),setTimeout((function(){setTimeout((function(){u.setStatus(\"\")}),1),e()}),1)):e())}}function fn(e){if(P=e,A)throw postMessage({cmd:\"exitProcess\",returnCode:e}),new cn(e);ae()||(ye.vc(),A||(he(ne),\"undefined\"!=typeof _fflush&&_fflush(0),xe[1].length&&Se(1,10),xe[2].length&&Se(2,10))),P=e,ae()||(ye.vc(),u.onExit&&u.onExit(e),X=!0),p(e,new cn(e))}if(u.UTF8ToString=L,u.stringToUTF8=V,u.lengthBytesUTF8=Q,u.keepRuntimeAlive=ae,u.PThread=ye,u.stackSave=en,u.stackRestore=tn,u.stackAlloc=nn,u.PThread=ye,u.wasmMemory=R,u.ExitStatus=cn,fe=function e(){Wt||sn(),Wt||(fe=e)},u.run=sn,u.preInit)for(\"function\"==typeof u.preInit&&(u.preInit=[u.preInit]);0<u.preInit.length;)u.preInit.pop()();return A&&(D=!1,ye.Hc()),sn(),e.ready});\"object\"==typeof exports&&\"object\"==typeof module?module.exports=e:\"function\"==typeof define&&define.amd?define([],(function(){return e})):\"object\"==typeof exports&&(exports.ortWasmThreaded=e);\n","\nvar ortWasm = (function() {\n  var _scriptDir = typeof document !== 'undefined' && document.currentScript ? document.currentScript.src : undefined;\n  if (typeof __filename !== 'undefined') _scriptDir = _scriptDir || __filename;\n  return (\nfunction(ortWasm) {\n  ortWasm = ortWasm || {};\n\n\nvar d;d||(d=typeof ortWasm !== 'undefined' ? ortWasm : {});var aa,ba;d.ready=new Promise(function(a,b){aa=a;ba=b});var g={},m;for(m in d)d.hasOwnProperty(m)&&(g[m]=d[m]);var ca=\"./this.program\",da=\"object\"===typeof window,p=\"function\"===typeof importScripts,ea=\"object\"===typeof process&&\"object\"===typeof process.versions&&\"string\"===typeof process.versions.node,r=\"\",fa,v,w,x,z;\nif(ea)r=p?require(\"path\").dirname(r)+\"/\":__dirname+\"/\",fa=function(a,b){x||(x=require(\"fs\"));z||(z=require(\"path\"));a=z.normalize(a);return x.readFileSync(a,b?null:\"utf8\")},w=function(a){a=fa(a,!0);a.buffer||(a=new Uint8Array(a));a.buffer||A(\"Assertion failed: undefined\");return a},v=function(a,b,c){x||(x=require(\"fs\"));z||(z=require(\"path\"));a=z.normalize(a);x.readFile(a,function(e,h){e?c(e):b(h.buffer)})},1<process.argv.length&&(ca=process.argv[1].replace(/\\\\/g,\"/\")),process.argv.slice(2),process.on(\"uncaughtException\",\nfunction(a){throw a;}),process.on(\"unhandledRejection\",A),d.inspect=function(){return\"[Emscripten Module object]\"};else if(da||p)p?r=self.location.href:\"undefined\"!==typeof document&&document.currentScript&&(r=document.currentScript.src),_scriptDir&&(r=_scriptDir),0!==r.indexOf(\"blob:\")?r=r.substr(0,r.lastIndexOf(\"/\")+1):r=\"\",fa=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.send(null);return b.responseText},p&&(w=function(a){var b=new XMLHttpRequest;b.open(\"GET\",a,!1);b.responseType=\"arraybuffer\";\nb.send(null);return new Uint8Array(b.response)}),v=function(a,b,c){var e=new XMLHttpRequest;e.open(\"GET\",a,!0);e.responseType=\"arraybuffer\";e.onload=function(){200==e.status||0==e.status&&e.response?b(e.response):c()};e.onerror=c;e.send(null)};var ha=d.print||console.log.bind(console),B=d.printErr||console.warn.bind(console);for(m in g)g.hasOwnProperty(m)&&(d[m]=g[m]);g=null;d.thisProgram&&(ca=d.thisProgram);var C;d.wasmBinary&&(C=d.wasmBinary);var noExitRuntime=d.noExitRuntime||!1;\n\"object\"!==typeof WebAssembly&&A(\"no native wasm support detected\");var ia,ja=!1,ka=\"undefined\"!==typeof TextDecoder?new TextDecoder(\"utf8\"):void 0;\nfunction la(a,b,c){var e=b+c;for(c=b;a[c]&&!(c>=e);)++c;if(16<c-b&&a.subarray&&ka)return ka.decode(a.subarray(b,c));for(e=\"\";b<c;){var h=a[b++];if(h&128){var k=a[b++]&63;if(192==(h&224))e+=String.fromCharCode((h&31)<<6|k);else{var l=a[b++]&63;h=224==(h&240)?(h&15)<<12|k<<6|l:(h&7)<<18|k<<12|l<<6|a[b++]&63;65536>h?e+=String.fromCharCode(h):(h-=65536,e+=String.fromCharCode(55296|h>>10,56320|h&1023))}}else e+=String.fromCharCode(h)}return e}function D(a,b){return a?la(E,a,b):\"\"}\nfunction ma(a,b,c,e){if(!(0<e))return 0;var h=c;e=c+e-1;for(var k=0;k<a.length;++k){var l=a.charCodeAt(k);if(55296<=l&&57343>=l){var u=a.charCodeAt(++k);l=65536+((l&1023)<<10)|u&1023}if(127>=l){if(c>=e)break;b[c++]=l}else{if(2047>=l){if(c+1>=e)break;b[c++]=192|l>>6}else{if(65535>=l){if(c+2>=e)break;b[c++]=224|l>>12}else{if(c+3>=e)break;b[c++]=240|l>>18;b[c++]=128|l>>12&63}b[c++]=128|l>>6&63}b[c++]=128|l&63}}b[c]=0;return c-h}\nfunction na(a){for(var b=0,c=0;c<a.length;++c){var e=a.charCodeAt(c);55296<=e&&57343>=e&&(e=65536+((e&1023)<<10)|a.charCodeAt(++c)&1023);127>=e?++b:b=2047>=e?b+2:65535>=e?b+3:b+4}return b}function oa(a){var b=na(a)+1,c=pa(b);c&&ma(a,F,c,b);return c}var qa,F,E,G,H,J;\nfunction ra(){var a=ia.buffer;qa=a;d.HEAP8=F=new Int8Array(a);d.HEAP16=new Int16Array(a);d.HEAP32=G=new Int32Array(a);d.HEAPU8=E=new Uint8Array(a);d.HEAPU16=new Uint16Array(a);d.HEAPU32=H=new Uint32Array(a);d.HEAPF32=J=new Float32Array(a);d.HEAPF64=new Float64Array(a)}var sa,ta=[],ua=[],va=[],wa=[];function xa(){var a=d.preRun.shift();ta.unshift(a)}var K=0,ya=null,L=null;d.preloadedImages={};d.preloadedAudios={};\nfunction A(a){if(d.onAbort)d.onAbort(a);B(a);ja=!0;a=new WebAssembly.RuntimeError(\"abort(\"+a+\"). Build with -s ASSERTIONS=1 for more info.\");ba(a);throw a;}function za(){return M.startsWith(\"data:application/octet-stream;base64,\")}var M;M=\"ort-wasm.wasm\";if(!za()){var Aa=M;M=d.locateFile?d.locateFile(Aa,r):r+Aa}function Ba(){var a=M;try{if(a==M&&C)return new Uint8Array(C);if(w)return w(a);throw\"both async and sync fetching of the wasm failed\";}catch(b){A(b)}}\nfunction Ca(){if(!C&&(da||p)){if(\"function\"===typeof fetch&&!M.startsWith(\"file://\"))return fetch(M,{credentials:\"same-origin\"}).then(function(a){if(!a.ok)throw\"failed to load wasm binary file at '\"+M+\"'\";return a.arrayBuffer()}).catch(function(){return Ba()});if(v)return new Promise(function(a,b){v(M,function(c){a(new Uint8Array(c))},b)})}return Promise.resolve().then(function(){return Ba()})}\nfunction Da(a){for(;0<a.length;){var b=a.shift();if(\"function\"==typeof b)b(d);else{var c=b.sb;\"number\"===typeof c?void 0===b.ib?sa.get(c)():sa.get(c)(b.ib):c(void 0===b.ib?null:b.ib)}}}function Ea(a){this.kb=a-16;this.Cb=function(b){G[this.kb+4>>2]=b};this.zb=function(b){G[this.kb+8>>2]=b};this.Ab=function(){G[this.kb>>2]=0};this.yb=function(){F[this.kb+12>>0]=0};this.Bb=function(){F[this.kb+13>>0]=0};this.ub=function(b,c){this.Cb(b);this.zb(c);this.Ab();this.yb();this.Bb()}}\nvar Fa=0,Ga={},Ha=[null,[],[]],N={},O;O=ea?function(){var a=process.hrtime();return 1E3*a[0]+a[1]/1E6}:function(){return performance.now()};var Ia=[\"explicit\",\"same-upper\",\"same-lower\"],Ja=[\"oihw\",\"hwio\",\"ohwi\",\"ihwo\"],Ka=[\"nchw\",\"nhwc\"],La=\"float32 float16 int32 uint32 int8 uint8\".split(\" \");function P(a,b){if(0!==a&&0!==b){for(var c=[],e=0;e<a;++e,b+=4)c.push(G[b>>2]);return c}}\nfunction Ma(a,b=\"float32\"){const c=G[a>>2]+H[a+8>>2];a=H[a+4>>2];\"float32\"===b||A(\"Assertion failed: undefined\");return new Float32Array(E.buffer,c,a/Float32Array.BYTES_PER_ELEMENT)}function Na(a){return{type:La[H[a>>2]],dimensions:P(H[a+8>>2],G[a+4>>2])}}function Oa(a){return{windowDimensions:P(H[a>>2],G[a+4>>2]),padding:\"explicit\"===Ia[G[a+32>>2]]?P(H[a+8>>2],G[a+12>>2]):void 0,strides:P(H[a+16>>2],G[a+20>>2]),dilations:P(H[a+24>>2],G[a+28>>2]),autoPad:Ia[G[a+32>>2]],layout:Ka[G[a+36>>2]]}}\nvar Q,S,T,U,V,W,X,Y,Pa={};function Qa(){if(!Ra){var a={USER:\"web_user\",LOGNAME:\"web_user\",PATH:\"/\",PWD:\"/\",HOME:\"/home/web_user\",LANG:(\"object\"===typeof navigator&&navigator.languages&&navigator.languages[0]||\"C\").replace(\"-\",\"_\")+\".UTF-8\",_:ca||\"./this.program\"},b;for(b in Pa)void 0===Pa[b]?delete a[b]:a[b]=Pa[b];var c=[];for(b in a)c.push(b+\"=\"+a[b]);Ra=c}return Ra}var Ra;\nfunction Sa(a,b){a=new Date(1E3*G[a>>2]);G[b>>2]=a.getUTCSeconds();G[b+4>>2]=a.getUTCMinutes();G[b+8>>2]=a.getUTCHours();G[b+12>>2]=a.getUTCDate();G[b+16>>2]=a.getUTCMonth();G[b+20>>2]=a.getUTCFullYear()-1900;G[b+24>>2]=a.getUTCDay();G[b+36>>2]=0;G[b+32>>2]=0;G[b+28>>2]=(a.getTime()-Date.UTC(a.getUTCFullYear(),0,1,0,0,0,0))/864E5|0;Sa.rb||(Sa.rb=oa(\"GMT\"));G[b+40>>2]=Sa.rb;return b}\nfunction Ta(){function a(l){return(l=l.toTimeString().match(/\\(([A-Za-z ]+)\\)$/))?l[1]:\"GMT\"}if(!Ua){Ua=!0;var b=(new Date).getFullYear(),c=new Date(b,0,1),e=new Date(b,6,1);b=c.getTimezoneOffset();var h=e.getTimezoneOffset(),k=Math.max(b,h);G[Va()>>2]=60*k;G[Wa()>>2]=Number(b!=h);c=a(c);e=a(e);c=oa(c);e=oa(e);h<b?(G[Z()>>2]=c,G[Z()+4>>2]=e):(G[Z()>>2]=e,G[Z()+4>>2]=c)}}var Ua;function $a(a){return 0===a%4&&(0!==a%100||0===a%400)}function ab(a,b){for(var c=0,e=0;e<=b;c+=a[e++]);return c}\nvar bb=[31,29,31,30,31,30,31,31,30,31,30,31],cb=[31,28,31,30,31,30,31,31,30,31,30,31];function db(a,b){for(a=new Date(a.getTime());0<b;){var c=a.getMonth(),e=($a(a.getFullYear())?bb:cb)[c];if(b>e-a.getDate())b-=e-a.getDate()+1,a.setDate(1),11>c?a.setMonth(c+1):(a.setMonth(0),a.setFullYear(a.getFullYear()+1));else{a.setDate(a.getDate()+b);break}}return a}\nfunction eb(a,b,c,e){function h(f,n,q){for(f=\"number\"===typeof f?f.toString():f||\"\";f.length<n;)f=q[0]+f;return f}function k(f,n){return h(f,n,\"0\")}function l(f,n){function q(Xa){return 0>Xa?-1:0<Xa?1:0}var I;0===(I=q(f.getFullYear()-n.getFullYear()))&&0===(I=q(f.getMonth()-n.getMonth()))&&(I=q(f.getDate()-n.getDate()));return I}function u(f){switch(f.getDay()){case 0:return new Date(f.getFullYear()-1,11,29);case 1:return f;case 2:return new Date(f.getFullYear(),0,3);case 3:return new Date(f.getFullYear(),\n0,2);case 4:return new Date(f.getFullYear(),0,1);case 5:return new Date(f.getFullYear()-1,11,31);case 6:return new Date(f.getFullYear()-1,11,30)}}function R(f){f=db(new Date(f.gb+1900,0,1),f.pb);var n=new Date(f.getFullYear()+1,0,4),q=u(new Date(f.getFullYear(),0,4));n=u(n);return 0>=l(q,f)?0>=l(n,f)?f.getFullYear()+1:f.getFullYear():f.getFullYear()-1}var y=G[e+40>>2];e={Fb:G[e>>2],Eb:G[e+4>>2],nb:G[e+8>>2],lb:G[e+12>>2],hb:G[e+16>>2],gb:G[e+20>>2],ob:G[e+24>>2],pb:G[e+28>>2],Nb:G[e+32>>2],Db:G[e+\n36>>2],Gb:y?D(y):\"\"};c=D(c);y={\"%c\":\"%a %b %d %H:%M:%S %Y\",\"%D\":\"%m/%d/%y\",\"%F\":\"%Y-%m-%d\",\"%h\":\"%b\",\"%r\":\"%I:%M:%S %p\",\"%R\":\"%H:%M\",\"%T\":\"%H:%M:%S\",\"%x\":\"%m/%d/%y\",\"%X\":\"%H:%M:%S\",\"%Ec\":\"%c\",\"%EC\":\"%C\",\"%Ex\":\"%m/%d/%y\",\"%EX\":\"%H:%M:%S\",\"%Ey\":\"%y\",\"%EY\":\"%Y\",\"%Od\":\"%d\",\"%Oe\":\"%e\",\"%OH\":\"%H\",\"%OI\":\"%I\",\"%Om\":\"%m\",\"%OM\":\"%M\",\"%OS\":\"%S\",\"%Ou\":\"%u\",\"%OU\":\"%U\",\"%OV\":\"%V\",\"%Ow\":\"%w\",\"%OW\":\"%W\",\"%Oy\":\"%y\"};for(var t in y)c=c.replace(new RegExp(t,\"g\"),y[t]);var Ya=\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\".split(\" \"),\nZa=\"January February March April May June July August September October November December\".split(\" \");y={\"%a\":function(f){return Ya[f.ob].substring(0,3)},\"%A\":function(f){return Ya[f.ob]},\"%b\":function(f){return Za[f.hb].substring(0,3)},\"%B\":function(f){return Za[f.hb]},\"%C\":function(f){return k((f.gb+1900)/100|0,2)},\"%d\":function(f){return k(f.lb,2)},\"%e\":function(f){return h(f.lb,2,\" \")},\"%g\":function(f){return R(f).toString().substring(2)},\"%G\":function(f){return R(f)},\"%H\":function(f){return k(f.nb,\n2)},\"%I\":function(f){f=f.nb;0==f?f=12:12<f&&(f-=12);return k(f,2)},\"%j\":function(f){return k(f.lb+ab($a(f.gb+1900)?bb:cb,f.hb-1),3)},\"%m\":function(f){return k(f.hb+1,2)},\"%M\":function(f){return k(f.Eb,2)},\"%n\":function(){return\"\\n\"},\"%p\":function(f){return 0<=f.nb&&12>f.nb?\"AM\":\"PM\"},\"%S\":function(f){return k(f.Fb,2)},\"%t\":function(){return\"\\t\"},\"%u\":function(f){return f.ob||7},\"%U\":function(f){var n=new Date(f.gb+1900,0,1),q=0===n.getDay()?n:db(n,7-n.getDay());f=new Date(f.gb+1900,f.hb,f.lb);return 0>\nl(q,f)?k(Math.ceil((31-q.getDate()+(ab($a(f.getFullYear())?bb:cb,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(q,n)?\"01\":\"00\"},\"%V\":function(f){var n=new Date(f.gb+1901,0,4),q=u(new Date(f.gb+1900,0,4));n=u(n);var I=db(new Date(f.gb+1900,0,1),f.pb);return 0>l(I,q)?\"53\":0>=l(n,I)?\"01\":k(Math.ceil((q.getFullYear()<f.gb+1900?f.pb+32-q.getDate():f.pb+1-q.getDate())/7),2)},\"%w\":function(f){return f.ob},\"%W\":function(f){var n=new Date(f.gb,0,1),q=1===n.getDay()?n:db(n,0===n.getDay()?1:7-n.getDay()+1);f=\nnew Date(f.gb+1900,f.hb,f.lb);return 0>l(q,f)?k(Math.ceil((31-q.getDate()+(ab($a(f.getFullYear())?bb:cb,f.getMonth()-1)-31)+f.getDate())/7),2):0===l(q,n)?\"01\":\"00\"},\"%y\":function(f){return(f.gb+1900).toString().substring(2)},\"%Y\":function(f){return f.gb+1900},\"%z\":function(f){f=f.Db;var n=0<=f;f=Math.abs(f)/60;return(n?\"+\":\"-\")+String(\"0000\"+(f/60*100+f%60)).slice(-4)},\"%Z\":function(f){return f.Gb},\"%%\":function(){return\"%\"}};for(t in y)c.includes(t)&&(c=c.replace(new RegExp(t,\"g\"),y[t](e)));t=fb(c);\nif(t.length>b)return 0;F.set(t,a);return t.length-1}(function(){function a(){return{jb:{},xb:1,create:function(b,c){c=c||{};var e=this.xb++;c.qb=1;c.object=b;this.jb[e]=c;return e},get:function(b){if(0!==b)return this.jb[b].object},mb:function(b){this.jb[b].qb++},release:function(b){var c=this.jb[b];c.qb--;0>=c.qb&&delete this.jb[b]}}}Q||(Q=Q||a(),S=S||a(),T=T||a(),U=U||a(),V=V||a(),W=W||a(),X=X||a(),Y=Y||a())})();function fb(a){var b=Array(na(a)+1);ma(a,b,0,b.length);return b}\nvar jb={a:function(a){return pa(a+16)+16},c:function(a,b){va.unshift({sb:a,ib:b})},f:function(a,b){va.unshift({sb:a,ib:b})},b:function(a,b,c){(new Ea(a)).ub(b,c);Fa++;throw a;},K:function(a,b){a=D(a);return N.Hb(a,b)},o:function(){return 0},R:function(){},L:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(a,b){a=D(a);return N.Ib(a,b)},P:function(a,b,c,e,h,k){k<<=12;if(0!==(e&16)&&0!==a%65536)b=-28;else if(0!==(e&32)){a=65536*Math.ceil(b/65536);var l=gb(65536,a);\nl?(E.fill(0,l,l+a),a=l):a=0;a?(Ga[a]={wb:a,vb:b,tb:!0,fd:h,Mb:c,flags:e,offset:k},b=a):b=-48}else b=-52;return b},N:function(a,b){var c=Ga[a];0!==b&&c?(b===c.vb&&(Ga[a]=null,c.tb&&hb(c.wb)),a=0):a=-28;return a},m:function(){},J:function(a,b,c){a=D(a);return N.Jb(a,b,c)},G:function(){},s:function(){},I:function(){},k:function(){A()},v:function(a,b){if(0===a)a=Date.now();else if(1===a||4===a)a=O();else return G[ib()>>2]=28,-1;G[b>>2]=a/1E3|0;G[b+4>>2]=a%1E3*1E6|0;return 0},H:function(a,b){return a-\nb},za:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},j:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},Aa:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},ya:function(){A(\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\")},\nS:function(){return 2147483648},A:function(a,b,c){E.copyWithin(a,b,b+c)},l:function(a){var b=E.length;a>>>=0;if(2147483648<a)return!1;for(var c=1;4>=c;c*=2){var e=b*(1+.2/c);e=Math.min(e,a+100663296);e=Math.max(a,e);0<e%65536&&(e+=65536-e%65536);a:{try{ia.grow(Math.min(2147483648,e)-qa.byteLength+65535>>>16);ra();var h=1;break a}catch(k){}h=void 0}if(h)return!0}return!1},F:function(a){for(var b=O();O()-b<a;);},wa:function(a){var b={devicePreference:\"default\",powerPreference:\"default\"},c=[\"default\",\n\"gpu\",\"cpu\"],e=[\"default\",\"high-performance\",\"low-power\"];0!==a&&(b={devicePreference:c[H[a>>2]],powerPreference:e[H[a+4>>2]]});return Q.create(navigator.ml.createContext(b))},D:function(a,b){var c=0;Qa().forEach(function(e,h){var k=b+c;h=G[a+4*h>>2]=k;for(k=0;k<e.length;++k)F[h++>>0]=e.charCodeAt(k);F[h>>0]=0;c+=e.length+1});return 0},E:function(a,b){var c=Qa();G[a>>2]=c.length;var e=0;c.forEach(function(h){e+=h.length+1});G[b>>2]=e;return 0},i:function(){return 0},C:function(a,b){a=1==a||2==a?2:\nA();F[b>>0]=a;return 0},p:function(a,b,c,e){a=N.Lb(a);b=N.Kb(a,b,c);G[e>>2]=b;return 0},z:function(){},q:function(a,b,c,e){for(var h=0,k=0;k<c;k++){for(var l=G[b+8*k>>2],u=G[b+(8*k+4)>>2],R=0;R<u;R++){var y=E[l+R],t=Ha[a];0===y||10===y?((1===a?ha:B)(la(t,0)),t.length=0):t.push(y)}h+=u}G[e>>2]=h;return 0},ca:function(a){var b=Date.now();G[a>>2]=b/1E3|0;G[a+4>>2]=b%1E3*1E3|0;return 0},O:Sa,t:function(a,b){Ta();a=new Date(1E3*G[a>>2]);G[b>>2]=a.getSeconds();G[b+4>>2]=a.getMinutes();G[b+8>>2]=a.getHours();\nG[b+12>>2]=a.getDate();G[b+16>>2]=a.getMonth();G[b+20>>2]=a.getFullYear()-1900;G[b+24>>2]=a.getDay();var c=new Date(a.getFullYear(),0,1);G[b+28>>2]=(a.getTime()-c.getTime())/864E5|0;G[b+36>>2]=-(60*a.getTimezoneOffset());var e=(new Date(a.getFullYear(),6,1)).getTimezoneOffset();c=c.getTimezoneOffset();a=(e!=c&&a.getTimezoneOffset()==Math.min(c,e))|0;G[b+32>>2]=a;a=G[Z()+(a?4:0)>>2];G[b+40>>2]=a;return b},n:function(a){Ta();var b=new Date(G[a+20>>2]+1900,G[a+16>>2],G[a+12>>2],G[a+8>>2],G[a+4>>2],G[a>>\n2],0),c=G[a+32>>2],e=b.getTimezoneOffset(),h=new Date(b.getFullYear(),0,1),k=(new Date(b.getFullYear(),6,1)).getTimezoneOffset(),l=h.getTimezoneOffset(),u=Math.min(l,k);0>c?G[a+32>>2]=Number(k!=l&&u==e):0<c!=(u==e)&&(k=Math.max(l,k),b.setTime(b.getTime()+6E4*((0<c?u:k)-e)));G[a+24>>2]=b.getDay();G[a+28>>2]=(b.getTime()-h.getTime())/864E5|0;G[a>>2]=b.getSeconds();G[a+4>>2]=b.getMinutes();G[a+8>>2]=b.getHours();G[a+12>>2]=b.getDate();G[a+16>>2]=b.getMonth();return b.getTime()/1E3|0},y:function(a){Q.mb(a)},\nx:function(a){Q.release(a)},ta:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.add(b,c);return X.create(c)},sa:function(a,b,c){a=T.get(a);b=X.get(b);c=Oa(c);c=a.averagePool2d(b,c);return X.create(c)},ra:function(a,b,c,e,h){a=T.get(a);b=X.get(b);c=X.get(c);e=X.get(e);h={scale:X.get(G[h>>2]),bias:X.get(G[h+4>>2]),axis:G[h+8>>2],epsilon:J[h+12>>2],activation:Y.get(G[h+16>>2])};h=a.batchNormalization(b,c,e,h);return X.create(h)},qa:function(a,b){a=T.get(a);b=W.get(b);try{var c=a.build(b);return S.create(c)}catch(e){return console.log(\"builder.build failed: \"+\ne),0}},pa:function(a,b,c){a=T.get(a);b=X.get(b);c=a.clamp(b,{minValue:J[c>>2],maxValue:J[c+4>>2]});return X.create(c)},oa:function(a,b,c,e){a=T.get(a);b=P(b,c);c=[];for(var h=0;h<b.length;++h)c.push(X.get(b[h]));e=a.concat(c,e);return X.create(e)},na:function(a,b,c){a=T.get(a);b=Na(b);c=Ma(c,b.type);c=void 0===b.dimensions?a.constant(c[0]):a.constant(b,c);return X.create(c)},ma:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={padding:\"explicit\"===Ia[G[e+40>>2]]?P(H[e>>2],G[e+4>>2]):void 0,strides:P(H[e+\n8>>2],G[e+12>>2]),dilations:P(H[e+16>>2],G[e+20>>2]),autoPad:Ia[G[e+40>>2]],groups:G[e+48>>2],inputLayout:Ka[G[e+52>>2]],filterLayout:Ja[G[e+56>>2]],bias:X.get(G[e+60>>2]),activation:Y.get(G[e+64>>2])};e=a.conv2d(b,c,e);return X.create(e)},la:function(a,b,c,e){a=T.get(a);b=X.get(b);c=X.get(c);e={c:X.get(G[e>>2]),alpha:J[e+4>>2],beta:J[e+8>>2],aTranspose:0!==F[e+12>>0],bTranspose:0!==F[e+13>>0]};e=a.gemm(b,c,e);return X.create(e)},ka:function(a,b,c){a=T.get(a);b=D(b);c=Na(c);c=a.input(b,c);return X.create(c)},\nja:function(a,b,c){a=T.get(a);b=X.get(b);c=a.leakyRelu(b,{alpha:J[c>>2]});return X.create(c)},ia:function(a,b){a=T.get(a).leakyRelu({alpha:J[b>>2]});return Y.create(a)},ha:function(a,b,c){a=T.get(a);b=X.get(b);c=X.get(c);c=a.matmul(b,c);return X.create(c)},ga:function(a,b,c){a=T.get(a);b=X.get(b);c=Oa(c);c=a.maxPool2d(b,c);return X.create(c)},u:function(a){T.release(a)},fa:function(a,b){a=T.get(a);b=X.get(b);b=a.relu(b);return X.create(b)},ea:function(a){a=T.get(a).relu();return Y.create(a)},da:function(a,\nb,c,e){a=T.get(a);b=X.get(b);c=P(e,c);c=a.reshape(b,c);return X.create(c)},va:function(a,b,c){a=S.get(a);b=U.get(b);c=V.get(c);return a.compute(b,c)},ua:function(a){S.mb(a)},w:function(a){S.release(a)},aa:function(a){U.release(a)},ba:function(a,b,c){a=U.get(a);b=D(b);c=0===G[c+12>>2]?Ma(c+0):{resource:Ma(c+0),dimensions:P(H[c+16>>2],G[c+12>>2])};a[b]=c},_:function(a){W.release(a)},$:function(a,b,c){a=W.get(a);b=D(b);c=X.get(c);a[b]=c},Y:function(a){V.release(a)},Z:function(a,b,c){a=V.get(a);b=D(b);\nc=Ma(c);a[b]=c},e:function(a){X.mb(a)},d:function(a){X.release(a)},X:function(a){Y.mb(a)},h:function(a){Y.release(a)},xa:eb,g:function(a,b,c,e){return eb(a,b,c,e)},W:function(a){a=Q.get(a);a=new MLGraphBuilder(a);return T.create(a)},V:function(){return U.create({})},U:function(){return W.create({})},T:function(){return V.create({})}};\n(function(){function a(h){d.asm=h.exports;ia=d.asm.Ba;ra();sa=d.asm.fb;ua.unshift(d.asm.Ca);K--;d.monitorRunDependencies&&d.monitorRunDependencies(K);0==K&&(null!==ya&&(clearInterval(ya),ya=null),L&&(h=L,L=null,h()))}function b(h){a(h.instance)}function c(h){return Ca().then(function(k){return WebAssembly.instantiate(k,e)}).then(h,function(k){B(\"failed to asynchronously prepare wasm: \"+k);A(k)})}var e={a:jb};K++;d.monitorRunDependencies&&d.monitorRunDependencies(K);if(d.instantiateWasm)try{return d.instantiateWasm(e,\na)}catch(h){return B(\"Module.instantiateWasm callback failed with error: \"+h),!1}(function(){return C||\"function\"!==typeof WebAssembly.instantiateStreaming||za()||M.startsWith(\"file://\")||\"function\"!==typeof fetch?c(b):fetch(M,{credentials:\"same-origin\"}).then(function(h){return WebAssembly.instantiateStreaming(h,e).then(b,function(k){B(\"wasm streaming compile failed: \"+k);B(\"falling back to ArrayBuffer instantiation\");return c(b)})})})().catch(ba);return{}})();\nd.___wasm_call_ctors=function(){return(d.___wasm_call_ctors=d.asm.Ca).apply(null,arguments)};d._OrtInit=function(){return(d._OrtInit=d.asm.Da).apply(null,arguments)};d._OrtCreateSessionOptions=function(){return(d._OrtCreateSessionOptions=d.asm.Ea).apply(null,arguments)};d._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(d._OrtSessionOptionsAppendExecutionProviderWebNN=d.asm.Fa).apply(null,arguments)};\nd._OrtAddSessionConfigEntry=function(){return(d._OrtAddSessionConfigEntry=d.asm.Ga).apply(null,arguments)};d._OrtReleaseSessionOptions=function(){return(d._OrtReleaseSessionOptions=d.asm.Ha).apply(null,arguments)};d._OrtCreateSession=function(){return(d._OrtCreateSession=d.asm.Ia).apply(null,arguments)};d._OrtReleaseSession=function(){return(d._OrtReleaseSession=d.asm.Ja).apply(null,arguments)};d._OrtGetInputCount=function(){return(d._OrtGetInputCount=d.asm.Ka).apply(null,arguments)};\nd._OrtGetOutputCount=function(){return(d._OrtGetOutputCount=d.asm.La).apply(null,arguments)};d._OrtGetInputName=function(){return(d._OrtGetInputName=d.asm.Ma).apply(null,arguments)};d._OrtGetOutputName=function(){return(d._OrtGetOutputName=d.asm.Na).apply(null,arguments)};d._OrtFree=function(){return(d._OrtFree=d.asm.Oa).apply(null,arguments)};d._OrtCreateTensor=function(){return(d._OrtCreateTensor=d.asm.Pa).apply(null,arguments)};\nd._OrtGetTensorData=function(){return(d._OrtGetTensorData=d.asm.Qa).apply(null,arguments)};d._OrtReleaseTensor=function(){return(d._OrtReleaseTensor=d.asm.Ra).apply(null,arguments)};d._OrtCreateRunOptions=function(){return(d._OrtCreateRunOptions=d.asm.Sa).apply(null,arguments)};d._OrtAddRunConfigEntry=function(){return(d._OrtAddRunConfigEntry=d.asm.Ta).apply(null,arguments)};d._OrtReleaseRunOptions=function(){return(d._OrtReleaseRunOptions=d.asm.Ua).apply(null,arguments)};\nd._OrtRun=function(){return(d._OrtRun=d.asm.Va).apply(null,arguments)};d._OrtEndProfiling=function(){return(d._OrtEndProfiling=d.asm.Wa).apply(null,arguments)};\nvar pa=d._malloc=function(){return(pa=d._malloc=d.asm.Xa).apply(null,arguments)},ib=d.___errno_location=function(){return(ib=d.___errno_location=d.asm.Ya).apply(null,arguments)},hb=d._free=function(){return(hb=d._free=d.asm.Za).apply(null,arguments)},Z=d.__get_tzname=function(){return(Z=d.__get_tzname=d.asm._a).apply(null,arguments)},Wa=d.__get_daylight=function(){return(Wa=d.__get_daylight=d.asm.$a).apply(null,arguments)},Va=d.__get_timezone=function(){return(Va=d.__get_timezone=d.asm.ab).apply(null,\narguments)},kb=d.stackSave=function(){return(kb=d.stackSave=d.asm.bb).apply(null,arguments)},lb=d.stackRestore=function(){return(lb=d.stackRestore=d.asm.cb).apply(null,arguments)},mb=d.stackAlloc=function(){return(mb=d.stackAlloc=d.asm.db).apply(null,arguments)},gb=d._memalign=function(){return(gb=d._memalign=d.asm.eb).apply(null,arguments)};d.UTF8ToString=D;d.stringToUTF8=function(a,b,c){return ma(a,E,b,c)};d.lengthBytesUTF8=na;d.stackSave=kb;d.stackRestore=lb;d.stackAlloc=mb;var nb;\nL=function ob(){nb||pb();nb||(L=ob)};\nfunction pb(){function a(){if(!nb&&(nb=!0,d.calledRun=!0,!ja)){Da(ua);aa(d);if(d.onRuntimeInitialized)d.onRuntimeInitialized();if(d.postRun)for(\"function\"==typeof d.postRun&&(d.postRun=[d.postRun]);d.postRun.length;){var b=d.postRun.shift();wa.unshift(b)}Da(wa)}}if(!(0<K)){if(d.preRun)for(\"function\"==typeof d.preRun&&(d.preRun=[d.preRun]);d.preRun.length;)xa();Da(ta);0<K||(d.setStatus?(d.setStatus(\"Running...\"),setTimeout(function(){setTimeout(function(){d.setStatus(\"\")},1);a()},1)):a())}}d.run=pb;\nif(d.preInit)for(\"function\"==typeof d.preInit&&(d.preInit=[d.preInit]);0<d.preInit.length;)d.preInit.pop()();pb();\n\n\n  return ortWasm.ready\n}\n);\n})();\nif (typeof exports === 'object' && typeof module === 'object')\n  module.exports = ortWasm;\nelse if (typeof define === 'function' && define['amd'])\n  define([], function() { return ortWasm; });\nelse if (typeof exports === 'object')\n  exports[\"ortWasm\"] = ortWasm;\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","/// @file\n/// @addtogroup flatbuffers_javascript_api\n/// @{\n/// @cond FLATBUFFERS_INTERNAL\n\n/**\n * @fileoverview\n *\n * Need to suppress 'global this' error so the Node.js export line doesn't cause\n * closure compile to error out.\n * @suppress {globalThis}\n */\n\n/**\n * @const\n * @namespace\n */\nvar flatbuffers = {};\n\n/**\n * @typedef {number}\n */\nflatbuffers.Offset;\n\n/**\n * @typedef {{\n *   bb: flatbuffers.ByteBuffer,\n *   bb_pos: number\n * }}\n */\nflatbuffers.Table;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_SHORT = 2;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZEOF_INT = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.FILE_IDENTIFIER_LENGTH = 4;\n\n/**\n * @type {number}\n * @const\n */\nflatbuffers.SIZE_PREFIX_LENGTH = 4;\n\n/**\n * @enum {number}\n */\nflatbuffers.Encoding = {\n  UTF8_BYTES: 1,\n  UTF16_STRING: 2\n};\n\n/**\n * @type {Int32Array}\n * @const\n */\nflatbuffers.int32 = new Int32Array(2);\n\n/**\n * @type {Float32Array}\n * @const\n */\nflatbuffers.float32 = new Float32Array(flatbuffers.int32.buffer);\n\n/**\n * @type {Float64Array}\n * @const\n */\nflatbuffers.float64 = new Float64Array(flatbuffers.int32.buffer);\n\n/**\n * @type {boolean}\n * @const\n */\nflatbuffers.isLittleEndian = new Uint16Array(new Uint8Array([1, 0]).buffer)[0] === 1;\n\n////////////////////////////////////////////////////////////////////////////////\n\n/**\n * @constructor\n * @param {number} low\n * @param {number} high\n */\nflatbuffers.Long = function(low, high) {\n  /**\n   * @type {number}\n   * @const\n   */\n  this.low = low | 0;\n\n  /**\n   * @type {number}\n   * @const\n   */\n  this.high = high | 0;\n};\n\n/**\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Long.create = function(low, high) {\n  // Special-case zero to avoid GC overhead for default values\n  return low == 0 && high == 0 ? flatbuffers.Long.ZERO : new flatbuffers.Long(low, high);\n};\n\n/**\n * @returns {number}\n */\nflatbuffers.Long.prototype.toFloat64 = function() {\n  return (this.low >>> 0) + this.high * 0x100000000;\n};\n\n/**\n * @param {flatbuffers.Long} other\n * @returns {boolean}\n */\nflatbuffers.Long.prototype.equals = function(other) {\n  return this.low == other.low && this.high == other.high;\n};\n\n/**\n * @type {!flatbuffers.Long}\n * @const\n */\nflatbuffers.Long.ZERO = new flatbuffers.Long(0, 0);\n\n/// @endcond\n////////////////////////////////////////////////////////////////////////////////\n/**\n * Create a FlatBufferBuilder.\n *\n * @constructor\n * @param {number=} opt_initial_size\n */\nflatbuffers.Builder = function(opt_initial_size) {\n  if (!opt_initial_size) {\n    var initial_size = 1024;\n  } else {\n    var initial_size = opt_initial_size;\n  }\n\n  /**\n   * @type {flatbuffers.ByteBuffer}\n   * @private\n   */\n  this.bb = flatbuffers.ByteBuffer.allocate(initial_size);\n\n  /**\n   * Remaining space in the ByteBuffer.\n   *\n   * @type {number}\n   * @private\n   */\n  this.space = initial_size;\n\n  /**\n   * Minimum alignment encountered so far.\n   *\n   * @type {number}\n   * @private\n   */\n  this.minalign = 1;\n\n  /**\n   * The vtable for the current table.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtable = null;\n\n  /**\n   * The amount of fields we're actually using.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vtable_in_use = 0;\n\n  /**\n   * Whether we are currently serializing a table.\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.isNested = false;\n\n  /**\n   * Starting offset of the current struct/table.\n   *\n   * @type {number}\n   * @private\n   */\n  this.object_start = 0;\n\n  /**\n   * List of offsets of all vtables.\n   *\n   * @type {Array.<number>}\n   * @private\n   */\n  this.vtables = [];\n\n  /**\n   * For the current vector being built.\n   *\n   * @type {number}\n   * @private\n   */\n  this.vector_num_elems = 0;\n\n  /**\n   * False omits default values from the serialized data\n   *\n   * @type {boolean}\n   * @private\n   */\n  this.force_defaults = false;\n};\n\nflatbuffers.Builder.prototype.clear = function() {\n  this.bb.clear();\n  this.space = this.bb.capacity();\n  this.minalign = 1;\n  this.vtable = null;\n  this.vtable_in_use = 0;\n  this.isNested = false;\n  this.object_start = 0;\n  this.vtables = [];\n  this.vector_num_elems = 0;\n  this.force_defaults = false;\n};\n\n/**\n * In order to save space, fields that are set to their default value\n * don't get serialized into the buffer. Forcing defaults provides a\n * way to manually disable this optimization.\n *\n * @param {boolean} forceDefaults true always serializes default values\n */\nflatbuffers.Builder.prototype.forceDefaults = function(forceDefaults) {\n  this.force_defaults = forceDefaults;\n};\n\n/**\n * Get the ByteBuffer representing the FlatBuffer. Only call this after you've\n * called finish(). The actual data starts at the ByteBuffer's current position,\n * not necessarily at 0.\n *\n * @returns {flatbuffers.ByteBuffer}\n */\nflatbuffers.Builder.prototype.dataBuffer = function() {\n  return this.bb;\n};\n\n/**\n * Get the bytes representing the FlatBuffer. Only call this after you've\n * called finish().\n *\n * @returns {!Uint8Array}\n */\nflatbuffers.Builder.prototype.asUint8Array = function() {\n  return this.bb.bytes().subarray(this.bb.position(), this.bb.position() + this.offset());\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Prepare to write an element of `size` after `additional_bytes` have been\n * written, e.g. if you write a string, you need to align such the int length\n * field is aligned to 4 bytes, and the string data follows it directly. If all\n * you need to do is alignment, `additional_bytes` will be 0.\n *\n * @param {number} size This is the of the new element to write\n * @param {number} additional_bytes The padding size\n */\nflatbuffers.Builder.prototype.prep = function(size, additional_bytes) {\n  // Track the biggest thing we've ever aligned to.\n  if (size > this.minalign) {\n    this.minalign = size;\n  }\n\n  // Find the amount of alignment needed such that `size` is properly\n  // aligned after `additional_bytes`\n  var align_size = ((~(this.bb.capacity() - this.space + additional_bytes)) + 1) & (size - 1);\n\n  // Reallocate the buffer if needed.\n  while (this.space < align_size + size + additional_bytes) {\n    var old_buf_size = this.bb.capacity();\n    this.bb = flatbuffers.Builder.growByteBuffer(this.bb);\n    this.space += this.bb.capacity() - old_buf_size;\n  }\n\n  this.pad(align_size);\n};\n\n/**\n * @param {number} byte_size\n */\nflatbuffers.Builder.prototype.pad = function(byte_size) {\n  for (var i = 0; i < byte_size; i++) {\n    this.bb.writeInt8(--this.space, 0);\n  }\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt8 = function(value) {\n  this.bb.writeInt8(this.space -= 1, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt16 = function(value) {\n  this.bb.writeInt16(this.space -= 2, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeInt32 = function(value) {\n  this.bb.writeInt32(this.space -= 4, value);\n};\n\n/**\n * @param {flatbuffers.Long} value\n */\nflatbuffers.Builder.prototype.writeInt64 = function(value) {\n  this.bb.writeInt64(this.space -= 8, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat32 = function(value) {\n  this.bb.writeFloat32(this.space -= 4, value);\n};\n\n/**\n * @param {number} value\n */\nflatbuffers.Builder.prototype.writeFloat64 = function(value) {\n  this.bb.writeFloat64(this.space -= 8, value);\n};\n/// @endcond\n\n/**\n * Add an `int8` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int8` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt8 = function(value) {\n  this.prep(1, 0);\n  this.writeInt8(value);\n};\n\n/**\n * Add an `int16` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int16` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt16 = function(value) {\n  this.prep(2, 0);\n  this.writeInt16(value);\n};\n\n/**\n * Add an `int32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `int32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt32 = function(value) {\n  this.prep(4, 0);\n  this.writeInt32(value);\n};\n\n/**\n * Add an `int64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {flatbuffers.Long} value The `int64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addInt64 = function(value) {\n  this.prep(8, 0);\n  this.writeInt64(value);\n};\n\n/**\n * Add a `float32` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float32` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat32 = function(value) {\n  this.prep(4, 0);\n  this.writeFloat32(value);\n};\n\n/**\n * Add a `float64` to the buffer, properly aligned, and grows the buffer (if necessary).\n * @param {number} value The `float64` to add the the buffer.\n */\nflatbuffers.Builder.prototype.addFloat64 = function(value) {\n  this.prep(8, 0);\n  this.writeFloat64(value);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt8 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt8(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt16 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt16(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addInt32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Long} value\n * @param {flatbuffers.Long} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldInt64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || !value.equals(defaultValue)) {\n    this.addInt64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat32 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat32(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {number} value\n * @param {number} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldFloat64 = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addFloat64(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldOffset = function(voffset, value, defaultValue) {\n  if (this.force_defaults || value != defaultValue) {\n    this.addOffset(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structs are stored inline, so nothing additional is being added. `d` is always 0.\n *\n * @param {number} voffset\n * @param {flatbuffers.Offset} value\n * @param {flatbuffers.Offset} defaultValue\n */\nflatbuffers.Builder.prototype.addFieldStruct = function(voffset, value, defaultValue) {\n  if (value != defaultValue) {\n    this.nested(value);\n    this.slot(voffset);\n  }\n};\n\n/**\n * Structures are always stored inline, they need to be created right\n * where they're used.  You'll get this assertion failure if you\n * created it elsewhere.\n *\n * @param {flatbuffers.Offset} obj The offset of the created object\n */\nflatbuffers.Builder.prototype.nested = function(obj) {\n  if (obj != this.offset()) {\n    throw new Error('FlatBuffers: struct must be serialized inline.');\n  }\n};\n\n/**\n * Should not be creating any other object, string or vector\n * while an object is being constructed\n */\nflatbuffers.Builder.prototype.notNested = function() {\n  if (this.isNested) {\n    throw new Error('FlatBuffers: object serialization must not be nested.');\n  }\n};\n\n/**\n * Set the current vtable at `voffset` to the current location in the buffer.\n *\n * @param {number} voffset\n */\nflatbuffers.Builder.prototype.slot = function(voffset) {\n  this.vtable[voffset] = this.offset();\n};\n\n/**\n * @returns {flatbuffers.Offset} Offset relative to the end of the buffer.\n */\nflatbuffers.Builder.prototype.offset = function() {\n  return this.bb.capacity() - this.space;\n};\n\n/**\n * Doubles the size of the backing ByteBuffer and copies the old data towards\n * the end of the new buffer (since we build the buffer backwards).\n *\n * @param {flatbuffers.ByteBuffer} bb The current buffer with the existing data\n * @returns {!flatbuffers.ByteBuffer} A new byte buffer with the old data copied\n * to it. The data is located at the end of the buffer.\n *\n * uint8Array.set() formally takes {Array<number>|ArrayBufferView}, so to pass\n * it a uint8Array we need to suppress the type check:\n * @suppress {checkTypes}\n */\nflatbuffers.Builder.growByteBuffer = function(bb) {\n  var old_buf_size = bb.capacity();\n\n  // Ensure we don't grow beyond what fits in an int.\n  if (old_buf_size & 0xC0000000) {\n    throw new Error('FlatBuffers: cannot grow buffer beyond 2 gigabytes.');\n  }\n\n  var new_buf_size = old_buf_size << 1;\n  var nbb = flatbuffers.ByteBuffer.allocate(new_buf_size);\n  nbb.setPosition(new_buf_size - old_buf_size);\n  nbb.bytes().set(bb.bytes(), new_buf_size - old_buf_size);\n  return nbb;\n};\n/// @endcond\n\n/**\n * Adds on offset, relative to where it will be written.\n *\n * @param {flatbuffers.Offset} offset The offset to add.\n */\nflatbuffers.Builder.prototype.addOffset = function(offset) {\n  this.prep(flatbuffers.SIZEOF_INT, 0); // Ensure alignment is already done.\n  this.writeInt32(this.offset() - offset + flatbuffers.SIZEOF_INT);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Start encoding a new object in the buffer.  Users will not usually need to\n * call this directly. The FlatBuffers compiler will generate helper methods\n * that call this method internally.\n *\n * @param {number} numfields\n */\nflatbuffers.Builder.prototype.startObject = function(numfields) {\n  this.notNested();\n  if (this.vtable == null) {\n    this.vtable = [];\n  }\n  this.vtable_in_use = numfields;\n  for (var i = 0; i < numfields; i++) {\n    this.vtable[i] = 0; // This will push additional elements as needed\n  }\n  this.isNested = true;\n  this.object_start = this.offset();\n};\n\n/**\n * Finish off writing the object that is under construction.\n *\n * @returns {flatbuffers.Offset} The offset to the object inside `dataBuffer`\n */\nflatbuffers.Builder.prototype.endObject = function() {\n  if (this.vtable == null || !this.isNested) {\n    throw new Error('FlatBuffers: endObject called without startObject');\n  }\n\n  this.addInt32(0);\n  var vtableloc = this.offset();\n\n  // Trim trailing zeroes.\n  var i = this.vtable_in_use - 1;\n  for (; i >= 0 && this.vtable[i] == 0; i--) {}\n  var trimmed_size = i + 1;\n\n  // Write out the current vtable.\n  for (; i >= 0; i--) {\n    // Offset relative to the start of the table.\n    this.addInt16(this.vtable[i] != 0 ? vtableloc - this.vtable[i] : 0);\n  }\n\n  var standard_fields = 2; // The fields below:\n  this.addInt16(vtableloc - this.object_start);\n  var len = (trimmed_size + standard_fields) * flatbuffers.SIZEOF_SHORT;\n  this.addInt16(len);\n\n  // Search for an existing vtable that matches the current one.\n  var existing_vtable = 0;\n  var vt1 = this.space;\nouter_loop:\n  for (i = 0; i < this.vtables.length; i++) {\n    var vt2 = this.bb.capacity() - this.vtables[i];\n    if (len == this.bb.readInt16(vt2)) {\n      for (var j = flatbuffers.SIZEOF_SHORT; j < len; j += flatbuffers.SIZEOF_SHORT) {\n        if (this.bb.readInt16(vt1 + j) != this.bb.readInt16(vt2 + j)) {\n          continue outer_loop;\n        }\n      }\n      existing_vtable = this.vtables[i];\n      break;\n    }\n  }\n\n  if (existing_vtable) {\n    // Found a match:\n    // Remove the current vtable.\n    this.space = this.bb.capacity() - vtableloc;\n\n    // Point table to existing vtable.\n    this.bb.writeInt32(this.space, existing_vtable - vtableloc);\n  } else {\n    // No match:\n    // Add the location of the current vtable to the list of vtables.\n    this.vtables.push(this.offset());\n\n    // Point table to current vtable.\n    this.bb.writeInt32(this.bb.capacity() - vtableloc, this.offset() - vtableloc);\n  }\n\n  this.isNested = false;\n  return vtableloc;\n};\n/// @endcond\n\n/**\n * Finalize a buffer, poiting to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n * @param {boolean=} opt_size_prefix\n */\nflatbuffers.Builder.prototype.finish = function(root_table, opt_file_identifier, opt_size_prefix) {\n  var size_prefix = opt_size_prefix ? flatbuffers.SIZE_PREFIX_LENGTH : 0;\n  if (opt_file_identifier) {\n    var file_identifier = opt_file_identifier;\n    this.prep(this.minalign, flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH + size_prefix);\n    if (file_identifier.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n      throw new Error('FlatBuffers: file identifier must be length ' +\n        flatbuffers.FILE_IDENTIFIER_LENGTH);\n    }\n    for (var i = flatbuffers.FILE_IDENTIFIER_LENGTH - 1; i >= 0; i--) {\n      this.writeInt8(file_identifier.charCodeAt(i));\n    }\n  }\n  this.prep(this.minalign, flatbuffers.SIZEOF_INT + size_prefix);\n  this.addOffset(root_table);\n  if (size_prefix) {\n    this.addInt32(this.bb.capacity() - this.space);\n  }\n  this.bb.setPosition(this.space);\n};\n\n/**\n * Finalize a size prefixed buffer, pointing to the given `root_table`.\n *\n * @param {flatbuffers.Offset} root_table\n * @param {string=} opt_file_identifier\n */\nflatbuffers.Builder.prototype.finishSizePrefixed = function (root_table, opt_file_identifier) {\n  this.finish(root_table, opt_file_identifier, true);\n};\n\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * This checks a required field has been set in a given table that has\n * just been constructed.\n *\n * @param {flatbuffers.Offset} table\n * @param {number} field\n */\nflatbuffers.Builder.prototype.requiredField = function(table, field) {\n  var table_start = this.bb.capacity() - table;\n  var vtable_start = table_start - this.bb.readInt32(table_start);\n  var ok = this.bb.readInt16(vtable_start + field) != 0;\n\n  // If this fails, the caller will show what field needs to be set.\n  if (!ok) {\n    throw new Error('FlatBuffers: field ' + field + ' must be set');\n  }\n};\n\n/**\n * Start a new array/vector of objects.  Users usually will not call\n * this directly. The FlatBuffers compiler will create a start/end\n * method for vector types in generated code.\n *\n * @param {number} elem_size The size of each element in the array\n * @param {number} num_elems The number of elements in the array\n * @param {number} alignment The alignment of the array\n */\nflatbuffers.Builder.prototype.startVector = function(elem_size, num_elems, alignment) {\n  this.notNested();\n  this.vector_num_elems = num_elems;\n  this.prep(flatbuffers.SIZEOF_INT, elem_size * num_elems);\n  this.prep(alignment, elem_size * num_elems); // Just in case alignment > int.\n};\n\n/**\n * Finish off the creation of an array and all its elements. The array must be\n * created with `startVector`.\n *\n * @returns {flatbuffers.Offset} The offset at which the newly created array\n * starts.\n */\nflatbuffers.Builder.prototype.endVector = function() {\n  this.writeInt32(this.vector_num_elems);\n  return this.offset();\n};\n/// @endcond\n\n/**\n * Encode the string `s` in the buffer using UTF-8. If a Uint8Array is passed\n * instead of a string, it is assumed to contain valid UTF-8 encoded data.\n *\n * @param {string|Uint8Array} s The string to encode\n * @return {flatbuffers.Offset} The offset in the buffer where the encoded string starts\n */\nflatbuffers.Builder.prototype.createString = function(s) {\n  if (s instanceof Uint8Array) {\n    var utf8 = s;\n  } else {\n    var utf8 = [];\n    var i = 0;\n\n    while (i < s.length) {\n      var codePoint;\n\n      // Decode UTF-16\n      var a = s.charCodeAt(i++);\n      if (a < 0xD800 || a >= 0xDC00) {\n        codePoint = a;\n      } else {\n        var b = s.charCodeAt(i++);\n        codePoint = (a << 10) + b + (0x10000 - (0xD800 << 10) - 0xDC00);\n      }\n\n      // Encode UTF-8\n      if (codePoint < 0x80) {\n        utf8.push(codePoint);\n      } else {\n        if (codePoint < 0x800) {\n          utf8.push(((codePoint >> 6) & 0x1F) | 0xC0);\n        } else {\n          if (codePoint < 0x10000) {\n            utf8.push(((codePoint >> 12) & 0x0F) | 0xE0);\n          } else {\n            utf8.push(\n              ((codePoint >> 18) & 0x07) | 0xF0,\n              ((codePoint >> 12) & 0x3F) | 0x80);\n          }\n          utf8.push(((codePoint >> 6) & 0x3F) | 0x80);\n        }\n        utf8.push((codePoint & 0x3F) | 0x80);\n      }\n    }\n  }\n\n  this.addInt8(0);\n  this.startVector(1, utf8.length, 1);\n  this.bb.setPosition(this.space -= utf8.length);\n  for (var i = 0, offset = this.space, bytes = this.bb.bytes(); i < utf8.length; i++) {\n    bytes[offset++] = utf8[i];\n  }\n  return this.endVector();\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.Builder.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n////////////////////////////////////////////////////////////////////////////////\n/// @cond FLATBUFFERS_INTERNAL\n/**\n * Create a new ByteBuffer with a given array of bytes (`Uint8Array`).\n *\n * @constructor\n * @param {Uint8Array} bytes\n */\nflatbuffers.ByteBuffer = function(bytes) {\n  /**\n   * @type {Uint8Array}\n   * @private\n   */\n  this.bytes_ = bytes;\n\n  /**\n   * @type {number}\n   * @private\n   */\n  this.position_ = 0;\n};\n\n/**\n * Create and allocate a new ByteBuffer with a given size.\n *\n * @param {number} byte_size\n * @returns {!flatbuffers.ByteBuffer}\n */\nflatbuffers.ByteBuffer.allocate = function(byte_size) {\n  return new flatbuffers.ByteBuffer(new Uint8Array(byte_size));\n};\n\nflatbuffers.ByteBuffer.prototype.clear = function() {\n  this.position_ = 0;\n};\n\n/**\n * Get the underlying `Uint8Array`.\n *\n * @returns {Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.bytes = function() {\n  return this.bytes_;\n};\n\n/**\n * Get the buffer's position.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.position = function() {\n  return this.position_;\n};\n\n/**\n * Set the buffer's position.\n *\n * @param {number} position\n */\nflatbuffers.ByteBuffer.prototype.setPosition = function(position) {\n  this.position_ = position;\n};\n\n/**\n * Get the buffer's capacity.\n *\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.capacity = function() {\n  return this.bytes_.length;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt8 = function(offset) {\n  return this.readUint8(offset) << 24 >> 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint8 = function(offset) {\n  return this.bytes_[offset];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt16 = function(offset) {\n  return this.readUint16(offset) << 16 >> 16;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint16 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readInt32 = function(offset) {\n  return this.bytes_[offset] | this.bytes_[offset + 1] << 8 | this.bytes_[offset + 2] << 16 | this.bytes_[offset + 3] << 24;\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readUint32 = function(offset) {\n  return this.readInt32(offset) >>> 0;\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readInt64 = function(offset) {\n  return new flatbuffers.Long(this.readInt32(offset), this.readInt32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.readUint64 = function(offset) {\n  return new flatbuffers.Long(this.readUint32(offset), this.readUint32(offset + 4));\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat32 = function(offset) {\n  flatbuffers.int32[0] = this.readInt32(offset);\n  return flatbuffers.float32[0];\n};\n\n/**\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.readFloat64 = function(offset) {\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1] = this.readInt32(offset);\n  flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0] = this.readInt32(offset + 4);\n  return flatbuffers.float64[0];\n};\n\n/**\n * @param {number} offset\n * @param {number|boolean} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt8 = function(offset, value) {\n  this.bytes_[offset] = /** @type {number} */(value);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint8 = function(offset, value) {\n  this.bytes_[offset] = value;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt16 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint16 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt32 = function(offset, value) {\n  this.bytes_[offset] = value;\n  this.bytes_[offset + 1] = value >> 8;\n  this.bytes_[offset + 2] = value >> 16;\n  this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint32 = function(offset, value) {\n    this.bytes_[offset] = value;\n    this.bytes_[offset + 1] = value >> 8;\n    this.bytes_[offset + 2] = value >> 16;\n    this.bytes_[offset + 3] = value >> 24;\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeInt64 = function(offset, value) {\n  this.writeInt32(offset, value.low);\n  this.writeInt32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {flatbuffers.Long} value\n */\nflatbuffers.ByteBuffer.prototype.writeUint64 = function(offset, value) {\n    this.writeUint32(offset, value.low);\n    this.writeUint32(offset + 4, value.high);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat32 = function(offset, value) {\n  flatbuffers.float32[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[0]);\n};\n\n/**\n * @param {number} offset\n * @param {number} value\n */\nflatbuffers.ByteBuffer.prototype.writeFloat64 = function(offset, value) {\n  flatbuffers.float64[0] = value;\n  this.writeInt32(offset, flatbuffers.int32[flatbuffers.isLittleEndian ? 0 : 1]);\n  this.writeInt32(offset + 4, flatbuffers.int32[flatbuffers.isLittleEndian ? 1 : 0]);\n};\n\n/**\n * Return the file identifier.   Behavior is undefined for FlatBuffers whose\n * schema does not include a file_identifier (likely points at padding or the\n * start of a the root vtable).\n * @returns {string}\n */\nflatbuffers.ByteBuffer.prototype.getBufferIdentifier = function() {\n  if (this.bytes_.length < this.position_ + flatbuffers.SIZEOF_INT +\n      flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error(\n        'FlatBuffers: ByteBuffer is too short to contain an identifier.');\n  }\n  var result = \"\";\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    result += String.fromCharCode(\n        this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i));\n  }\n  return result;\n};\n\n/**\n * Look up a field in the vtable, return an offset into the object, or 0 if the\n * field is not present.\n *\n * @param {number} bb_pos\n * @param {number} vtable_offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__offset = function(bb_pos, vtable_offset) {\n  var vtable = bb_pos - this.readInt32(bb_pos);\n  return vtable_offset < this.readInt16(vtable) ? this.readInt16(vtable + vtable_offset) : 0;\n};\n\n/**\n * Initialize any Table-derived type to point to the union at the given offset.\n *\n * @param {flatbuffers.Table} t\n * @param {number} offset\n * @returns {flatbuffers.Table}\n */\nflatbuffers.ByteBuffer.prototype.__union = function(t, offset) {\n  t.bb_pos = offset + this.readInt32(offset);\n  t.bb = this;\n  return t;\n};\n\n/**\n * Create a JavaScript string from UTF-8 data stored inside the FlatBuffer.\n * This allocates a new string and converts to wide chars upon each access.\n *\n * To avoid the conversion to UTF-16, pass flatbuffers.Encoding.UTF8_BYTES as\n * the \"optionalEncoding\" argument. This is useful for avoiding conversion to\n * and from UTF-16 when the data will just be packaged back up in another\n * FlatBuffer later on.\n *\n * @param {number} offset\n * @param {flatbuffers.Encoding=} opt_encoding Defaults to UTF16_STRING\n * @returns {string|!Uint8Array}\n */\nflatbuffers.ByteBuffer.prototype.__string = function(offset, opt_encoding) {\n  offset += this.readInt32(offset);\n\n  var length = this.readInt32(offset);\n  var result = '';\n  var i = 0;\n\n  offset += flatbuffers.SIZEOF_INT;\n\n  if (opt_encoding === flatbuffers.Encoding.UTF8_BYTES) {\n    return this.bytes_.subarray(offset, offset + length);\n  }\n\n  while (i < length) {\n    var codePoint;\n\n    // Decode UTF-8\n    var a = this.readUint8(offset + i++);\n    if (a < 0xC0) {\n      codePoint = a;\n    } else {\n      var b = this.readUint8(offset + i++);\n      if (a < 0xE0) {\n        codePoint =\n          ((a & 0x1F) << 6) |\n          (b & 0x3F);\n      } else {\n        var c = this.readUint8(offset + i++);\n        if (a < 0xF0) {\n          codePoint =\n            ((a & 0x0F) << 12) |\n            ((b & 0x3F) << 6) |\n            (c & 0x3F);\n        } else {\n          var d = this.readUint8(offset + i++);\n          codePoint =\n            ((a & 0x07) << 18) |\n            ((b & 0x3F) << 12) |\n            ((c & 0x3F) << 6) |\n            (d & 0x3F);\n        }\n      }\n    }\n\n    // Encode UTF-16\n    if (codePoint < 0x10000) {\n      result += String.fromCharCode(codePoint);\n    } else {\n      codePoint -= 0x10000;\n      result += String.fromCharCode(\n        (codePoint >> 10) + 0xD800,\n        (codePoint & ((1 << 10) - 1)) + 0xDC00);\n    }\n  }\n\n  return result;\n};\n\n/**\n * Retrieve the relative offset stored at \"offset\"\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__indirect = function(offset) {\n  return offset + this.readInt32(offset);\n};\n\n/**\n * Get the start of data of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector = function(offset) {\n  return offset + this.readInt32(offset) + flatbuffers.SIZEOF_INT; // data starts after the length\n};\n\n/**\n * Get the length of a vector whose offset is stored at \"offset\" in this object.\n *\n * @param {number} offset\n * @returns {number}\n */\nflatbuffers.ByteBuffer.prototype.__vector_len = function(offset) {\n  return this.readInt32(offset + this.readInt32(offset));\n};\n\n/**\n * @param {string} ident\n * @returns {boolean}\n */\nflatbuffers.ByteBuffer.prototype.__has_identifier = function(ident) {\n  if (ident.length != flatbuffers.FILE_IDENTIFIER_LENGTH) {\n    throw new Error('FlatBuffers: file identifier must be length ' +\n                    flatbuffers.FILE_IDENTIFIER_LENGTH);\n  }\n  for (var i = 0; i < flatbuffers.FILE_IDENTIFIER_LENGTH; i++) {\n    if (ident.charCodeAt(i) != this.readInt8(this.position_ + flatbuffers.SIZEOF_INT + i)) {\n      return false;\n    }\n  }\n  return true;\n};\n\n/**\n * A helper function to avoid generated code depending on this file directly.\n *\n * @param {number} low\n * @param {number} high\n * @returns {!flatbuffers.Long}\n */\nflatbuffers.ByteBuffer.prototype.createLong = function(low, high) {\n  return flatbuffers.Long.create(low, high);\n};\n\n// Exports for Node.js and RequireJS\nexport { flatbuffers };\n\n/// @endcond\n/// @}\n","\"use strict\";\r\nexports.__esModule = true;\r\nvar Guid = /** @class */ (function () {\r\n    function Guid(guid) {\r\n        if (!guid) {\r\n            throw new TypeError(\"Invalid argument; `value` has no value.\");\r\n        }\r\n        this.value = Guid.EMPTY;\r\n        if (guid && Guid.isGuid(guid)) {\r\n            this.value = guid;\r\n        }\r\n    }\r\n    Guid.isGuid = function (guid) {\r\n        var value = guid.toString();\r\n        return guid && (guid instanceof Guid || Guid.validator.test(value));\r\n    };\r\n    Guid.create = function () {\r\n        return new Guid([Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\"));\r\n    };\r\n    Guid.createEmpty = function () {\r\n        return new Guid(\"emptyguid\");\r\n    };\r\n    Guid.parse = function (guid) {\r\n        return new Guid(guid);\r\n    };\r\n    Guid.raw = function () {\r\n        return [Guid.gen(2), Guid.gen(1), Guid.gen(1), Guid.gen(1), Guid.gen(3)].join(\"-\");\r\n    };\r\n    Guid.gen = function (count) {\r\n        var out = \"\";\r\n        for (var i = 0; i < count; i++) {\r\n            // tslint:disable-next-line:no-bitwise\r\n            out += (((1 + Math.random()) * 0x10000) | 0).toString(16).substring(1);\r\n        }\r\n        return out;\r\n    };\r\n    Guid.prototype.equals = function (other) {\r\n        // Comparing string `value` against provided `guid` will auto-call\r\n        // toString on `guid` for comparison\r\n        return Guid.isGuid(other) && this.value === other.toString();\r\n    };\r\n    Guid.prototype.isEmpty = function () {\r\n        return this.value === Guid.EMPTY;\r\n    };\r\n    Guid.prototype.toString = function () {\r\n        return this.value;\r\n    };\r\n    Guid.prototype.toJSON = function () {\r\n        return {\r\n            value: this.value\r\n        };\r\n    };\r\n    Guid.validator = new RegExp(\"^[a-z0-9]{8}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{4}-[a-z0-9]{12}$\", \"i\");\r\n    Guid.EMPTY = \"00000000-0000-0000-0000-000000000000\";\r\n    return Guid;\r\n}());\r\nexports.Guid = Guid;\r\n","module.exports = Long;\r\n\r\n/**\r\n * wasm optimizations, to do native i64 multiplication and divide\r\n */\r\nvar wasm = null;\r\n\r\ntry {\r\n  wasm = new WebAssembly.Instance(new WebAssembly.Module(new Uint8Array([\r\n    0, 97, 115, 109, 1, 0, 0, 0, 1, 13, 2, 96, 0, 1, 127, 96, 4, 127, 127, 127, 127, 1, 127, 3, 7, 6, 0, 1, 1, 1, 1, 1, 6, 6, 1, 127, 1, 65, 0, 11, 7, 50, 6, 3, 109, 117, 108, 0, 1, 5, 100, 105, 118, 95, 115, 0, 2, 5, 100, 105, 118, 95, 117, 0, 3, 5, 114, 101, 109, 95, 115, 0, 4, 5, 114, 101, 109, 95, 117, 0, 5, 8, 103, 101, 116, 95, 104, 105, 103, 104, 0, 0, 10, 191, 1, 6, 4, 0, 35, 0, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 126, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 127, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 128, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 129, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11, 36, 1, 1, 126, 32, 0, 173, 32, 1, 173, 66, 32, 134, 132, 32, 2, 173, 32, 3, 173, 66, 32, 134, 132, 130, 34, 4, 66, 32, 135, 167, 36, 0, 32, 4, 167, 11\r\n  ])), {}).exports;\r\n} catch (e) {\r\n  // no wasm support :(\r\n}\r\n\r\n/**\r\n * Constructs a 64 bit two's-complement integer, given its low and high 32 bit values as *signed* integers.\r\n *  See the from* functions below for more convenient ways of constructing Longs.\r\n * @exports Long\r\n * @class A Long class for representing a 64 bit two's-complement integer value.\r\n * @param {number} low The low (signed) 32 bits of the long\r\n * @param {number} high The high (signed) 32 bits of the long\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @constructor\r\n */\r\nfunction Long(low, high, unsigned) {\r\n\r\n    /**\r\n     * The low 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.low = low | 0;\r\n\r\n    /**\r\n     * The high 32 bits as a signed value.\r\n     * @type {number}\r\n     */\r\n    this.high = high | 0;\r\n\r\n    /**\r\n     * Whether unsigned or not.\r\n     * @type {boolean}\r\n     */\r\n    this.unsigned = !!unsigned;\r\n}\r\n\r\n// The internal representation of a long is the two given signed, 32-bit values.\r\n// We use 32-bit pieces because these are the size of integers on which\r\n// Javascript performs bit-operations.  For operations like addition and\r\n// multiplication, we split each number into 16 bit pieces, which can easily be\r\n// multiplied within Javascript's floating-point representation without overflow\r\n// or change in sign.\r\n//\r\n// In the algorithms below, we frequently reduce the negative case to the\r\n// positive case by negating the input(s) and then post-processing the result.\r\n// Note that we must ALWAYS check specially whether those values are MIN_VALUE\r\n// (-2^63) because -MIN_VALUE == MIN_VALUE (since 2^63 cannot be represented as\r\n// a positive number, it overflows back into a negative).  Not handling this\r\n// case would often result in infinite recursion.\r\n//\r\n// Common constant values ZERO, ONE, NEG_ONE, etc. are defined below the from*\r\n// methods on which they depend.\r\n\r\n/**\r\n * An indicator used to reliably determine if an object is a Long or not.\r\n * @type {boolean}\r\n * @const\r\n * @private\r\n */\r\nLong.prototype.__isLong__;\r\n\r\nObject.defineProperty(Long.prototype, \"__isLong__\", { value: true });\r\n\r\n/**\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n * @inner\r\n */\r\nfunction isLong(obj) {\r\n    return (obj && obj[\"__isLong__\"]) === true;\r\n}\r\n\r\n/**\r\n * Tests if the specified object is a Long.\r\n * @function\r\n * @param {*} obj Object\r\n * @returns {boolean}\r\n */\r\nLong.isLong = isLong;\r\n\r\n/**\r\n * A cache of the Long representations of small integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar INT_CACHE = {};\r\n\r\n/**\r\n * A cache of the Long representations of small unsigned integer values.\r\n * @type {!Object}\r\n * @inner\r\n */\r\nvar UINT_CACHE = {};\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromInt(value, unsigned) {\r\n    var obj, cachedObj, cache;\r\n    if (unsigned) {\r\n        value >>>= 0;\r\n        if (cache = (0 <= value && value < 256)) {\r\n            cachedObj = UINT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, (value | 0) < 0 ? -1 : 0, true);\r\n        if (cache)\r\n            UINT_CACHE[value] = obj;\r\n        return obj;\r\n    } else {\r\n        value |= 0;\r\n        if (cache = (-128 <= value && value < 128)) {\r\n            cachedObj = INT_CACHE[value];\r\n            if (cachedObj)\r\n                return cachedObj;\r\n        }\r\n        obj = fromBits(value, value < 0 ? -1 : 0, false);\r\n        if (cache)\r\n            INT_CACHE[value] = obj;\r\n        return obj;\r\n    }\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given 32 bit integer value.\r\n * @function\r\n * @param {number} value The 32 bit integer in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromInt = fromInt;\r\n\r\n/**\r\n * @param {number} value\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromNumber(value, unsigned) {\r\n    if (isNaN(value))\r\n        return unsigned ? UZERO : ZERO;\r\n    if (unsigned) {\r\n        if (value < 0)\r\n            return UZERO;\r\n        if (value >= TWO_PWR_64_DBL)\r\n            return MAX_UNSIGNED_VALUE;\r\n    } else {\r\n        if (value <= -TWO_PWR_63_DBL)\r\n            return MIN_VALUE;\r\n        if (value + 1 >= TWO_PWR_63_DBL)\r\n            return MAX_VALUE;\r\n    }\r\n    if (value < 0)\r\n        return fromNumber(-value, unsigned).neg();\r\n    return fromBits((value % TWO_PWR_32_DBL) | 0, (value / TWO_PWR_32_DBL) | 0, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the given value, provided that it is a finite number. Otherwise, zero is returned.\r\n * @function\r\n * @param {number} value The number in question\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromNumber = fromNumber;\r\n\r\n/**\r\n * @param {number} lowBits\r\n * @param {number} highBits\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromBits(lowBits, highBits, unsigned) {\r\n    return new Long(lowBits, highBits, unsigned);\r\n}\r\n\r\n/**\r\n * Returns a Long representing the 64 bit integer that comes by concatenating the given low and high bits. Each is\r\n *  assumed to use 32 bits.\r\n * @function\r\n * @param {number} lowBits The low 32 bits\r\n * @param {number} highBits The high 32 bits\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromBits = fromBits;\r\n\r\n/**\r\n * @function\r\n * @param {number} base\r\n * @param {number} exponent\r\n * @returns {number}\r\n * @inner\r\n */\r\nvar pow_dbl = Math.pow; // Used 4 times (4*8 to 15+4)\r\n\r\n/**\r\n * @param {string} str\r\n * @param {(boolean|number)=} unsigned\r\n * @param {number=} radix\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromString(str, unsigned, radix) {\r\n    if (str.length === 0)\r\n        throw Error('empty string');\r\n    if (str === \"NaN\" || str === \"Infinity\" || str === \"+Infinity\" || str === \"-Infinity\")\r\n        return ZERO;\r\n    if (typeof unsigned === 'number') {\r\n        // For goog.math.long compatibility\r\n        radix = unsigned,\r\n        unsigned = false;\r\n    } else {\r\n        unsigned = !! unsigned;\r\n    }\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n\r\n    var p;\r\n    if ((p = str.indexOf('-')) > 0)\r\n        throw Error('interior hyphen');\r\n    else if (p === 0) {\r\n        return fromString(str.substring(1), unsigned, radix).neg();\r\n    }\r\n\r\n    // Do several (8) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 8));\r\n\r\n    var result = ZERO;\r\n    for (var i = 0; i < str.length; i += 8) {\r\n        var size = Math.min(8, str.length - i),\r\n            value = parseInt(str.substring(i, i + size), radix);\r\n        if (size < 8) {\r\n            var power = fromNumber(pow_dbl(radix, size));\r\n            result = result.mul(power).add(fromNumber(value));\r\n        } else {\r\n            result = result.mul(radixToPower);\r\n            result = result.add(fromNumber(value));\r\n        }\r\n    }\r\n    result.unsigned = unsigned;\r\n    return result;\r\n}\r\n\r\n/**\r\n * Returns a Long representation of the given string, written using the specified radix.\r\n * @function\r\n * @param {string} str The textual representation of the Long\r\n * @param {(boolean|number)=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {number=} radix The radix in which the text is written (2-36), defaults to 10\r\n * @returns {!Long} The corresponding Long value\r\n */\r\nLong.fromString = fromString;\r\n\r\n/**\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val\r\n * @param {boolean=} unsigned\r\n * @returns {!Long}\r\n * @inner\r\n */\r\nfunction fromValue(val, unsigned) {\r\n    if (typeof val === 'number')\r\n        return fromNumber(val, unsigned);\r\n    if (typeof val === 'string')\r\n        return fromString(val, unsigned);\r\n    // Throws for non-objects, converts non-instanceof Long:\r\n    return fromBits(val.low, val.high, typeof unsigned === 'boolean' ? unsigned : val.unsigned);\r\n}\r\n\r\n/**\r\n * Converts the specified value to a Long using the appropriate from* function for its type.\r\n * @function\r\n * @param {!Long|number|string|!{low: number, high: number, unsigned: boolean}} val Value\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {!Long}\r\n */\r\nLong.fromValue = fromValue;\r\n\r\n// NOTE: the compiler should inline these constant values below and then remove these variables, so there should be\r\n// no runtime penalty for these.\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_16_DBL = 1 << 16;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24_DBL = 1 << 24;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_32_DBL = TWO_PWR_16_DBL * TWO_PWR_16_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_64_DBL = TWO_PWR_32_DBL * TWO_PWR_32_DBL;\r\n\r\n/**\r\n * @type {number}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_63_DBL = TWO_PWR_64_DBL / 2;\r\n\r\n/**\r\n * @type {!Long}\r\n * @const\r\n * @inner\r\n */\r\nvar TWO_PWR_24 = fromInt(TWO_PWR_24_DBL);\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ZERO = fromInt(0);\r\n\r\n/**\r\n * Signed zero.\r\n * @type {!Long}\r\n */\r\nLong.ZERO = ZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UZERO = fromInt(0, true);\r\n\r\n/**\r\n * Unsigned zero.\r\n * @type {!Long}\r\n */\r\nLong.UZERO = UZERO;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar ONE = fromInt(1);\r\n\r\n/**\r\n * Signed one.\r\n * @type {!Long}\r\n */\r\nLong.ONE = ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar UONE = fromInt(1, true);\r\n\r\n/**\r\n * Unsigned one.\r\n * @type {!Long}\r\n */\r\nLong.UONE = UONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar NEG_ONE = fromInt(-1);\r\n\r\n/**\r\n * Signed negative one.\r\n * @type {!Long}\r\n */\r\nLong.NEG_ONE = NEG_ONE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_VALUE = fromBits(0xFFFFFFFF|0, 0x7FFFFFFF|0, false);\r\n\r\n/**\r\n * Maximum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_VALUE = MAX_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MAX_UNSIGNED_VALUE = fromBits(0xFFFFFFFF|0, 0xFFFFFFFF|0, true);\r\n\r\n/**\r\n * Maximum unsigned value.\r\n * @type {!Long}\r\n */\r\nLong.MAX_UNSIGNED_VALUE = MAX_UNSIGNED_VALUE;\r\n\r\n/**\r\n * @type {!Long}\r\n * @inner\r\n */\r\nvar MIN_VALUE = fromBits(0, 0x80000000|0, false);\r\n\r\n/**\r\n * Minimum signed value.\r\n * @type {!Long}\r\n */\r\nLong.MIN_VALUE = MIN_VALUE;\r\n\r\n/**\r\n * @alias Long.prototype\r\n * @inner\r\n */\r\nvar LongPrototype = Long.prototype;\r\n\r\n/**\r\n * Converts the Long to a 32 bit integer, assuming it is a 32 bit integer.\r\n * @returns {number}\r\n */\r\nLongPrototype.toInt = function toInt() {\r\n    return this.unsigned ? this.low >>> 0 : this.low;\r\n};\r\n\r\n/**\r\n * Converts the Long to a the nearest floating-point representation of this value (double, 53 bit mantissa).\r\n * @returns {number}\r\n */\r\nLongPrototype.toNumber = function toNumber() {\r\n    if (this.unsigned)\r\n        return ((this.high >>> 0) * TWO_PWR_32_DBL) + (this.low >>> 0);\r\n    return this.high * TWO_PWR_32_DBL + (this.low >>> 0);\r\n};\r\n\r\n/**\r\n * Converts the Long to a string written in the specified radix.\r\n * @param {number=} radix Radix (2-36), defaults to 10\r\n * @returns {string}\r\n * @override\r\n * @throws {RangeError} If `radix` is out of range\r\n */\r\nLongPrototype.toString = function toString(radix) {\r\n    radix = radix || 10;\r\n    if (radix < 2 || 36 < radix)\r\n        throw RangeError('radix');\r\n    if (this.isZero())\r\n        return '0';\r\n    if (this.isNegative()) { // Unsigned Longs are never negative\r\n        if (this.eq(MIN_VALUE)) {\r\n            // We need to change the Long value before it can be negated, so we remove\r\n            // the bottom-most digit in this base and then recurse to do the rest.\r\n            var radixLong = fromNumber(radix),\r\n                div = this.div(radixLong),\r\n                rem1 = div.mul(radixLong).sub(this);\r\n            return div.toString(radix) + rem1.toInt().toString(radix);\r\n        } else\r\n            return '-' + this.neg().toString(radix);\r\n    }\r\n\r\n    // Do several (6) digits each time through the loop, so as to\r\n    // minimize the calls to the very expensive emulated div.\r\n    var radixToPower = fromNumber(pow_dbl(radix, 6), this.unsigned),\r\n        rem = this;\r\n    var result = '';\r\n    while (true) {\r\n        var remDiv = rem.div(radixToPower),\r\n            intval = rem.sub(remDiv.mul(radixToPower)).toInt() >>> 0,\r\n            digits = intval.toString(radix);\r\n        rem = remDiv;\r\n        if (rem.isZero())\r\n            return digits + result;\r\n        else {\r\n            while (digits.length < 6)\r\n                digits = '0' + digits;\r\n            result = '' + digits + result;\r\n        }\r\n    }\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as a signed integer.\r\n * @returns {number} Signed high bits\r\n */\r\nLongPrototype.getHighBits = function getHighBits() {\r\n    return this.high;\r\n};\r\n\r\n/**\r\n * Gets the high 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned high bits\r\n */\r\nLongPrototype.getHighBitsUnsigned = function getHighBitsUnsigned() {\r\n    return this.high >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as a signed integer.\r\n * @returns {number} Signed low bits\r\n */\r\nLongPrototype.getLowBits = function getLowBits() {\r\n    return this.low;\r\n};\r\n\r\n/**\r\n * Gets the low 32 bits as an unsigned integer.\r\n * @returns {number} Unsigned low bits\r\n */\r\nLongPrototype.getLowBitsUnsigned = function getLowBitsUnsigned() {\r\n    return this.low >>> 0;\r\n};\r\n\r\n/**\r\n * Gets the number of bits needed to represent the absolute value of this Long.\r\n * @returns {number}\r\n */\r\nLongPrototype.getNumBitsAbs = function getNumBitsAbs() {\r\n    if (this.isNegative()) // Unsigned Longs are never negative\r\n        return this.eq(MIN_VALUE) ? 64 : this.neg().getNumBitsAbs();\r\n    var val = this.high != 0 ? this.high : this.low;\r\n    for (var bit = 31; bit > 0; bit--)\r\n        if ((val & (1 << bit)) != 0)\r\n            break;\r\n    return this.high != 0 ? bit + 33 : bit + 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isZero = function isZero() {\r\n    return this.high === 0 && this.low === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals zero. This is an alias of {@link Long#isZero}.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eqz = LongPrototype.isZero;\r\n\r\n/**\r\n * Tests if this Long's value is negative.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isNegative = function isNegative() {\r\n    return !this.unsigned && this.high < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is positive.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isPositive = function isPositive() {\r\n    return this.unsigned || this.high >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is odd.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isOdd = function isOdd() {\r\n    return (this.low & 1) === 1;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is even.\r\n * @returns {boolean}\r\n */\r\nLongPrototype.isEven = function isEven() {\r\n    return (this.low & 1) === 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.equals = function equals(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.unsigned !== other.unsigned && (this.high >>> 31) === 1 && (other.high >>> 31) === 1)\r\n        return false;\r\n    return this.high === other.high && this.low === other.low;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value equals the specified's. This is an alias of {@link Long#equals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.eq = LongPrototype.equals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.notEquals = function notEquals(other) {\r\n    return !this.eq(/* validates */ other);\r\n};\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.neq = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value differs from the specified's. This is an alias of {@link Long#notEquals}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ne = LongPrototype.notEquals;\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThan = function lessThan(other) {\r\n    return this.comp(/* validates */ other) < 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than the specified's. This is an alias of {@link Long#lessThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lt = LongPrototype.lessThan;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lessThanOrEqual = function lessThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) <= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.lte = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is less than or equal the specified's. This is an alias of {@link Long#lessThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.le = LongPrototype.lessThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThan = function greaterThan(other) {\r\n    return this.comp(/* validates */ other) > 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than the specified's. This is an alias of {@link Long#greaterThan}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gt = LongPrototype.greaterThan;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.greaterThanOrEqual = function greaterThanOrEqual(other) {\r\n    return this.comp(/* validates */ other) >= 0;\r\n};\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.gte = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Tests if this Long's value is greater than or equal the specified's. This is an alias of {@link Long#greaterThanOrEqual}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {boolean}\r\n */\r\nLongPrototype.ge = LongPrototype.greaterThanOrEqual;\r\n\r\n/**\r\n * Compares this Long's value with the specified's.\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.compare = function compare(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    if (this.eq(other))\r\n        return 0;\r\n    var thisNeg = this.isNegative(),\r\n        otherNeg = other.isNegative();\r\n    if (thisNeg && !otherNeg)\r\n        return -1;\r\n    if (!thisNeg && otherNeg)\r\n        return 1;\r\n    // At this point the sign bits are the same\r\n    if (!this.unsigned)\r\n        return this.sub(other).isNegative() ? -1 : 1;\r\n    // Both are positive if at least one is unsigned\r\n    return (other.high >>> 0) > (this.high >>> 0) || (other.high === this.high && (other.low >>> 0) > (this.low >>> 0)) ? -1 : 1;\r\n};\r\n\r\n/**\r\n * Compares this Long's value with the specified's. This is an alias of {@link Long#compare}.\r\n * @function\r\n * @param {!Long|number|string} other Other value\r\n * @returns {number} 0 if they are the same, 1 if the this is greater and -1\r\n *  if the given one is greater\r\n */\r\nLongPrototype.comp = LongPrototype.compare;\r\n\r\n/**\r\n * Negates this Long's value.\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.negate = function negate() {\r\n    if (!this.unsigned && this.eq(MIN_VALUE))\r\n        return MIN_VALUE;\r\n    return this.not().add(ONE);\r\n};\r\n\r\n/**\r\n * Negates this Long's value. This is an alias of {@link Long#negate}.\r\n * @function\r\n * @returns {!Long} Negated Long\r\n */\r\nLongPrototype.neg = LongPrototype.negate;\r\n\r\n/**\r\n * Returns the sum of this and the specified Long.\r\n * @param {!Long|number|string} addend Addend\r\n * @returns {!Long} Sum\r\n */\r\nLongPrototype.add = function add(addend) {\r\n    if (!isLong(addend))\r\n        addend = fromValue(addend);\r\n\r\n    // Divide each number into 4 chunks of 16 bits, and then sum the chunks.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = addend.high >>> 16;\r\n    var b32 = addend.high & 0xFFFF;\r\n    var b16 = addend.low >>> 16;\r\n    var b00 = addend.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 + b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 + b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 + b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 + b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long.\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.subtract = function subtract(subtrahend) {\r\n    if (!isLong(subtrahend))\r\n        subtrahend = fromValue(subtrahend);\r\n    return this.add(subtrahend.neg());\r\n};\r\n\r\n/**\r\n * Returns the difference of this and the specified Long. This is an alias of {@link Long#subtract}.\r\n * @function\r\n * @param {!Long|number|string} subtrahend Subtrahend\r\n * @returns {!Long} Difference\r\n */\r\nLongPrototype.sub = LongPrototype.subtract;\r\n\r\n/**\r\n * Returns the product of this and the specified Long.\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.multiply = function multiply(multiplier) {\r\n    if (this.isZero())\r\n        return ZERO;\r\n    if (!isLong(multiplier))\r\n        multiplier = fromValue(multiplier);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = wasm.mul(this.low,\r\n                           this.high,\r\n                           multiplier.low,\r\n                           multiplier.high);\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (multiplier.isZero())\r\n        return ZERO;\r\n    if (this.eq(MIN_VALUE))\r\n        return multiplier.isOdd() ? MIN_VALUE : ZERO;\r\n    if (multiplier.eq(MIN_VALUE))\r\n        return this.isOdd() ? MIN_VALUE : ZERO;\r\n\r\n    if (this.isNegative()) {\r\n        if (multiplier.isNegative())\r\n            return this.neg().mul(multiplier.neg());\r\n        else\r\n            return this.neg().mul(multiplier).neg();\r\n    } else if (multiplier.isNegative())\r\n        return this.mul(multiplier.neg()).neg();\r\n\r\n    // If both longs are small, use float multiplication\r\n    if (this.lt(TWO_PWR_24) && multiplier.lt(TWO_PWR_24))\r\n        return fromNumber(this.toNumber() * multiplier.toNumber(), this.unsigned);\r\n\r\n    // Divide each long into 4 chunks of 16 bits, and then add up 4x4 products.\r\n    // We can skip products that would overflow.\r\n\r\n    var a48 = this.high >>> 16;\r\n    var a32 = this.high & 0xFFFF;\r\n    var a16 = this.low >>> 16;\r\n    var a00 = this.low & 0xFFFF;\r\n\r\n    var b48 = multiplier.high >>> 16;\r\n    var b32 = multiplier.high & 0xFFFF;\r\n    var b16 = multiplier.low >>> 16;\r\n    var b00 = multiplier.low & 0xFFFF;\r\n\r\n    var c48 = 0, c32 = 0, c16 = 0, c00 = 0;\r\n    c00 += a00 * b00;\r\n    c16 += c00 >>> 16;\r\n    c00 &= 0xFFFF;\r\n    c16 += a16 * b00;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c16 += a00 * b16;\r\n    c32 += c16 >>> 16;\r\n    c16 &= 0xFFFF;\r\n    c32 += a32 * b00;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a16 * b16;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c32 += a00 * b32;\r\n    c48 += c32 >>> 16;\r\n    c32 &= 0xFFFF;\r\n    c48 += a48 * b00 + a32 * b16 + a16 * b32 + a00 * b48;\r\n    c48 &= 0xFFFF;\r\n    return fromBits((c16 << 16) | c00, (c48 << 16) | c32, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the product of this and the specified Long. This is an alias of {@link Long#multiply}.\r\n * @function\r\n * @param {!Long|number|string} multiplier Multiplier\r\n * @returns {!Long} Product\r\n */\r\nLongPrototype.mul = LongPrototype.multiply;\r\n\r\n/**\r\n * Returns this Long divided by the specified. The result is signed if this Long is signed or\r\n *  unsigned if this Long is unsigned.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.divide = function divide(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n    if (divisor.isZero())\r\n        throw Error('division by zero');\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        // guard against signed division overflow: the largest\r\n        // negative number / -1 would be 1 larger than the largest\r\n        // positive number, due to two's complement.\r\n        if (!this.unsigned &&\r\n            this.high === -0x80000000 &&\r\n            divisor.low === -1 && divisor.high === -1) {\r\n            // be consistent with non-wasm code path\r\n            return this;\r\n        }\r\n        var low = (this.unsigned ? wasm.div_u : wasm.div_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    if (this.isZero())\r\n        return this.unsigned ? UZERO : ZERO;\r\n    var approx, rem, res;\r\n    if (!this.unsigned) {\r\n        // This section is only relevant for signed longs and is derived from the\r\n        // closure library as a whole.\r\n        if (this.eq(MIN_VALUE)) {\r\n            if (divisor.eq(ONE) || divisor.eq(NEG_ONE))\r\n                return MIN_VALUE;  // recall that -MIN_VALUE == MIN_VALUE\r\n            else if (divisor.eq(MIN_VALUE))\r\n                return ONE;\r\n            else {\r\n                // At this point, we have |other| >= 2, so |this/other| < |MIN_VALUE|.\r\n                var halfThis = this.shr(1);\r\n                approx = halfThis.div(divisor).shl(1);\r\n                if (approx.eq(ZERO)) {\r\n                    return divisor.isNegative() ? ONE : NEG_ONE;\r\n                } else {\r\n                    rem = this.sub(divisor.mul(approx));\r\n                    res = approx.add(rem.div(divisor));\r\n                    return res;\r\n                }\r\n            }\r\n        } else if (divisor.eq(MIN_VALUE))\r\n            return this.unsigned ? UZERO : ZERO;\r\n        if (this.isNegative()) {\r\n            if (divisor.isNegative())\r\n                return this.neg().div(divisor.neg());\r\n            return this.neg().div(divisor).neg();\r\n        } else if (divisor.isNegative())\r\n            return this.div(divisor.neg()).neg();\r\n        res = ZERO;\r\n    } else {\r\n        // The algorithm below has not been made for unsigned longs. It's therefore\r\n        // required to take special care of the MSB prior to running it.\r\n        if (!divisor.unsigned)\r\n            divisor = divisor.toUnsigned();\r\n        if (divisor.gt(this))\r\n            return UZERO;\r\n        if (divisor.gt(this.shru(1))) // 15 >>> 1 = 7 ; with divisor = 8 ; true\r\n            return UONE;\r\n        res = UZERO;\r\n    }\r\n\r\n    // Repeat the following until the remainder is less than other:  find a\r\n    // floating-point that approximates remainder / other *from below*, add this\r\n    // into the result, and subtract it from the remainder.  It is critical that\r\n    // the approximate value is less than or equal to the real value so that the\r\n    // remainder never becomes negative.\r\n    rem = this;\r\n    while (rem.gte(divisor)) {\r\n        // Approximate the result of division. This may be a little greater or\r\n        // smaller than the actual value.\r\n        approx = Math.max(1, Math.floor(rem.toNumber() / divisor.toNumber()));\r\n\r\n        // We will tweak the approximate result by changing it in the 48-th digit or\r\n        // the smallest non-fractional digit, whichever is larger.\r\n        var log2 = Math.ceil(Math.log(approx) / Math.LN2),\r\n            delta = (log2 <= 48) ? 1 : pow_dbl(2, log2 - 48),\r\n\r\n        // Decrease the approximation until it is smaller than the remainder.  Note\r\n        // that if it is too large, the product overflows and is negative.\r\n            approxRes = fromNumber(approx),\r\n            approxRem = approxRes.mul(divisor);\r\n        while (approxRem.isNegative() || approxRem.gt(rem)) {\r\n            approx -= delta;\r\n            approxRes = fromNumber(approx, this.unsigned);\r\n            approxRem = approxRes.mul(divisor);\r\n        }\r\n\r\n        // We know the answer can't be zero... and actually, zero would cause\r\n        // infinite recursion since we would make no progress.\r\n        if (approxRes.isZero())\r\n            approxRes = ONE;\r\n\r\n        res = res.add(approxRes);\r\n        rem = rem.sub(approxRem);\r\n    }\r\n    return res;\r\n};\r\n\r\n/**\r\n * Returns this Long divided by the specified. This is an alias of {@link Long#divide}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Quotient\r\n */\r\nLongPrototype.div = LongPrototype.divide;\r\n\r\n/**\r\n * Returns this Long modulo the specified.\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.modulo = function modulo(divisor) {\r\n    if (!isLong(divisor))\r\n        divisor = fromValue(divisor);\r\n\r\n    // use wasm support if present\r\n    if (wasm) {\r\n        var low = (this.unsigned ? wasm.rem_u : wasm.rem_s)(\r\n            this.low,\r\n            this.high,\r\n            divisor.low,\r\n            divisor.high\r\n        );\r\n        return fromBits(low, wasm.get_high(), this.unsigned);\r\n    }\r\n\r\n    return this.sub(this.div(divisor).mul(divisor));\r\n};\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.mod = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns this Long modulo the specified. This is an alias of {@link Long#modulo}.\r\n * @function\r\n * @param {!Long|number|string} divisor Divisor\r\n * @returns {!Long} Remainder\r\n */\r\nLongPrototype.rem = LongPrototype.modulo;\r\n\r\n/**\r\n * Returns the bitwise NOT of this Long.\r\n * @returns {!Long}\r\n */\r\nLongPrototype.not = function not() {\r\n    return fromBits(~this.low, ~this.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise AND of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.and = function and(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low & other.low, this.high & other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise OR of this Long and the specified.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.or = function or(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low | other.low, this.high | other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns the bitwise XOR of this Long and the given one.\r\n * @param {!Long|number|string} other Other Long\r\n * @returns {!Long}\r\n */\r\nLongPrototype.xor = function xor(other) {\r\n    if (!isLong(other))\r\n        other = fromValue(other);\r\n    return fromBits(this.low ^ other.low, this.high ^ other.high, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftLeft = function shiftLeft(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits(this.low << numBits, (this.high << numBits) | (this.low >>> (32 - numBits)), this.unsigned);\r\n    else\r\n        return fromBits(0, this.low << (numBits - 32), this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits shifted to the left by the given amount. This is an alias of {@link Long#shiftLeft}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shl = LongPrototype.shiftLeft;\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRight = function shiftRight(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    if ((numBits &= 63) === 0)\r\n        return this;\r\n    else if (numBits < 32)\r\n        return fromBits((this.low >>> numBits) | (this.high << (32 - numBits)), this.high >> numBits, this.unsigned);\r\n    else\r\n        return fromBits(this.high >> (numBits - 32), this.high >= 0 ? 0 : -1, this.unsigned);\r\n};\r\n\r\n/**\r\n * Returns this Long with bits arithmetically shifted to the right by the given amount. This is an alias of {@link Long#shiftRight}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr = LongPrototype.shiftRight;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount.\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shiftRightUnsigned = function shiftRightUnsigned(numBits) {\r\n    if (isLong(numBits))\r\n        numBits = numBits.toInt();\r\n    numBits &= 63;\r\n    if (numBits === 0)\r\n        return this;\r\n    else {\r\n        var high = this.high;\r\n        if (numBits < 32) {\r\n            var low = this.low;\r\n            return fromBits((low >>> numBits) | (high << (32 - numBits)), high >>> numBits, this.unsigned);\r\n        } else if (numBits === 32)\r\n            return fromBits(high, 0, this.unsigned);\r\n        else\r\n            return fromBits(high >>> (numBits - 32), 0, this.unsigned);\r\n    }\r\n};\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shru = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Returns this Long with bits logically shifted to the right by the given amount. This is an alias of {@link Long#shiftRightUnsigned}.\r\n * @function\r\n * @param {number|!Long} numBits Number of bits\r\n * @returns {!Long} Shifted Long\r\n */\r\nLongPrototype.shr_u = LongPrototype.shiftRightUnsigned;\r\n\r\n/**\r\n * Converts this Long to signed.\r\n * @returns {!Long} Signed long\r\n */\r\nLongPrototype.toSigned = function toSigned() {\r\n    if (!this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, false);\r\n};\r\n\r\n/**\r\n * Converts this Long to unsigned.\r\n * @returns {!Long} Unsigned long\r\n */\r\nLongPrototype.toUnsigned = function toUnsigned() {\r\n    if (this.unsigned)\r\n        return this;\r\n    return fromBits(this.low, this.high, true);\r\n};\r\n\r\n/**\r\n * Converts this Long to its byte representation.\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {!Array.<number>} Byte representation\r\n */\r\nLongPrototype.toBytes = function toBytes(le) {\r\n    return le ? this.toBytesLE() : this.toBytesBE();\r\n};\r\n\r\n/**\r\n * Converts this Long to its little endian byte representation.\r\n * @returns {!Array.<number>} Little endian byte representation\r\n */\r\nLongPrototype.toBytesLE = function toBytesLE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        lo        & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo >>> 16 & 0xff,\r\n        lo >>> 24       ,\r\n        hi        & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi >>> 16 & 0xff,\r\n        hi >>> 24\r\n    ];\r\n};\r\n\r\n/**\r\n * Converts this Long to its big endian byte representation.\r\n * @returns {!Array.<number>} Big endian byte representation\r\n */\r\nLongPrototype.toBytesBE = function toBytesBE() {\r\n    var hi = this.high,\r\n        lo = this.low;\r\n    return [\r\n        hi >>> 24       ,\r\n        hi >>> 16 & 0xff,\r\n        hi >>>  8 & 0xff,\r\n        hi        & 0xff,\r\n        lo >>> 24       ,\r\n        lo >>> 16 & 0xff,\r\n        lo >>>  8 & 0xff,\r\n        lo        & 0xff\r\n    ];\r\n};\r\n\r\n/**\r\n * Creates a Long from its byte representation.\r\n * @param {!Array.<number>} bytes Byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @param {boolean=} le Whether little or big endian, defaults to big endian\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytes = function fromBytes(bytes, unsigned, le) {\r\n    return le ? Long.fromBytesLE(bytes, unsigned) : Long.fromBytesBE(bytes, unsigned);\r\n};\r\n\r\n/**\r\n * Creates a Long from its little endian byte representation.\r\n * @param {!Array.<number>} bytes Little endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesLE = function fromBytesLE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[0]       |\r\n        bytes[1] <<  8 |\r\n        bytes[2] << 16 |\r\n        bytes[3] << 24,\r\n        bytes[4]       |\r\n        bytes[5] <<  8 |\r\n        bytes[6] << 16 |\r\n        bytes[7] << 24,\r\n        unsigned\r\n    );\r\n};\r\n\r\n/**\r\n * Creates a Long from its big endian byte representation.\r\n * @param {!Array.<number>} bytes Big endian byte representation\r\n * @param {boolean=} unsigned Whether unsigned or not, defaults to signed\r\n * @returns {Long} The corresponding Long value\r\n */\r\nLong.fromBytesBE = function fromBytesBE(bytes, unsigned) {\r\n    return new Long(\r\n        bytes[4] << 24 |\r\n        bytes[5] << 16 |\r\n        bytes[6] <<  8 |\r\n        bytes[7],\r\n        bytes[0] << 24 |\r\n        bytes[1] << 16 |\r\n        bytes[2] <<  8 |\r\n        bytes[3],\r\n        unsigned\r\n    );\r\n};\r\n","/*eslint-disable block-scoped-var, id-length, no-control-regex, no-magic-numbers, no-prototype-builtins, no-redeclare, no-shadow, no-var, sort-vars*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.onnx = (function() {\n\n    /**\n     * Namespace onnx.\n     * @exports onnx\n     * @namespace\n     */\n    var onnx = {};\n\n    /**\n     * Version enum.\n     * @name onnx.Version\n     * @enum {string}\n     * @property {number} _START_VERSION=0 _START_VERSION value\n     * @property {number} IR_VERSION_2017_10_10=1 IR_VERSION_2017_10_10 value\n     * @property {number} IR_VERSION_2017_10_30=2 IR_VERSION_2017_10_30 value\n     * @property {number} IR_VERSION_2017_11_3=3 IR_VERSION_2017_11_3 value\n     * @property {number} IR_VERSION_2019_1_22=4 IR_VERSION_2019_1_22 value\n     * @property {number} IR_VERSION=5 IR_VERSION value\n     */\n    onnx.Version = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"_START_VERSION\"] = 0;\n        values[valuesById[1] = \"IR_VERSION_2017_10_10\"] = 1;\n        values[valuesById[2] = \"IR_VERSION_2017_10_30\"] = 2;\n        values[valuesById[3] = \"IR_VERSION_2017_11_3\"] = 3;\n        values[valuesById[4] = \"IR_VERSION_2019_1_22\"] = 4;\n        values[valuesById[5] = \"IR_VERSION\"] = 5;\n        return values;\n    })();\n\n    onnx.AttributeProto = (function() {\n\n        /**\n         * Properties of an AttributeProto.\n         * @memberof onnx\n         * @interface IAttributeProto\n         * @property {string|null} [name] AttributeProto name\n         * @property {string|null} [refAttrName] AttributeProto refAttrName\n         * @property {string|null} [docString] AttributeProto docString\n         * @property {onnx.AttributeProto.AttributeType|null} [type] AttributeProto type\n         * @property {number|null} [f] AttributeProto f\n         * @property {number|Long|null} [i] AttributeProto i\n         * @property {Uint8Array|null} [s] AttributeProto s\n         * @property {onnx.ITensorProto|null} [t] AttributeProto t\n         * @property {onnx.IGraphProto|null} [g] AttributeProto g\n         * @property {Array.<number>|null} [floats] AttributeProto floats\n         * @property {Array.<number|Long>|null} [ints] AttributeProto ints\n         * @property {Array.<Uint8Array>|null} [strings] AttributeProto strings\n         * @property {Array.<onnx.ITensorProto>|null} [tensors] AttributeProto tensors\n         * @property {Array.<onnx.IGraphProto>|null} [graphs] AttributeProto graphs\n         */\n\n        /**\n         * Constructs a new AttributeProto.\n         * @memberof onnx\n         * @classdesc Represents an AttributeProto.\n         * @implements IAttributeProto\n         * @constructor\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         */\n        function AttributeProto(properties) {\n            this.floats = [];\n            this.ints = [];\n            this.strings = [];\n            this.tensors = [];\n            this.graphs = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * AttributeProto name.\n         * @member {string} name\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.name = \"\";\n\n        /**\n         * AttributeProto refAttrName.\n         * @member {string} refAttrName\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.refAttrName = \"\";\n\n        /**\n         * AttributeProto docString.\n         * @member {string} docString\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.docString = \"\";\n\n        /**\n         * AttributeProto type.\n         * @member {onnx.AttributeProto.AttributeType} type\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.type = 0;\n\n        /**\n         * AttributeProto f.\n         * @member {number} f\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.f = 0;\n\n        /**\n         * AttributeProto i.\n         * @member {number|Long} i\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.i = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * AttributeProto s.\n         * @member {Uint8Array} s\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.s = $util.newBuffer([]);\n\n        /**\n         * AttributeProto t.\n         * @member {onnx.ITensorProto|null|undefined} t\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.t = null;\n\n        /**\n         * AttributeProto g.\n         * @member {onnx.IGraphProto|null|undefined} g\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.g = null;\n\n        /**\n         * AttributeProto floats.\n         * @member {Array.<number>} floats\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.floats = $util.emptyArray;\n\n        /**\n         * AttributeProto ints.\n         * @member {Array.<number|Long>} ints\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.ints = $util.emptyArray;\n\n        /**\n         * AttributeProto strings.\n         * @member {Array.<Uint8Array>} strings\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.strings = $util.emptyArray;\n\n        /**\n         * AttributeProto tensors.\n         * @member {Array.<onnx.ITensorProto>} tensors\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.tensors = $util.emptyArray;\n\n        /**\n         * AttributeProto graphs.\n         * @member {Array.<onnx.IGraphProto>} graphs\n         * @memberof onnx.AttributeProto\n         * @instance\n         */\n        AttributeProto.prototype.graphs = $util.emptyArray;\n\n        /**\n         * Creates a new AttributeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto=} [properties] Properties to set\n         * @returns {onnx.AttributeProto} AttributeProto instance\n         */\n        AttributeProto.create = function create(properties) {\n            return new AttributeProto(properties);\n        };\n\n        /**\n         * Encodes the specified AttributeProto message. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                writer.uint32(/* id 2, wireType 5 =*/21).float(message.f);\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                writer.uint32(/* id 3, wireType 0 =*/24).int64(message.i);\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).bytes(message.s);\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                $root.onnx.TensorProto.encode(message.t, writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                $root.onnx.GraphProto.encode(message.g, writer.uint32(/* id 6, wireType 2 =*/50).fork()).ldelim();\n            if (message.floats != null && message.floats.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.floats.length; ++i)\n                    writer.float(message.floats[i]);\n                writer.ldelim();\n            }\n            if (message.ints != null && message.ints.length) {\n                writer.uint32(/* id 8, wireType 2 =*/66).fork();\n                for (var i = 0; i < message.ints.length; ++i)\n                    writer.int64(message.ints[i]);\n                writer.ldelim();\n            }\n            if (message.strings != null && message.strings.length)\n                for (var i = 0; i < message.strings.length; ++i)\n                    writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.strings[i]);\n            if (message.tensors != null && message.tensors.length)\n                for (var i = 0; i < message.tensors.length; ++i)\n                    $root.onnx.TensorProto.encode(message.tensors[i], writer.uint32(/* id 10, wireType 2 =*/82).fork()).ldelim();\n            if (message.graphs != null && message.graphs.length)\n                for (var i = 0; i < message.graphs.length; ++i)\n                    $root.onnx.GraphProto.encode(message.graphs[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 13, wireType 2 =*/106).string(message.docString);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                writer.uint32(/* id 20, wireType 0 =*/160).int32(message.type);\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                writer.uint32(/* id 21, wireType 2 =*/170).string(message.refAttrName);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified AttributeProto message, length delimited. Does not implicitly {@link onnx.AttributeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.IAttributeProto} message AttributeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        AttributeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.AttributeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 21:\n                    message.refAttrName = reader.string();\n                    break;\n                case 13:\n                    message.docString = reader.string();\n                    break;\n                case 20:\n                    message.type = reader.int32();\n                    break;\n                case 2:\n                    message.f = reader.float();\n                    break;\n                case 3:\n                    message.i = reader.int64();\n                    break;\n                case 4:\n                    message.s = reader.bytes();\n                    break;\n                case 5:\n                    message.t = $root.onnx.TensorProto.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.g = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 7:\n                    if (!(message.floats && message.floats.length))\n                        message.floats = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floats.push(reader.float());\n                    } else\n                        message.floats.push(reader.float());\n                    break;\n                case 8:\n                    if (!(message.ints && message.ints.length))\n                        message.ints = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.ints.push(reader.int64());\n                    } else\n                        message.ints.push(reader.int64());\n                    break;\n                case 9:\n                    if (!(message.strings && message.strings.length))\n                        message.strings = [];\n                    message.strings.push(reader.bytes());\n                    break;\n                case 10:\n                    if (!(message.tensors && message.tensors.length))\n                        message.tensors = [];\n                    message.tensors.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 11:\n                    if (!(message.graphs && message.graphs.length))\n                        message.graphs = [];\n                    message.graphs.push($root.onnx.GraphProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an AttributeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.AttributeProto} AttributeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        AttributeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an AttributeProto message.\n         * @function verify\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        AttributeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                if (!$util.isString(message.refAttrName))\n                    return \"refAttrName: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                switch (message.type) {\n                default:\n                    return \"type: enum value expected\";\n                case 0:\n                case 1:\n                case 2:\n                case 3:\n                case 4:\n                case 5:\n                case 6:\n                case 7:\n                case 8:\n                case 9:\n                case 10:\n                    break;\n                }\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                if (typeof message.f !== \"number\")\n                    return \"f: number expected\";\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (!$util.isInteger(message.i) && !(message.i && $util.isInteger(message.i.low) && $util.isInteger(message.i.high)))\n                    return \"i: integer|Long expected\";\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                if (!(message.s && typeof message.s.length === \"number\" || $util.isString(message.s)))\n                    return \"s: buffer expected\";\n            if (message.t != null && message.hasOwnProperty(\"t\")) {\n                var error = $root.onnx.TensorProto.verify(message.t);\n                if (error)\n                    return \"t.\" + error;\n            }\n            if (message.g != null && message.hasOwnProperty(\"g\")) {\n                var error = $root.onnx.GraphProto.verify(message.g);\n                if (error)\n                    return \"g.\" + error;\n            }\n            if (message.floats != null && message.hasOwnProperty(\"floats\")) {\n                if (!Array.isArray(message.floats))\n                    return \"floats: array expected\";\n                for (var i = 0; i < message.floats.length; ++i)\n                    if (typeof message.floats[i] !== \"number\")\n                        return \"floats: number[] expected\";\n            }\n            if (message.ints != null && message.hasOwnProperty(\"ints\")) {\n                if (!Array.isArray(message.ints))\n                    return \"ints: array expected\";\n                for (var i = 0; i < message.ints.length; ++i)\n                    if (!$util.isInteger(message.ints[i]) && !(message.ints[i] && $util.isInteger(message.ints[i].low) && $util.isInteger(message.ints[i].high)))\n                        return \"ints: integer|Long[] expected\";\n            }\n            if (message.strings != null && message.hasOwnProperty(\"strings\")) {\n                if (!Array.isArray(message.strings))\n                    return \"strings: array expected\";\n                for (var i = 0; i < message.strings.length; ++i)\n                    if (!(message.strings[i] && typeof message.strings[i].length === \"number\" || $util.isString(message.strings[i])))\n                        return \"strings: buffer[] expected\";\n            }\n            if (message.tensors != null && message.hasOwnProperty(\"tensors\")) {\n                if (!Array.isArray(message.tensors))\n                    return \"tensors: array expected\";\n                for (var i = 0; i < message.tensors.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.tensors[i]);\n                    if (error)\n                        return \"tensors.\" + error;\n                }\n            }\n            if (message.graphs != null && message.hasOwnProperty(\"graphs\")) {\n                if (!Array.isArray(message.graphs))\n                    return \"graphs: array expected\";\n                for (var i = 0; i < message.graphs.length; ++i) {\n                    var error = $root.onnx.GraphProto.verify(message.graphs[i]);\n                    if (error)\n                        return \"graphs.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates an AttributeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.AttributeProto} AttributeProto\n         */\n        AttributeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.AttributeProto)\n                return object;\n            var message = new $root.onnx.AttributeProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.refAttrName != null)\n                message.refAttrName = String(object.refAttrName);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            switch (object.type) {\n            case \"UNDEFINED\":\n            case 0:\n                message.type = 0;\n                break;\n            case \"FLOAT\":\n            case 1:\n                message.type = 1;\n                break;\n            case \"INT\":\n            case 2:\n                message.type = 2;\n                break;\n            case \"STRING\":\n            case 3:\n                message.type = 3;\n                break;\n            case \"TENSOR\":\n            case 4:\n                message.type = 4;\n                break;\n            case \"GRAPH\":\n            case 5:\n                message.type = 5;\n                break;\n            case \"FLOATS\":\n            case 6:\n                message.type = 6;\n                break;\n            case \"INTS\":\n            case 7:\n                message.type = 7;\n                break;\n            case \"STRINGS\":\n            case 8:\n                message.type = 8;\n                break;\n            case \"TENSORS\":\n            case 9:\n                message.type = 9;\n                break;\n            case \"GRAPHS\":\n            case 10:\n                message.type = 10;\n                break;\n            }\n            if (object.f != null)\n                message.f = Number(object.f);\n            if (object.i != null)\n                if ($util.Long)\n                    (message.i = $util.Long.fromValue(object.i)).unsigned = false;\n                else if (typeof object.i === \"string\")\n                    message.i = parseInt(object.i, 10);\n                else if (typeof object.i === \"number\")\n                    message.i = object.i;\n                else if (typeof object.i === \"object\")\n                    message.i = new $util.LongBits(object.i.low >>> 0, object.i.high >>> 0).toNumber();\n            if (object.s != null)\n                if (typeof object.s === \"string\")\n                    $util.base64.decode(object.s, message.s = $util.newBuffer($util.base64.length(object.s)), 0);\n                else if (object.s.length)\n                    message.s = object.s;\n            if (object.t != null) {\n                if (typeof object.t !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.t: object expected\");\n                message.t = $root.onnx.TensorProto.fromObject(object.t);\n            }\n            if (object.g != null) {\n                if (typeof object.g !== \"object\")\n                    throw TypeError(\".onnx.AttributeProto.g: object expected\");\n                message.g = $root.onnx.GraphProto.fromObject(object.g);\n            }\n            if (object.floats) {\n                if (!Array.isArray(object.floats))\n                    throw TypeError(\".onnx.AttributeProto.floats: array expected\");\n                message.floats = [];\n                for (var i = 0; i < object.floats.length; ++i)\n                    message.floats[i] = Number(object.floats[i]);\n            }\n            if (object.ints) {\n                if (!Array.isArray(object.ints))\n                    throw TypeError(\".onnx.AttributeProto.ints: array expected\");\n                message.ints = [];\n                for (var i = 0; i < object.ints.length; ++i)\n                    if ($util.Long)\n                        (message.ints[i] = $util.Long.fromValue(object.ints[i])).unsigned = false;\n                    else if (typeof object.ints[i] === \"string\")\n                        message.ints[i] = parseInt(object.ints[i], 10);\n                    else if (typeof object.ints[i] === \"number\")\n                        message.ints[i] = object.ints[i];\n                    else if (typeof object.ints[i] === \"object\")\n                        message.ints[i] = new $util.LongBits(object.ints[i].low >>> 0, object.ints[i].high >>> 0).toNumber();\n            }\n            if (object.strings) {\n                if (!Array.isArray(object.strings))\n                    throw TypeError(\".onnx.AttributeProto.strings: array expected\");\n                message.strings = [];\n                for (var i = 0; i < object.strings.length; ++i)\n                    if (typeof object.strings[i] === \"string\")\n                        $util.base64.decode(object.strings[i], message.strings[i] = $util.newBuffer($util.base64.length(object.strings[i])), 0);\n                    else if (object.strings[i].length)\n                        message.strings[i] = object.strings[i];\n            }\n            if (object.tensors) {\n                if (!Array.isArray(object.tensors))\n                    throw TypeError(\".onnx.AttributeProto.tensors: array expected\");\n                message.tensors = [];\n                for (var i = 0; i < object.tensors.length; ++i) {\n                    if (typeof object.tensors[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.tensors: object expected\");\n                    message.tensors[i] = $root.onnx.TensorProto.fromObject(object.tensors[i]);\n                }\n            }\n            if (object.graphs) {\n                if (!Array.isArray(object.graphs))\n                    throw TypeError(\".onnx.AttributeProto.graphs: array expected\");\n                message.graphs = [];\n                for (var i = 0; i < object.graphs.length; ++i) {\n                    if (typeof object.graphs[i] !== \"object\")\n                        throw TypeError(\".onnx.AttributeProto.graphs: object expected\");\n                    message.graphs[i] = $root.onnx.GraphProto.fromObject(object.graphs[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an AttributeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.AttributeProto\n         * @static\n         * @param {onnx.AttributeProto} message AttributeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        AttributeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.floats = [];\n                object.ints = [];\n                object.strings = [];\n                object.tensors = [];\n                object.graphs = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.f = 0;\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.i = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.i = options.longs === String ? \"0\" : 0;\n                if (options.bytes === String)\n                    object.s = \"\";\n                else {\n                    object.s = [];\n                    if (options.bytes !== Array)\n                        object.s = $util.newBuffer(object.s);\n                }\n                object.t = null;\n                object.g = null;\n                object.docString = \"\";\n                object.type = options.enums === String ? \"UNDEFINED\" : 0;\n                object.refAttrName = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.f != null && message.hasOwnProperty(\"f\"))\n                object.f = options.json && !isFinite(message.f) ? String(message.f) : message.f;\n            if (message.i != null && message.hasOwnProperty(\"i\"))\n                if (typeof message.i === \"number\")\n                    object.i = options.longs === String ? String(message.i) : message.i;\n                else\n                    object.i = options.longs === String ? $util.Long.prototype.toString.call(message.i) : options.longs === Number ? new $util.LongBits(message.i.low >>> 0, message.i.high >>> 0).toNumber() : message.i;\n            if (message.s != null && message.hasOwnProperty(\"s\"))\n                object.s = options.bytes === String ? $util.base64.encode(message.s, 0, message.s.length) : options.bytes === Array ? Array.prototype.slice.call(message.s) : message.s;\n            if (message.t != null && message.hasOwnProperty(\"t\"))\n                object.t = $root.onnx.TensorProto.toObject(message.t, options);\n            if (message.g != null && message.hasOwnProperty(\"g\"))\n                object.g = $root.onnx.GraphProto.toObject(message.g, options);\n            if (message.floats && message.floats.length) {\n                object.floats = [];\n                for (var j = 0; j < message.floats.length; ++j)\n                    object.floats[j] = options.json && !isFinite(message.floats[j]) ? String(message.floats[j]) : message.floats[j];\n            }\n            if (message.ints && message.ints.length) {\n                object.ints = [];\n                for (var j = 0; j < message.ints.length; ++j)\n                    if (typeof message.ints[j] === \"number\")\n                        object.ints[j] = options.longs === String ? String(message.ints[j]) : message.ints[j];\n                    else\n                        object.ints[j] = options.longs === String ? $util.Long.prototype.toString.call(message.ints[j]) : options.longs === Number ? new $util.LongBits(message.ints[j].low >>> 0, message.ints[j].high >>> 0).toNumber() : message.ints[j];\n            }\n            if (message.strings && message.strings.length) {\n                object.strings = [];\n                for (var j = 0; j < message.strings.length; ++j)\n                    object.strings[j] = options.bytes === String ? $util.base64.encode(message.strings[j], 0, message.strings[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.strings[j]) : message.strings[j];\n            }\n            if (message.tensors && message.tensors.length) {\n                object.tensors = [];\n                for (var j = 0; j < message.tensors.length; ++j)\n                    object.tensors[j] = $root.onnx.TensorProto.toObject(message.tensors[j], options);\n            }\n            if (message.graphs && message.graphs.length) {\n                object.graphs = [];\n                for (var j = 0; j < message.graphs.length; ++j)\n                    object.graphs[j] = $root.onnx.GraphProto.toObject(message.graphs[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = options.enums === String ? $root.onnx.AttributeProto.AttributeType[message.type] : message.type;\n            if (message.refAttrName != null && message.hasOwnProperty(\"refAttrName\"))\n                object.refAttrName = message.refAttrName;\n            return object;\n        };\n\n        /**\n         * Converts this AttributeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.AttributeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        AttributeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * AttributeType enum.\n         * @name onnx.AttributeProto.AttributeType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} INT=2 INT value\n         * @property {number} STRING=3 STRING value\n         * @property {number} TENSOR=4 TENSOR value\n         * @property {number} GRAPH=5 GRAPH value\n         * @property {number} FLOATS=6 FLOATS value\n         * @property {number} INTS=7 INTS value\n         * @property {number} STRINGS=8 STRINGS value\n         * @property {number} TENSORS=9 TENSORS value\n         * @property {number} GRAPHS=10 GRAPHS value\n         */\n        AttributeProto.AttributeType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"INT\"] = 2;\n            values[valuesById[3] = \"STRING\"] = 3;\n            values[valuesById[4] = \"TENSOR\"] = 4;\n            values[valuesById[5] = \"GRAPH\"] = 5;\n            values[valuesById[6] = \"FLOATS\"] = 6;\n            values[valuesById[7] = \"INTS\"] = 7;\n            values[valuesById[8] = \"STRINGS\"] = 8;\n            values[valuesById[9] = \"TENSORS\"] = 9;\n            values[valuesById[10] = \"GRAPHS\"] = 10;\n            return values;\n        })();\n\n        return AttributeProto;\n    })();\n\n    onnx.ValueInfoProto = (function() {\n\n        /**\n         * Properties of a ValueInfoProto.\n         * @memberof onnx\n         * @interface IValueInfoProto\n         * @property {string|null} [name] ValueInfoProto name\n         * @property {onnx.ITypeProto|null} [type] ValueInfoProto type\n         * @property {string|null} [docString] ValueInfoProto docString\n         */\n\n        /**\n         * Constructs a new ValueInfoProto.\n         * @memberof onnx\n         * @classdesc Represents a ValueInfoProto.\n         * @implements IValueInfoProto\n         * @constructor\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         */\n        function ValueInfoProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ValueInfoProto name.\n         * @member {string} name\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.name = \"\";\n\n        /**\n         * ValueInfoProto type.\n         * @member {onnx.ITypeProto|null|undefined} type\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.type = null;\n\n        /**\n         * ValueInfoProto docString.\n         * @member {string} docString\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         */\n        ValueInfoProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new ValueInfoProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto=} [properties] Properties to set\n         * @returns {onnx.ValueInfoProto} ValueInfoProto instance\n         */\n        ValueInfoProto.create = function create(properties) {\n            return new ValueInfoProto(properties);\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.name);\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                $root.onnx.TypeProto.encode(message.type, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.docString);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ValueInfoProto message, length delimited. Does not implicitly {@link onnx.ValueInfoProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.IValueInfoProto} message ValueInfoProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ValueInfoProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ValueInfoProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.name = reader.string();\n                    break;\n                case 2:\n                    message.type = $root.onnx.TypeProto.decode(reader, reader.uint32());\n                    break;\n                case 3:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ValueInfoProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ValueInfoProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ValueInfoProto message.\n         * @function verify\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ValueInfoProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.type != null && message.hasOwnProperty(\"type\")) {\n                var error = $root.onnx.TypeProto.verify(message.type);\n                if (error)\n                    return \"type.\" + error;\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a ValueInfoProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ValueInfoProto} ValueInfoProto\n         */\n        ValueInfoProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ValueInfoProto)\n                return object;\n            var message = new $root.onnx.ValueInfoProto();\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.type != null) {\n                if (typeof object.type !== \"object\")\n                    throw TypeError(\".onnx.ValueInfoProto.type: object expected\");\n                message.type = $root.onnx.TypeProto.fromObject(object.type);\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ValueInfoProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ValueInfoProto\n         * @static\n         * @param {onnx.ValueInfoProto} message ValueInfoProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ValueInfoProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.name = \"\";\n                object.type = null;\n                object.docString = \"\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.type != null && message.hasOwnProperty(\"type\"))\n                object.type = $root.onnx.TypeProto.toObject(message.type, options);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            return object;\n        };\n\n        /**\n         * Converts this ValueInfoProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ValueInfoProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ValueInfoProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ValueInfoProto;\n    })();\n\n    onnx.NodeProto = (function() {\n\n        /**\n         * Properties of a NodeProto.\n         * @memberof onnx\n         * @interface INodeProto\n         * @property {Array.<string>|null} [input] NodeProto input\n         * @property {Array.<string>|null} [output] NodeProto output\n         * @property {string|null} [name] NodeProto name\n         * @property {string|null} [opType] NodeProto opType\n         * @property {string|null} [domain] NodeProto domain\n         * @property {Array.<onnx.IAttributeProto>|null} [attribute] NodeProto attribute\n         * @property {string|null} [docString] NodeProto docString\n         */\n\n        /**\n         * Constructs a new NodeProto.\n         * @memberof onnx\n         * @classdesc Represents a NodeProto.\n         * @implements INodeProto\n         * @constructor\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         */\n        function NodeProto(properties) {\n            this.input = [];\n            this.output = [];\n            this.attribute = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * NodeProto input.\n         * @member {Array.<string>} input\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.input = $util.emptyArray;\n\n        /**\n         * NodeProto output.\n         * @member {Array.<string>} output\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.output = $util.emptyArray;\n\n        /**\n         * NodeProto name.\n         * @member {string} name\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.name = \"\";\n\n        /**\n         * NodeProto opType.\n         * @member {string} opType\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.opType = \"\";\n\n        /**\n         * NodeProto domain.\n         * @member {string} domain\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.domain = \"\";\n\n        /**\n         * NodeProto attribute.\n         * @member {Array.<onnx.IAttributeProto>} attribute\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.attribute = $util.emptyArray;\n\n        /**\n         * NodeProto docString.\n         * @member {string} docString\n         * @memberof onnx.NodeProto\n         * @instance\n         */\n        NodeProto.prototype.docString = \"\";\n\n        /**\n         * Creates a new NodeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto=} [properties] Properties to set\n         * @returns {onnx.NodeProto} NodeProto instance\n         */\n        NodeProto.create = function create(properties) {\n            return new NodeProto(properties);\n        };\n\n        /**\n         * Encodes the specified NodeProto message. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    writer.uint32(/* id 1, wireType 2 =*/10).string(message.input[i]);\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.output[i]);\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.name);\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.opType);\n            if (message.attribute != null && message.attribute.length)\n                for (var i = 0; i < message.attribute.length; ++i)\n                    $root.onnx.AttributeProto.encode(message.attribute[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 7, wireType 2 =*/58).string(message.domain);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified NodeProto message, length delimited. Does not implicitly {@link onnx.NodeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.INodeProto} message NodeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        NodeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.NodeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push(reader.string());\n                    break;\n                case 2:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push(reader.string());\n                    break;\n                case 3:\n                    message.name = reader.string();\n                    break;\n                case 4:\n                    message.opType = reader.string();\n                    break;\n                case 7:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    if (!(message.attribute && message.attribute.length))\n                        message.attribute = [];\n                    message.attribute.push($root.onnx.AttributeProto.decode(reader, reader.uint32()));\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a NodeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.NodeProto} NodeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        NodeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a NodeProto message.\n         * @function verify\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        NodeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i)\n                    if (!$util.isString(message.input[i]))\n                        return \"input: string[] expected\";\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i)\n                    if (!$util.isString(message.output[i]))\n                        return \"output: string[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                if (!$util.isString(message.opType))\n                    return \"opType: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.attribute != null && message.hasOwnProperty(\"attribute\")) {\n                if (!Array.isArray(message.attribute))\n                    return \"attribute: array expected\";\n                for (var i = 0; i < message.attribute.length; ++i) {\n                    var error = $root.onnx.AttributeProto.verify(message.attribute[i]);\n                    if (error)\n                        return \"attribute.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a NodeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.NodeProto} NodeProto\n         */\n        NodeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.NodeProto)\n                return object;\n            var message = new $root.onnx.NodeProto();\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.NodeProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i)\n                    message.input[i] = String(object.input[i]);\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.NodeProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i)\n                    message.output[i] = String(object.output[i]);\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.opType != null)\n                message.opType = String(object.opType);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.attribute) {\n                if (!Array.isArray(object.attribute))\n                    throw TypeError(\".onnx.NodeProto.attribute: array expected\");\n                message.attribute = [];\n                for (var i = 0; i < object.attribute.length; ++i) {\n                    if (typeof object.attribute[i] !== \"object\")\n                        throw TypeError(\".onnx.NodeProto.attribute: object expected\");\n                    message.attribute[i] = $root.onnx.AttributeProto.fromObject(object.attribute[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a NodeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.NodeProto\n         * @static\n         * @param {onnx.NodeProto} message NodeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        NodeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.input = [];\n                object.output = [];\n                object.attribute = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.opType = \"\";\n                object.docString = \"\";\n                object.domain = \"\";\n            }\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = message.input[j];\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = message.output[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.opType != null && message.hasOwnProperty(\"opType\"))\n                object.opType = message.opType;\n            if (message.attribute && message.attribute.length) {\n                object.attribute = [];\n                for (var j = 0; j < message.attribute.length; ++j)\n                    object.attribute[j] = $root.onnx.AttributeProto.toObject(message.attribute[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            return object;\n        };\n\n        /**\n         * Converts this NodeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.NodeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        NodeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return NodeProto;\n    })();\n\n    onnx.ModelProto = (function() {\n\n        /**\n         * Properties of a ModelProto.\n         * @memberof onnx\n         * @interface IModelProto\n         * @property {number|Long|null} [irVersion] ModelProto irVersion\n         * @property {Array.<onnx.IOperatorSetIdProto>|null} [opsetImport] ModelProto opsetImport\n         * @property {string|null} [producerName] ModelProto producerName\n         * @property {string|null} [producerVersion] ModelProto producerVersion\n         * @property {string|null} [domain] ModelProto domain\n         * @property {number|Long|null} [modelVersion] ModelProto modelVersion\n         * @property {string|null} [docString] ModelProto docString\n         * @property {onnx.IGraphProto|null} [graph] ModelProto graph\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [metadataProps] ModelProto metadataProps\n         */\n\n        /**\n         * Constructs a new ModelProto.\n         * @memberof onnx\n         * @classdesc Represents a ModelProto.\n         * @implements IModelProto\n         * @constructor\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         */\n        function ModelProto(properties) {\n            this.opsetImport = [];\n            this.metadataProps = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * ModelProto irVersion.\n         * @member {number|Long} irVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.irVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto opsetImport.\n         * @member {Array.<onnx.IOperatorSetIdProto>} opsetImport\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.opsetImport = $util.emptyArray;\n\n        /**\n         * ModelProto producerName.\n         * @member {string} producerName\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerName = \"\";\n\n        /**\n         * ModelProto producerVersion.\n         * @member {string} producerVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.producerVersion = \"\";\n\n        /**\n         * ModelProto domain.\n         * @member {string} domain\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.domain = \"\";\n\n        /**\n         * ModelProto modelVersion.\n         * @member {number|Long} modelVersion\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.modelVersion = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * ModelProto docString.\n         * @member {string} docString\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.docString = \"\";\n\n        /**\n         * ModelProto graph.\n         * @member {onnx.IGraphProto|null|undefined} graph\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.graph = null;\n\n        /**\n         * ModelProto metadataProps.\n         * @member {Array.<onnx.IStringStringEntryProto>} metadataProps\n         * @memberof onnx.ModelProto\n         * @instance\n         */\n        ModelProto.prototype.metadataProps = $util.emptyArray;\n\n        /**\n         * Creates a new ModelProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto=} [properties] Properties to set\n         * @returns {onnx.ModelProto} ModelProto instance\n         */\n        ModelProto.create = function create(properties) {\n            return new ModelProto(properties);\n        };\n\n        /**\n         * Encodes the specified ModelProto message. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                writer.uint32(/* id 1, wireType 0 =*/8).int64(message.irVersion);\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.producerName);\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                writer.uint32(/* id 3, wireType 2 =*/26).string(message.producerVersion);\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 4, wireType 2 =*/34).string(message.domain);\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                writer.uint32(/* id 5, wireType 0 =*/40).int64(message.modelVersion);\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.docString);\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                $root.onnx.GraphProto.encode(message.graph, writer.uint32(/* id 7, wireType 2 =*/58).fork()).ldelim();\n            if (message.opsetImport != null && message.opsetImport.length)\n                for (var i = 0; i < message.opsetImport.length; ++i)\n                    $root.onnx.OperatorSetIdProto.encode(message.opsetImport[i], writer.uint32(/* id 8, wireType 2 =*/66).fork()).ldelim();\n            if (message.metadataProps != null && message.metadataProps.length)\n                for (var i = 0; i < message.metadataProps.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.metadataProps[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified ModelProto message, length delimited. Does not implicitly {@link onnx.ModelProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.IModelProto} message ModelProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        ModelProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.ModelProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.irVersion = reader.int64();\n                    break;\n                case 8:\n                    if (!(message.opsetImport && message.opsetImport.length))\n                        message.opsetImport = [];\n                    message.opsetImport.push($root.onnx.OperatorSetIdProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.producerName = reader.string();\n                    break;\n                case 3:\n                    message.producerVersion = reader.string();\n                    break;\n                case 4:\n                    message.domain = reader.string();\n                    break;\n                case 5:\n                    message.modelVersion = reader.int64();\n                    break;\n                case 6:\n                    message.docString = reader.string();\n                    break;\n                case 7:\n                    message.graph = $root.onnx.GraphProto.decode(reader, reader.uint32());\n                    break;\n                case 14:\n                    if (!(message.metadataProps && message.metadataProps.length))\n                        message.metadataProps = [];\n                    message.metadataProps.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a ModelProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.ModelProto} ModelProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        ModelProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a ModelProto message.\n         * @function verify\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        ModelProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (!$util.isInteger(message.irVersion) && !(message.irVersion && $util.isInteger(message.irVersion.low) && $util.isInteger(message.irVersion.high)))\n                    return \"irVersion: integer|Long expected\";\n            if (message.opsetImport != null && message.hasOwnProperty(\"opsetImport\")) {\n                if (!Array.isArray(message.opsetImport))\n                    return \"opsetImport: array expected\";\n                for (var i = 0; i < message.opsetImport.length; ++i) {\n                    var error = $root.onnx.OperatorSetIdProto.verify(message.opsetImport[i]);\n                    if (error)\n                        return \"opsetImport.\" + error;\n                }\n            }\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                if (!$util.isString(message.producerName))\n                    return \"producerName: string expected\";\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                if (!$util.isString(message.producerVersion))\n                    return \"producerVersion: string expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (!$util.isInteger(message.modelVersion) && !(message.modelVersion && $util.isInteger(message.modelVersion.low) && $util.isInteger(message.modelVersion.high)))\n                    return \"modelVersion: integer|Long expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.graph != null && message.hasOwnProperty(\"graph\")) {\n                var error = $root.onnx.GraphProto.verify(message.graph);\n                if (error)\n                    return \"graph.\" + error;\n            }\n            if (message.metadataProps != null && message.hasOwnProperty(\"metadataProps\")) {\n                if (!Array.isArray(message.metadataProps))\n                    return \"metadataProps: array expected\";\n                for (var i = 0; i < message.metadataProps.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.metadataProps[i]);\n                    if (error)\n                        return \"metadataProps.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a ModelProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.ModelProto} ModelProto\n         */\n        ModelProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.ModelProto)\n                return object;\n            var message = new $root.onnx.ModelProto();\n            if (object.irVersion != null)\n                if ($util.Long)\n                    (message.irVersion = $util.Long.fromValue(object.irVersion)).unsigned = false;\n                else if (typeof object.irVersion === \"string\")\n                    message.irVersion = parseInt(object.irVersion, 10);\n                else if (typeof object.irVersion === \"number\")\n                    message.irVersion = object.irVersion;\n                else if (typeof object.irVersion === \"object\")\n                    message.irVersion = new $util.LongBits(object.irVersion.low >>> 0, object.irVersion.high >>> 0).toNumber();\n            if (object.opsetImport) {\n                if (!Array.isArray(object.opsetImport))\n                    throw TypeError(\".onnx.ModelProto.opsetImport: array expected\");\n                message.opsetImport = [];\n                for (var i = 0; i < object.opsetImport.length; ++i) {\n                    if (typeof object.opsetImport[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.opsetImport: object expected\");\n                    message.opsetImport[i] = $root.onnx.OperatorSetIdProto.fromObject(object.opsetImport[i]);\n                }\n            }\n            if (object.producerName != null)\n                message.producerName = String(object.producerName);\n            if (object.producerVersion != null)\n                message.producerVersion = String(object.producerVersion);\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.modelVersion != null)\n                if ($util.Long)\n                    (message.modelVersion = $util.Long.fromValue(object.modelVersion)).unsigned = false;\n                else if (typeof object.modelVersion === \"string\")\n                    message.modelVersion = parseInt(object.modelVersion, 10);\n                else if (typeof object.modelVersion === \"number\")\n                    message.modelVersion = object.modelVersion;\n                else if (typeof object.modelVersion === \"object\")\n                    message.modelVersion = new $util.LongBits(object.modelVersion.low >>> 0, object.modelVersion.high >>> 0).toNumber();\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.graph != null) {\n                if (typeof object.graph !== \"object\")\n                    throw TypeError(\".onnx.ModelProto.graph: object expected\");\n                message.graph = $root.onnx.GraphProto.fromObject(object.graph);\n            }\n            if (object.metadataProps) {\n                if (!Array.isArray(object.metadataProps))\n                    throw TypeError(\".onnx.ModelProto.metadataProps: array expected\");\n                message.metadataProps = [];\n                for (var i = 0; i < object.metadataProps.length; ++i) {\n                    if (typeof object.metadataProps[i] !== \"object\")\n                        throw TypeError(\".onnx.ModelProto.metadataProps: object expected\");\n                    message.metadataProps[i] = $root.onnx.StringStringEntryProto.fromObject(object.metadataProps[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a ModelProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.ModelProto\n         * @static\n         * @param {onnx.ModelProto} message ModelProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        ModelProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.opsetImport = [];\n                object.metadataProps = [];\n            }\n            if (options.defaults) {\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.irVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.irVersion = options.longs === String ? \"0\" : 0;\n                object.producerName = \"\";\n                object.producerVersion = \"\";\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.modelVersion = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.modelVersion = options.longs === String ? \"0\" : 0;\n                object.docString = \"\";\n                object.graph = null;\n            }\n            if (message.irVersion != null && message.hasOwnProperty(\"irVersion\"))\n                if (typeof message.irVersion === \"number\")\n                    object.irVersion = options.longs === String ? String(message.irVersion) : message.irVersion;\n                else\n                    object.irVersion = options.longs === String ? $util.Long.prototype.toString.call(message.irVersion) : options.longs === Number ? new $util.LongBits(message.irVersion.low >>> 0, message.irVersion.high >>> 0).toNumber() : message.irVersion;\n            if (message.producerName != null && message.hasOwnProperty(\"producerName\"))\n                object.producerName = message.producerName;\n            if (message.producerVersion != null && message.hasOwnProperty(\"producerVersion\"))\n                object.producerVersion = message.producerVersion;\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.modelVersion != null && message.hasOwnProperty(\"modelVersion\"))\n                if (typeof message.modelVersion === \"number\")\n                    object.modelVersion = options.longs === String ? String(message.modelVersion) : message.modelVersion;\n                else\n                    object.modelVersion = options.longs === String ? $util.Long.prototype.toString.call(message.modelVersion) : options.longs === Number ? new $util.LongBits(message.modelVersion.low >>> 0, message.modelVersion.high >>> 0).toNumber() : message.modelVersion;\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.graph != null && message.hasOwnProperty(\"graph\"))\n                object.graph = $root.onnx.GraphProto.toObject(message.graph, options);\n            if (message.opsetImport && message.opsetImport.length) {\n                object.opsetImport = [];\n                for (var j = 0; j < message.opsetImport.length; ++j)\n                    object.opsetImport[j] = $root.onnx.OperatorSetIdProto.toObject(message.opsetImport[j], options);\n            }\n            if (message.metadataProps && message.metadataProps.length) {\n                object.metadataProps = [];\n                for (var j = 0; j < message.metadataProps.length; ++j)\n                    object.metadataProps[j] = $root.onnx.StringStringEntryProto.toObject(message.metadataProps[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this ModelProto to JSON.\n         * @function toJSON\n         * @memberof onnx.ModelProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        ModelProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return ModelProto;\n    })();\n\n    onnx.StringStringEntryProto = (function() {\n\n        /**\n         * Properties of a StringStringEntryProto.\n         * @memberof onnx\n         * @interface IStringStringEntryProto\n         * @property {string|null} [key] StringStringEntryProto key\n         * @property {string|null} [value] StringStringEntryProto value\n         */\n\n        /**\n         * Constructs a new StringStringEntryProto.\n         * @memberof onnx\n         * @classdesc Represents a StringStringEntryProto.\n         * @implements IStringStringEntryProto\n         * @constructor\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         */\n        function StringStringEntryProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * StringStringEntryProto key.\n         * @member {string} key\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.key = \"\";\n\n        /**\n         * StringStringEntryProto value.\n         * @member {string} value\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         */\n        StringStringEntryProto.prototype.value = \"\";\n\n        /**\n         * Creates a new StringStringEntryProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto=} [properties] Properties to set\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto instance\n         */\n        StringStringEntryProto.create = function create(properties) {\n            return new StringStringEntryProto(properties);\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.key);\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.value);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified StringStringEntryProto message, length delimited. Does not implicitly {@link onnx.StringStringEntryProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.IStringStringEntryProto} message StringStringEntryProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        StringStringEntryProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.StringStringEntryProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.key = reader.string();\n                    break;\n                case 2:\n                    message.value = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a StringStringEntryProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        StringStringEntryProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a StringStringEntryProto message.\n         * @function verify\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        StringStringEntryProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                if (!$util.isString(message.key))\n                    return \"key: string expected\";\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                if (!$util.isString(message.value))\n                    return \"value: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a StringStringEntryProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.StringStringEntryProto} StringStringEntryProto\n         */\n        StringStringEntryProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.StringStringEntryProto)\n                return object;\n            var message = new $root.onnx.StringStringEntryProto();\n            if (object.key != null)\n                message.key = String(object.key);\n            if (object.value != null)\n                message.value = String(object.value);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a StringStringEntryProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.StringStringEntryProto\n         * @static\n         * @param {onnx.StringStringEntryProto} message StringStringEntryProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        StringStringEntryProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.key = \"\";\n                object.value = \"\";\n            }\n            if (message.key != null && message.hasOwnProperty(\"key\"))\n                object.key = message.key;\n            if (message.value != null && message.hasOwnProperty(\"value\"))\n                object.value = message.value;\n            return object;\n        };\n\n        /**\n         * Converts this StringStringEntryProto to JSON.\n         * @function toJSON\n         * @memberof onnx.StringStringEntryProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        StringStringEntryProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return StringStringEntryProto;\n    })();\n\n    onnx.TensorAnnotation = (function() {\n\n        /**\n         * Properties of a TensorAnnotation.\n         * @memberof onnx\n         * @interface ITensorAnnotation\n         * @property {string|null} [tensorName] TensorAnnotation tensorName\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [quantParameterTensorNames] TensorAnnotation quantParameterTensorNames\n         */\n\n        /**\n         * Constructs a new TensorAnnotation.\n         * @memberof onnx\n         * @classdesc Represents a TensorAnnotation.\n         * @implements ITensorAnnotation\n         * @constructor\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         */\n        function TensorAnnotation(properties) {\n            this.quantParameterTensorNames = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorAnnotation tensorName.\n         * @member {string} tensorName\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.tensorName = \"\";\n\n        /**\n         * TensorAnnotation quantParameterTensorNames.\n         * @member {Array.<onnx.IStringStringEntryProto>} quantParameterTensorNames\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         */\n        TensorAnnotation.prototype.quantParameterTensorNames = $util.emptyArray;\n\n        /**\n         * Creates a new TensorAnnotation instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation=} [properties] Properties to set\n         * @returns {onnx.TensorAnnotation} TensorAnnotation instance\n         */\n        TensorAnnotation.create = function create(properties) {\n            return new TensorAnnotation(properties);\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.tensorName);\n            if (message.quantParameterTensorNames != null && message.quantParameterTensorNames.length)\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.quantParameterTensorNames[i], writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorAnnotation message, length delimited. Does not implicitly {@link onnx.TensorAnnotation.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.ITensorAnnotation} message TensorAnnotation message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorAnnotation.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorAnnotation();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorName = reader.string();\n                    break;\n                case 2:\n                    if (!(message.quantParameterTensorNames && message.quantParameterTensorNames.length))\n                        message.quantParameterTensorNames = [];\n                    message.quantParameterTensorNames.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorAnnotation message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorAnnotation.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorAnnotation message.\n         * @function verify\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorAnnotation.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                if (!$util.isString(message.tensorName))\n                    return \"tensorName: string expected\";\n            if (message.quantParameterTensorNames != null && message.hasOwnProperty(\"quantParameterTensorNames\")) {\n                if (!Array.isArray(message.quantParameterTensorNames))\n                    return \"quantParameterTensorNames: array expected\";\n                for (var i = 0; i < message.quantParameterTensorNames.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.quantParameterTensorNames[i]);\n                    if (error)\n                        return \"quantParameterTensorNames.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorAnnotation message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorAnnotation} TensorAnnotation\n         */\n        TensorAnnotation.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorAnnotation)\n                return object;\n            var message = new $root.onnx.TensorAnnotation();\n            if (object.tensorName != null)\n                message.tensorName = String(object.tensorName);\n            if (object.quantParameterTensorNames) {\n                if (!Array.isArray(object.quantParameterTensorNames))\n                    throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: array expected\");\n                message.quantParameterTensorNames = [];\n                for (var i = 0; i < object.quantParameterTensorNames.length; ++i) {\n                    if (typeof object.quantParameterTensorNames[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorAnnotation.quantParameterTensorNames: object expected\");\n                    message.quantParameterTensorNames[i] = $root.onnx.StringStringEntryProto.fromObject(object.quantParameterTensorNames[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorAnnotation message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorAnnotation\n         * @static\n         * @param {onnx.TensorAnnotation} message TensorAnnotation\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorAnnotation.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.quantParameterTensorNames = [];\n            if (options.defaults)\n                object.tensorName = \"\";\n            if (message.tensorName != null && message.hasOwnProperty(\"tensorName\"))\n                object.tensorName = message.tensorName;\n            if (message.quantParameterTensorNames && message.quantParameterTensorNames.length) {\n                object.quantParameterTensorNames = [];\n                for (var j = 0; j < message.quantParameterTensorNames.length; ++j)\n                    object.quantParameterTensorNames[j] = $root.onnx.StringStringEntryProto.toObject(message.quantParameterTensorNames[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorAnnotation to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorAnnotation\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorAnnotation.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return TensorAnnotation;\n    })();\n\n    onnx.GraphProto = (function() {\n\n        /**\n         * Properties of a GraphProto.\n         * @memberof onnx\n         * @interface IGraphProto\n         * @property {Array.<onnx.INodeProto>|null} [node] GraphProto node\n         * @property {string|null} [name] GraphProto name\n         * @property {Array.<onnx.ITensorProto>|null} [initializer] GraphProto initializer\n         * @property {string|null} [docString] GraphProto docString\n         * @property {Array.<onnx.IValueInfoProto>|null} [input] GraphProto input\n         * @property {Array.<onnx.IValueInfoProto>|null} [output] GraphProto output\n         * @property {Array.<onnx.IValueInfoProto>|null} [valueInfo] GraphProto valueInfo\n         * @property {Array.<onnx.ITensorAnnotation>|null} [quantizationAnnotation] GraphProto quantizationAnnotation\n         */\n\n        /**\n         * Constructs a new GraphProto.\n         * @memberof onnx\n         * @classdesc Represents a GraphProto.\n         * @implements IGraphProto\n         * @constructor\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         */\n        function GraphProto(properties) {\n            this.node = [];\n            this.initializer = [];\n            this.input = [];\n            this.output = [];\n            this.valueInfo = [];\n            this.quantizationAnnotation = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * GraphProto node.\n         * @member {Array.<onnx.INodeProto>} node\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.node = $util.emptyArray;\n\n        /**\n         * GraphProto name.\n         * @member {string} name\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.name = \"\";\n\n        /**\n         * GraphProto initializer.\n         * @member {Array.<onnx.ITensorProto>} initializer\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.initializer = $util.emptyArray;\n\n        /**\n         * GraphProto docString.\n         * @member {string} docString\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.docString = \"\";\n\n        /**\n         * GraphProto input.\n         * @member {Array.<onnx.IValueInfoProto>} input\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.input = $util.emptyArray;\n\n        /**\n         * GraphProto output.\n         * @member {Array.<onnx.IValueInfoProto>} output\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.output = $util.emptyArray;\n\n        /**\n         * GraphProto valueInfo.\n         * @member {Array.<onnx.IValueInfoProto>} valueInfo\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.valueInfo = $util.emptyArray;\n\n        /**\n         * GraphProto quantizationAnnotation.\n         * @member {Array.<onnx.ITensorAnnotation>} quantizationAnnotation\n         * @memberof onnx.GraphProto\n         * @instance\n         */\n        GraphProto.prototype.quantizationAnnotation = $util.emptyArray;\n\n        /**\n         * Creates a new GraphProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto=} [properties] Properties to set\n         * @returns {onnx.GraphProto} GraphProto instance\n         */\n        GraphProto.create = function create(properties) {\n            return new GraphProto(properties);\n        };\n\n        /**\n         * Encodes the specified GraphProto message. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.node != null && message.node.length)\n                for (var i = 0; i < message.node.length; ++i)\n                    $root.onnx.NodeProto.encode(message.node[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 2, wireType 2 =*/18).string(message.name);\n            if (message.initializer != null && message.initializer.length)\n                for (var i = 0; i < message.initializer.length; ++i)\n                    $root.onnx.TensorProto.encode(message.initializer[i], writer.uint32(/* id 5, wireType 2 =*/42).fork()).ldelim();\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 10, wireType 2 =*/82).string(message.docString);\n            if (message.input != null && message.input.length)\n                for (var i = 0; i < message.input.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.input[i], writer.uint32(/* id 11, wireType 2 =*/90).fork()).ldelim();\n            if (message.output != null && message.output.length)\n                for (var i = 0; i < message.output.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.output[i], writer.uint32(/* id 12, wireType 2 =*/98).fork()).ldelim();\n            if (message.valueInfo != null && message.valueInfo.length)\n                for (var i = 0; i < message.valueInfo.length; ++i)\n                    $root.onnx.ValueInfoProto.encode(message.valueInfo[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.quantizationAnnotation != null && message.quantizationAnnotation.length)\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i)\n                    $root.onnx.TensorAnnotation.encode(message.quantizationAnnotation[i], writer.uint32(/* id 14, wireType 2 =*/114).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified GraphProto message, length delimited. Does not implicitly {@link onnx.GraphProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.IGraphProto} message GraphProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        GraphProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.GraphProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.node && message.node.length))\n                        message.node = [];\n                    message.node.push($root.onnx.NodeProto.decode(reader, reader.uint32()));\n                    break;\n                case 2:\n                    message.name = reader.string();\n                    break;\n                case 5:\n                    if (!(message.initializer && message.initializer.length))\n                        message.initializer = [];\n                    message.initializer.push($root.onnx.TensorProto.decode(reader, reader.uint32()));\n                    break;\n                case 10:\n                    message.docString = reader.string();\n                    break;\n                case 11:\n                    if (!(message.input && message.input.length))\n                        message.input = [];\n                    message.input.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 12:\n                    if (!(message.output && message.output.length))\n                        message.output = [];\n                    message.output.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 13:\n                    if (!(message.valueInfo && message.valueInfo.length))\n                        message.valueInfo = [];\n                    message.valueInfo.push($root.onnx.ValueInfoProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    if (!(message.quantizationAnnotation && message.quantizationAnnotation.length))\n                        message.quantizationAnnotation = [];\n                    message.quantizationAnnotation.push($root.onnx.TensorAnnotation.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a GraphProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.GraphProto} GraphProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        GraphProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a GraphProto message.\n         * @function verify\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        GraphProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.node != null && message.hasOwnProperty(\"node\")) {\n                if (!Array.isArray(message.node))\n                    return \"node: array expected\";\n                for (var i = 0; i < message.node.length; ++i) {\n                    var error = $root.onnx.NodeProto.verify(message.node[i]);\n                    if (error)\n                        return \"node.\" + error;\n                }\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.initializer != null && message.hasOwnProperty(\"initializer\")) {\n                if (!Array.isArray(message.initializer))\n                    return \"initializer: array expected\";\n                for (var i = 0; i < message.initializer.length; ++i) {\n                    var error = $root.onnx.TensorProto.verify(message.initializer[i]);\n                    if (error)\n                        return \"initializer.\" + error;\n                }\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.input != null && message.hasOwnProperty(\"input\")) {\n                if (!Array.isArray(message.input))\n                    return \"input: array expected\";\n                for (var i = 0; i < message.input.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.input[i]);\n                    if (error)\n                        return \"input.\" + error;\n                }\n            }\n            if (message.output != null && message.hasOwnProperty(\"output\")) {\n                if (!Array.isArray(message.output))\n                    return \"output: array expected\";\n                for (var i = 0; i < message.output.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.output[i]);\n                    if (error)\n                        return \"output.\" + error;\n                }\n            }\n            if (message.valueInfo != null && message.hasOwnProperty(\"valueInfo\")) {\n                if (!Array.isArray(message.valueInfo))\n                    return \"valueInfo: array expected\";\n                for (var i = 0; i < message.valueInfo.length; ++i) {\n                    var error = $root.onnx.ValueInfoProto.verify(message.valueInfo[i]);\n                    if (error)\n                        return \"valueInfo.\" + error;\n                }\n            }\n            if (message.quantizationAnnotation != null && message.hasOwnProperty(\"quantizationAnnotation\")) {\n                if (!Array.isArray(message.quantizationAnnotation))\n                    return \"quantizationAnnotation: array expected\";\n                for (var i = 0; i < message.quantizationAnnotation.length; ++i) {\n                    var error = $root.onnx.TensorAnnotation.verify(message.quantizationAnnotation[i]);\n                    if (error)\n                        return \"quantizationAnnotation.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a GraphProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.GraphProto} GraphProto\n         */\n        GraphProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.GraphProto)\n                return object;\n            var message = new $root.onnx.GraphProto();\n            if (object.node) {\n                if (!Array.isArray(object.node))\n                    throw TypeError(\".onnx.GraphProto.node: array expected\");\n                message.node = [];\n                for (var i = 0; i < object.node.length; ++i) {\n                    if (typeof object.node[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.node: object expected\");\n                    message.node[i] = $root.onnx.NodeProto.fromObject(object.node[i]);\n                }\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.initializer) {\n                if (!Array.isArray(object.initializer))\n                    throw TypeError(\".onnx.GraphProto.initializer: array expected\");\n                message.initializer = [];\n                for (var i = 0; i < object.initializer.length; ++i) {\n                    if (typeof object.initializer[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.initializer: object expected\");\n                    message.initializer[i] = $root.onnx.TensorProto.fromObject(object.initializer[i]);\n                }\n            }\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.input) {\n                if (!Array.isArray(object.input))\n                    throw TypeError(\".onnx.GraphProto.input: array expected\");\n                message.input = [];\n                for (var i = 0; i < object.input.length; ++i) {\n                    if (typeof object.input[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.input: object expected\");\n                    message.input[i] = $root.onnx.ValueInfoProto.fromObject(object.input[i]);\n                }\n            }\n            if (object.output) {\n                if (!Array.isArray(object.output))\n                    throw TypeError(\".onnx.GraphProto.output: array expected\");\n                message.output = [];\n                for (var i = 0; i < object.output.length; ++i) {\n                    if (typeof object.output[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.output: object expected\");\n                    message.output[i] = $root.onnx.ValueInfoProto.fromObject(object.output[i]);\n                }\n            }\n            if (object.valueInfo) {\n                if (!Array.isArray(object.valueInfo))\n                    throw TypeError(\".onnx.GraphProto.valueInfo: array expected\");\n                message.valueInfo = [];\n                for (var i = 0; i < object.valueInfo.length; ++i) {\n                    if (typeof object.valueInfo[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.valueInfo: object expected\");\n                    message.valueInfo[i] = $root.onnx.ValueInfoProto.fromObject(object.valueInfo[i]);\n                }\n            }\n            if (object.quantizationAnnotation) {\n                if (!Array.isArray(object.quantizationAnnotation))\n                    throw TypeError(\".onnx.GraphProto.quantizationAnnotation: array expected\");\n                message.quantizationAnnotation = [];\n                for (var i = 0; i < object.quantizationAnnotation.length; ++i) {\n                    if (typeof object.quantizationAnnotation[i] !== \"object\")\n                        throw TypeError(\".onnx.GraphProto.quantizationAnnotation: object expected\");\n                    message.quantizationAnnotation[i] = $root.onnx.TensorAnnotation.fromObject(object.quantizationAnnotation[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a GraphProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.GraphProto\n         * @static\n         * @param {onnx.GraphProto} message GraphProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        GraphProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.node = [];\n                object.initializer = [];\n                object.input = [];\n                object.output = [];\n                object.valueInfo = [];\n                object.quantizationAnnotation = [];\n            }\n            if (options.defaults) {\n                object.name = \"\";\n                object.docString = \"\";\n            }\n            if (message.node && message.node.length) {\n                object.node = [];\n                for (var j = 0; j < message.node.length; ++j)\n                    object.node[j] = $root.onnx.NodeProto.toObject(message.node[j], options);\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.initializer && message.initializer.length) {\n                object.initializer = [];\n                for (var j = 0; j < message.initializer.length; ++j)\n                    object.initializer[j] = $root.onnx.TensorProto.toObject(message.initializer[j], options);\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.input && message.input.length) {\n                object.input = [];\n                for (var j = 0; j < message.input.length; ++j)\n                    object.input[j] = $root.onnx.ValueInfoProto.toObject(message.input[j], options);\n            }\n            if (message.output && message.output.length) {\n                object.output = [];\n                for (var j = 0; j < message.output.length; ++j)\n                    object.output[j] = $root.onnx.ValueInfoProto.toObject(message.output[j], options);\n            }\n            if (message.valueInfo && message.valueInfo.length) {\n                object.valueInfo = [];\n                for (var j = 0; j < message.valueInfo.length; ++j)\n                    object.valueInfo[j] = $root.onnx.ValueInfoProto.toObject(message.valueInfo[j], options);\n            }\n            if (message.quantizationAnnotation && message.quantizationAnnotation.length) {\n                object.quantizationAnnotation = [];\n                for (var j = 0; j < message.quantizationAnnotation.length; ++j)\n                    object.quantizationAnnotation[j] = $root.onnx.TensorAnnotation.toObject(message.quantizationAnnotation[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this GraphProto to JSON.\n         * @function toJSON\n         * @memberof onnx.GraphProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        GraphProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return GraphProto;\n    })();\n\n    onnx.TensorProto = (function() {\n\n        /**\n         * Properties of a TensorProto.\n         * @memberof onnx\n         * @interface ITensorProto\n         * @property {Array.<number|Long>|null} [dims] TensorProto dims\n         * @property {number|null} [dataType] TensorProto dataType\n         * @property {onnx.TensorProto.ISegment|null} [segment] TensorProto segment\n         * @property {Array.<number>|null} [floatData] TensorProto floatData\n         * @property {Array.<number>|null} [int32Data] TensorProto int32Data\n         * @property {Array.<Uint8Array>|null} [stringData] TensorProto stringData\n         * @property {Array.<number|Long>|null} [int64Data] TensorProto int64Data\n         * @property {string|null} [name] TensorProto name\n         * @property {string|null} [docString] TensorProto docString\n         * @property {Uint8Array|null} [rawData] TensorProto rawData\n         * @property {Array.<onnx.IStringStringEntryProto>|null} [externalData] TensorProto externalData\n         * @property {onnx.TensorProto.DataLocation|null} [dataLocation] TensorProto dataLocation\n         * @property {Array.<number>|null} [doubleData] TensorProto doubleData\n         * @property {Array.<number|Long>|null} [uint64Data] TensorProto uint64Data\n         */\n\n        /**\n         * Constructs a new TensorProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorProto.\n         * @implements ITensorProto\n         * @constructor\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         */\n        function TensorProto(properties) {\n            this.dims = [];\n            this.floatData = [];\n            this.int32Data = [];\n            this.stringData = [];\n            this.int64Data = [];\n            this.externalData = [];\n            this.doubleData = [];\n            this.uint64Data = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorProto dims.\n         * @member {Array.<number|Long>} dims\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dims = $util.emptyArray;\n\n        /**\n         * TensorProto dataType.\n         * @member {number} dataType\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataType = 0;\n\n        /**\n         * TensorProto segment.\n         * @member {onnx.TensorProto.ISegment|null|undefined} segment\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.segment = null;\n\n        /**\n         * TensorProto floatData.\n         * @member {Array.<number>} floatData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.floatData = $util.emptyArray;\n\n        /**\n         * TensorProto int32Data.\n         * @member {Array.<number>} int32Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int32Data = $util.emptyArray;\n\n        /**\n         * TensorProto stringData.\n         * @member {Array.<Uint8Array>} stringData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.stringData = $util.emptyArray;\n\n        /**\n         * TensorProto int64Data.\n         * @member {Array.<number|Long>} int64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.int64Data = $util.emptyArray;\n\n        /**\n         * TensorProto name.\n         * @member {string} name\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.name = \"\";\n\n        /**\n         * TensorProto docString.\n         * @member {string} docString\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.docString = \"\";\n\n        /**\n         * TensorProto rawData.\n         * @member {Uint8Array} rawData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.rawData = $util.newBuffer([]);\n\n        /**\n         * TensorProto externalData.\n         * @member {Array.<onnx.IStringStringEntryProto>} externalData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.externalData = $util.emptyArray;\n\n        /**\n         * TensorProto dataLocation.\n         * @member {onnx.TensorProto.DataLocation} dataLocation\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.dataLocation = 0;\n\n        /**\n         * TensorProto doubleData.\n         * @member {Array.<number>} doubleData\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.doubleData = $util.emptyArray;\n\n        /**\n         * TensorProto uint64Data.\n         * @member {Array.<number|Long>} uint64Data\n         * @memberof onnx.TensorProto\n         * @instance\n         */\n        TensorProto.prototype.uint64Data = $util.emptyArray;\n\n        /**\n         * Creates a new TensorProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto=} [properties] Properties to set\n         * @returns {onnx.TensorProto} TensorProto instance\n         */\n        TensorProto.create = function create(properties) {\n            return new TensorProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorProto message. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dims != null && message.dims.length) {\n                writer.uint32(/* id 1, wireType 2 =*/10).fork();\n                for (var i = 0; i < message.dims.length; ++i)\n                    writer.int64(message.dims[i]);\n                writer.ldelim();\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int32(message.dataType);\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                $root.onnx.TensorProto.Segment.encode(message.segment, writer.uint32(/* id 3, wireType 2 =*/26).fork()).ldelim();\n            if (message.floatData != null && message.floatData.length) {\n                writer.uint32(/* id 4, wireType 2 =*/34).fork();\n                for (var i = 0; i < message.floatData.length; ++i)\n                    writer.float(message.floatData[i]);\n                writer.ldelim();\n            }\n            if (message.int32Data != null && message.int32Data.length) {\n                writer.uint32(/* id 5, wireType 2 =*/42).fork();\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    writer.int32(message.int32Data[i]);\n                writer.ldelim();\n            }\n            if (message.stringData != null && message.stringData.length)\n                for (var i = 0; i < message.stringData.length; ++i)\n                    writer.uint32(/* id 6, wireType 2 =*/50).bytes(message.stringData[i]);\n            if (message.int64Data != null && message.int64Data.length) {\n                writer.uint32(/* id 7, wireType 2 =*/58).fork();\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    writer.int64(message.int64Data[i]);\n                writer.ldelim();\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                writer.uint32(/* id 8, wireType 2 =*/66).string(message.name);\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                writer.uint32(/* id 9, wireType 2 =*/74).bytes(message.rawData);\n            if (message.doubleData != null && message.doubleData.length) {\n                writer.uint32(/* id 10, wireType 2 =*/82).fork();\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    writer.double(message.doubleData[i]);\n                writer.ldelim();\n            }\n            if (message.uint64Data != null && message.uint64Data.length) {\n                writer.uint32(/* id 11, wireType 2 =*/90).fork();\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    writer.uint64(message.uint64Data[i]);\n                writer.ldelim();\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                writer.uint32(/* id 12, wireType 2 =*/98).string(message.docString);\n            if (message.externalData != null && message.externalData.length)\n                for (var i = 0; i < message.externalData.length; ++i)\n                    $root.onnx.StringStringEntryProto.encode(message.externalData[i], writer.uint32(/* id 13, wireType 2 =*/106).fork()).ldelim();\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                writer.uint32(/* id 14, wireType 0 =*/112).int32(message.dataLocation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorProto message, length delimited. Does not implicitly {@link onnx.TensorProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.ITensorProto} message TensorProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dims && message.dims.length))\n                        message.dims = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.dims.push(reader.int64());\n                    } else\n                        message.dims.push(reader.int64());\n                    break;\n                case 2:\n                    message.dataType = reader.int32();\n                    break;\n                case 3:\n                    message.segment = $root.onnx.TensorProto.Segment.decode(reader, reader.uint32());\n                    break;\n                case 4:\n                    if (!(message.floatData && message.floatData.length))\n                        message.floatData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.floatData.push(reader.float());\n                    } else\n                        message.floatData.push(reader.float());\n                    break;\n                case 5:\n                    if (!(message.int32Data && message.int32Data.length))\n                        message.int32Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int32Data.push(reader.int32());\n                    } else\n                        message.int32Data.push(reader.int32());\n                    break;\n                case 6:\n                    if (!(message.stringData && message.stringData.length))\n                        message.stringData = [];\n                    message.stringData.push(reader.bytes());\n                    break;\n                case 7:\n                    if (!(message.int64Data && message.int64Data.length))\n                        message.int64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.int64Data.push(reader.int64());\n                    } else\n                        message.int64Data.push(reader.int64());\n                    break;\n                case 8:\n                    message.name = reader.string();\n                    break;\n                case 12:\n                    message.docString = reader.string();\n                    break;\n                case 9:\n                    message.rawData = reader.bytes();\n                    break;\n                case 13:\n                    if (!(message.externalData && message.externalData.length))\n                        message.externalData = [];\n                    message.externalData.push($root.onnx.StringStringEntryProto.decode(reader, reader.uint32()));\n                    break;\n                case 14:\n                    message.dataLocation = reader.int32();\n                    break;\n                case 10:\n                    if (!(message.doubleData && message.doubleData.length))\n                        message.doubleData = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.doubleData.push(reader.double());\n                    } else\n                        message.doubleData.push(reader.double());\n                    break;\n                case 11:\n                    if (!(message.uint64Data && message.uint64Data.length))\n                        message.uint64Data = [];\n                    if ((tag & 7) === 2) {\n                        var end2 = reader.uint32() + reader.pos;\n                        while (reader.pos < end2)\n                            message.uint64Data.push(reader.uint64());\n                    } else\n                        message.uint64Data.push(reader.uint64());\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorProto} TensorProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorProto message.\n         * @function verify\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dims != null && message.hasOwnProperty(\"dims\")) {\n                if (!Array.isArray(message.dims))\n                    return \"dims: array expected\";\n                for (var i = 0; i < message.dims.length; ++i)\n                    if (!$util.isInteger(message.dims[i]) && !(message.dims[i] && $util.isInteger(message.dims[i].low) && $util.isInteger(message.dims[i].high)))\n                        return \"dims: integer|Long[] expected\";\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                if (!$util.isInteger(message.dataType))\n                    return \"dataType: integer expected\";\n            if (message.segment != null && message.hasOwnProperty(\"segment\")) {\n                var error = $root.onnx.TensorProto.Segment.verify(message.segment);\n                if (error)\n                    return \"segment.\" + error;\n            }\n            if (message.floatData != null && message.hasOwnProperty(\"floatData\")) {\n                if (!Array.isArray(message.floatData))\n                    return \"floatData: array expected\";\n                for (var i = 0; i < message.floatData.length; ++i)\n                    if (typeof message.floatData[i] !== \"number\")\n                        return \"floatData: number[] expected\";\n            }\n            if (message.int32Data != null && message.hasOwnProperty(\"int32Data\")) {\n                if (!Array.isArray(message.int32Data))\n                    return \"int32Data: array expected\";\n                for (var i = 0; i < message.int32Data.length; ++i)\n                    if (!$util.isInteger(message.int32Data[i]))\n                        return \"int32Data: integer[] expected\";\n            }\n            if (message.stringData != null && message.hasOwnProperty(\"stringData\")) {\n                if (!Array.isArray(message.stringData))\n                    return \"stringData: array expected\";\n                for (var i = 0; i < message.stringData.length; ++i)\n                    if (!(message.stringData[i] && typeof message.stringData[i].length === \"number\" || $util.isString(message.stringData[i])))\n                        return \"stringData: buffer[] expected\";\n            }\n            if (message.int64Data != null && message.hasOwnProperty(\"int64Data\")) {\n                if (!Array.isArray(message.int64Data))\n                    return \"int64Data: array expected\";\n                for (var i = 0; i < message.int64Data.length; ++i)\n                    if (!$util.isInteger(message.int64Data[i]) && !(message.int64Data[i] && $util.isInteger(message.int64Data[i].low) && $util.isInteger(message.int64Data[i].high)))\n                        return \"int64Data: integer|Long[] expected\";\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                if (!$util.isString(message.name))\n                    return \"name: string expected\";\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                if (!$util.isString(message.docString))\n                    return \"docString: string expected\";\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                if (!(message.rawData && typeof message.rawData.length === \"number\" || $util.isString(message.rawData)))\n                    return \"rawData: buffer expected\";\n            if (message.externalData != null && message.hasOwnProperty(\"externalData\")) {\n                if (!Array.isArray(message.externalData))\n                    return \"externalData: array expected\";\n                for (var i = 0; i < message.externalData.length; ++i) {\n                    var error = $root.onnx.StringStringEntryProto.verify(message.externalData[i]);\n                    if (error)\n                        return \"externalData.\" + error;\n                }\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                switch (message.dataLocation) {\n                default:\n                    return \"dataLocation: enum value expected\";\n                case 0:\n                case 1:\n                    break;\n                }\n            if (message.doubleData != null && message.hasOwnProperty(\"doubleData\")) {\n                if (!Array.isArray(message.doubleData))\n                    return \"doubleData: array expected\";\n                for (var i = 0; i < message.doubleData.length; ++i)\n                    if (typeof message.doubleData[i] !== \"number\")\n                        return \"doubleData: number[] expected\";\n            }\n            if (message.uint64Data != null && message.hasOwnProperty(\"uint64Data\")) {\n                if (!Array.isArray(message.uint64Data))\n                    return \"uint64Data: array expected\";\n                for (var i = 0; i < message.uint64Data.length; ++i)\n                    if (!$util.isInteger(message.uint64Data[i]) && !(message.uint64Data[i] && $util.isInteger(message.uint64Data[i].low) && $util.isInteger(message.uint64Data[i].high)))\n                        return \"uint64Data: integer|Long[] expected\";\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorProto} TensorProto\n         */\n        TensorProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorProto)\n                return object;\n            var message = new $root.onnx.TensorProto();\n            if (object.dims) {\n                if (!Array.isArray(object.dims))\n                    throw TypeError(\".onnx.TensorProto.dims: array expected\");\n                message.dims = [];\n                for (var i = 0; i < object.dims.length; ++i)\n                    if ($util.Long)\n                        (message.dims[i] = $util.Long.fromValue(object.dims[i])).unsigned = false;\n                    else if (typeof object.dims[i] === \"string\")\n                        message.dims[i] = parseInt(object.dims[i], 10);\n                    else if (typeof object.dims[i] === \"number\")\n                        message.dims[i] = object.dims[i];\n                    else if (typeof object.dims[i] === \"object\")\n                        message.dims[i] = new $util.LongBits(object.dims[i].low >>> 0, object.dims[i].high >>> 0).toNumber();\n            }\n            if (object.dataType != null)\n                message.dataType = object.dataType | 0;\n            if (object.segment != null) {\n                if (typeof object.segment !== \"object\")\n                    throw TypeError(\".onnx.TensorProto.segment: object expected\");\n                message.segment = $root.onnx.TensorProto.Segment.fromObject(object.segment);\n            }\n            if (object.floatData) {\n                if (!Array.isArray(object.floatData))\n                    throw TypeError(\".onnx.TensorProto.floatData: array expected\");\n                message.floatData = [];\n                for (var i = 0; i < object.floatData.length; ++i)\n                    message.floatData[i] = Number(object.floatData[i]);\n            }\n            if (object.int32Data) {\n                if (!Array.isArray(object.int32Data))\n                    throw TypeError(\".onnx.TensorProto.int32Data: array expected\");\n                message.int32Data = [];\n                for (var i = 0; i < object.int32Data.length; ++i)\n                    message.int32Data[i] = object.int32Data[i] | 0;\n            }\n            if (object.stringData) {\n                if (!Array.isArray(object.stringData))\n                    throw TypeError(\".onnx.TensorProto.stringData: array expected\");\n                message.stringData = [];\n                for (var i = 0; i < object.stringData.length; ++i)\n                    if (typeof object.stringData[i] === \"string\")\n                        $util.base64.decode(object.stringData[i], message.stringData[i] = $util.newBuffer($util.base64.length(object.stringData[i])), 0);\n                    else if (object.stringData[i].length)\n                        message.stringData[i] = object.stringData[i];\n            }\n            if (object.int64Data) {\n                if (!Array.isArray(object.int64Data))\n                    throw TypeError(\".onnx.TensorProto.int64Data: array expected\");\n                message.int64Data = [];\n                for (var i = 0; i < object.int64Data.length; ++i)\n                    if ($util.Long)\n                        (message.int64Data[i] = $util.Long.fromValue(object.int64Data[i])).unsigned = false;\n                    else if (typeof object.int64Data[i] === \"string\")\n                        message.int64Data[i] = parseInt(object.int64Data[i], 10);\n                    else if (typeof object.int64Data[i] === \"number\")\n                        message.int64Data[i] = object.int64Data[i];\n                    else if (typeof object.int64Data[i] === \"object\")\n                        message.int64Data[i] = new $util.LongBits(object.int64Data[i].low >>> 0, object.int64Data[i].high >>> 0).toNumber();\n            }\n            if (object.name != null)\n                message.name = String(object.name);\n            if (object.docString != null)\n                message.docString = String(object.docString);\n            if (object.rawData != null)\n                if (typeof object.rawData === \"string\")\n                    $util.base64.decode(object.rawData, message.rawData = $util.newBuffer($util.base64.length(object.rawData)), 0);\n                else if (object.rawData.length)\n                    message.rawData = object.rawData;\n            if (object.externalData) {\n                if (!Array.isArray(object.externalData))\n                    throw TypeError(\".onnx.TensorProto.externalData: array expected\");\n                message.externalData = [];\n                for (var i = 0; i < object.externalData.length; ++i) {\n                    if (typeof object.externalData[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorProto.externalData: object expected\");\n                    message.externalData[i] = $root.onnx.StringStringEntryProto.fromObject(object.externalData[i]);\n                }\n            }\n            switch (object.dataLocation) {\n            case \"DEFAULT\":\n            case 0:\n                message.dataLocation = 0;\n                break;\n            case \"EXTERNAL\":\n            case 1:\n                message.dataLocation = 1;\n                break;\n            }\n            if (object.doubleData) {\n                if (!Array.isArray(object.doubleData))\n                    throw TypeError(\".onnx.TensorProto.doubleData: array expected\");\n                message.doubleData = [];\n                for (var i = 0; i < object.doubleData.length; ++i)\n                    message.doubleData[i] = Number(object.doubleData[i]);\n            }\n            if (object.uint64Data) {\n                if (!Array.isArray(object.uint64Data))\n                    throw TypeError(\".onnx.TensorProto.uint64Data: array expected\");\n                message.uint64Data = [];\n                for (var i = 0; i < object.uint64Data.length; ++i)\n                    if ($util.Long)\n                        (message.uint64Data[i] = $util.Long.fromValue(object.uint64Data[i])).unsigned = true;\n                    else if (typeof object.uint64Data[i] === \"string\")\n                        message.uint64Data[i] = parseInt(object.uint64Data[i], 10);\n                    else if (typeof object.uint64Data[i] === \"number\")\n                        message.uint64Data[i] = object.uint64Data[i];\n                    else if (typeof object.uint64Data[i] === \"object\")\n                        message.uint64Data[i] = new $util.LongBits(object.uint64Data[i].low >>> 0, object.uint64Data[i].high >>> 0).toNumber(true);\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorProto\n         * @static\n         * @param {onnx.TensorProto} message TensorProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults) {\n                object.dims = [];\n                object.floatData = [];\n                object.int32Data = [];\n                object.stringData = [];\n                object.int64Data = [];\n                object.doubleData = [];\n                object.uint64Data = [];\n                object.externalData = [];\n            }\n            if (options.defaults) {\n                object.dataType = 0;\n                object.segment = null;\n                object.name = \"\";\n                if (options.bytes === String)\n                    object.rawData = \"\";\n                else {\n                    object.rawData = [];\n                    if (options.bytes !== Array)\n                        object.rawData = $util.newBuffer(object.rawData);\n                }\n                object.docString = \"\";\n                object.dataLocation = options.enums === String ? \"DEFAULT\" : 0;\n            }\n            if (message.dims && message.dims.length) {\n                object.dims = [];\n                for (var j = 0; j < message.dims.length; ++j)\n                    if (typeof message.dims[j] === \"number\")\n                        object.dims[j] = options.longs === String ? String(message.dims[j]) : message.dims[j];\n                    else\n                        object.dims[j] = options.longs === String ? $util.Long.prototype.toString.call(message.dims[j]) : options.longs === Number ? new $util.LongBits(message.dims[j].low >>> 0, message.dims[j].high >>> 0).toNumber() : message.dims[j];\n            }\n            if (message.dataType != null && message.hasOwnProperty(\"dataType\"))\n                object.dataType = message.dataType;\n            if (message.segment != null && message.hasOwnProperty(\"segment\"))\n                object.segment = $root.onnx.TensorProto.Segment.toObject(message.segment, options);\n            if (message.floatData && message.floatData.length) {\n                object.floatData = [];\n                for (var j = 0; j < message.floatData.length; ++j)\n                    object.floatData[j] = options.json && !isFinite(message.floatData[j]) ? String(message.floatData[j]) : message.floatData[j];\n            }\n            if (message.int32Data && message.int32Data.length) {\n                object.int32Data = [];\n                for (var j = 0; j < message.int32Data.length; ++j)\n                    object.int32Data[j] = message.int32Data[j];\n            }\n            if (message.stringData && message.stringData.length) {\n                object.stringData = [];\n                for (var j = 0; j < message.stringData.length; ++j)\n                    object.stringData[j] = options.bytes === String ? $util.base64.encode(message.stringData[j], 0, message.stringData[j].length) : options.bytes === Array ? Array.prototype.slice.call(message.stringData[j]) : message.stringData[j];\n            }\n            if (message.int64Data && message.int64Data.length) {\n                object.int64Data = [];\n                for (var j = 0; j < message.int64Data.length; ++j)\n                    if (typeof message.int64Data[j] === \"number\")\n                        object.int64Data[j] = options.longs === String ? String(message.int64Data[j]) : message.int64Data[j];\n                    else\n                        object.int64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.int64Data[j]) : options.longs === Number ? new $util.LongBits(message.int64Data[j].low >>> 0, message.int64Data[j].high >>> 0).toNumber() : message.int64Data[j];\n            }\n            if (message.name != null && message.hasOwnProperty(\"name\"))\n                object.name = message.name;\n            if (message.rawData != null && message.hasOwnProperty(\"rawData\"))\n                object.rawData = options.bytes === String ? $util.base64.encode(message.rawData, 0, message.rawData.length) : options.bytes === Array ? Array.prototype.slice.call(message.rawData) : message.rawData;\n            if (message.doubleData && message.doubleData.length) {\n                object.doubleData = [];\n                for (var j = 0; j < message.doubleData.length; ++j)\n                    object.doubleData[j] = options.json && !isFinite(message.doubleData[j]) ? String(message.doubleData[j]) : message.doubleData[j];\n            }\n            if (message.uint64Data && message.uint64Data.length) {\n                object.uint64Data = [];\n                for (var j = 0; j < message.uint64Data.length; ++j)\n                    if (typeof message.uint64Data[j] === \"number\")\n                        object.uint64Data[j] = options.longs === String ? String(message.uint64Data[j]) : message.uint64Data[j];\n                    else\n                        object.uint64Data[j] = options.longs === String ? $util.Long.prototype.toString.call(message.uint64Data[j]) : options.longs === Number ? new $util.LongBits(message.uint64Data[j].low >>> 0, message.uint64Data[j].high >>> 0).toNumber(true) : message.uint64Data[j];\n            }\n            if (message.docString != null && message.hasOwnProperty(\"docString\"))\n                object.docString = message.docString;\n            if (message.externalData && message.externalData.length) {\n                object.externalData = [];\n                for (var j = 0; j < message.externalData.length; ++j)\n                    object.externalData[j] = $root.onnx.StringStringEntryProto.toObject(message.externalData[j], options);\n            }\n            if (message.dataLocation != null && message.hasOwnProperty(\"dataLocation\"))\n                object.dataLocation = options.enums === String ? $root.onnx.TensorProto.DataLocation[message.dataLocation] : message.dataLocation;\n            return object;\n        };\n\n        /**\n         * Converts this TensorProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        /**\n         * DataType enum.\n         * @name onnx.TensorProto.DataType\n         * @enum {string}\n         * @property {number} UNDEFINED=0 UNDEFINED value\n         * @property {number} FLOAT=1 FLOAT value\n         * @property {number} UINT8=2 UINT8 value\n         * @property {number} INT8=3 INT8 value\n         * @property {number} UINT16=4 UINT16 value\n         * @property {number} INT16=5 INT16 value\n         * @property {number} INT32=6 INT32 value\n         * @property {number} INT64=7 INT64 value\n         * @property {number} STRING=8 STRING value\n         * @property {number} BOOL=9 BOOL value\n         * @property {number} FLOAT16=10 FLOAT16 value\n         * @property {number} DOUBLE=11 DOUBLE value\n         * @property {number} UINT32=12 UINT32 value\n         * @property {number} UINT64=13 UINT64 value\n         * @property {number} COMPLEX64=14 COMPLEX64 value\n         * @property {number} COMPLEX128=15 COMPLEX128 value\n         * @property {number} BFLOAT16=16 BFLOAT16 value\n         */\n        TensorProto.DataType = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"UNDEFINED\"] = 0;\n            values[valuesById[1] = \"FLOAT\"] = 1;\n            values[valuesById[2] = \"UINT8\"] = 2;\n            values[valuesById[3] = \"INT8\"] = 3;\n            values[valuesById[4] = \"UINT16\"] = 4;\n            values[valuesById[5] = \"INT16\"] = 5;\n            values[valuesById[6] = \"INT32\"] = 6;\n            values[valuesById[7] = \"INT64\"] = 7;\n            values[valuesById[8] = \"STRING\"] = 8;\n            values[valuesById[9] = \"BOOL\"] = 9;\n            values[valuesById[10] = \"FLOAT16\"] = 10;\n            values[valuesById[11] = \"DOUBLE\"] = 11;\n            values[valuesById[12] = \"UINT32\"] = 12;\n            values[valuesById[13] = \"UINT64\"] = 13;\n            values[valuesById[14] = \"COMPLEX64\"] = 14;\n            values[valuesById[15] = \"COMPLEX128\"] = 15;\n            values[valuesById[16] = \"BFLOAT16\"] = 16;\n            return values;\n        })();\n\n        TensorProto.Segment = (function() {\n\n            /**\n             * Properties of a Segment.\n             * @memberof onnx.TensorProto\n             * @interface ISegment\n             * @property {number|Long|null} [begin] Segment begin\n             * @property {number|Long|null} [end] Segment end\n             */\n\n            /**\n             * Constructs a new Segment.\n             * @memberof onnx.TensorProto\n             * @classdesc Represents a Segment.\n             * @implements ISegment\n             * @constructor\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             */\n            function Segment(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Segment begin.\n             * @member {number|Long} begin\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.begin = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Segment end.\n             * @member {number|Long} end\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             */\n            Segment.prototype.end = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Creates a new Segment instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment=} [properties] Properties to set\n             * @returns {onnx.TensorProto.Segment} Segment instance\n             */\n            Segment.create = function create(properties) {\n                return new Segment(properties);\n            };\n\n            /**\n             * Encodes the specified Segment message. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.begin);\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    writer.uint32(/* id 2, wireType 0 =*/16).int64(message.end);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Segment message, length delimited. Does not implicitly {@link onnx.TensorProto.Segment.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.ISegment} message Segment message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Segment.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorProto.Segment();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.begin = reader.int64();\n                        break;\n                    case 2:\n                        message.end = reader.int64();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Segment message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorProto.Segment} Segment\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Segment.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Segment message.\n             * @function verify\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Segment.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (!$util.isInteger(message.begin) && !(message.begin && $util.isInteger(message.begin.low) && $util.isInteger(message.begin.high)))\n                        return \"begin: integer|Long expected\";\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (!$util.isInteger(message.end) && !(message.end && $util.isInteger(message.end.low) && $util.isInteger(message.end.high)))\n                        return \"end: integer|Long expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Segment message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorProto.Segment} Segment\n             */\n            Segment.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorProto.Segment)\n                    return object;\n                var message = new $root.onnx.TensorProto.Segment();\n                if (object.begin != null)\n                    if ($util.Long)\n                        (message.begin = $util.Long.fromValue(object.begin)).unsigned = false;\n                    else if (typeof object.begin === \"string\")\n                        message.begin = parseInt(object.begin, 10);\n                    else if (typeof object.begin === \"number\")\n                        message.begin = object.begin;\n                    else if (typeof object.begin === \"object\")\n                        message.begin = new $util.LongBits(object.begin.low >>> 0, object.begin.high >>> 0).toNumber();\n                if (object.end != null)\n                    if ($util.Long)\n                        (message.end = $util.Long.fromValue(object.end)).unsigned = false;\n                    else if (typeof object.end === \"string\")\n                        message.end = parseInt(object.end, 10);\n                    else if (typeof object.end === \"number\")\n                        message.end = object.end;\n                    else if (typeof object.end === \"object\")\n                        message.end = new $util.LongBits(object.end.low >>> 0, object.end.high >>> 0).toNumber();\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Segment message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorProto.Segment\n             * @static\n             * @param {onnx.TensorProto.Segment} message Segment\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Segment.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.begin = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.begin = options.longs === String ? \"0\" : 0;\n                    if ($util.Long) {\n                        var long = new $util.Long(0, 0, false);\n                        object.end = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                    } else\n                        object.end = options.longs === String ? \"0\" : 0;\n                }\n                if (message.begin != null && message.hasOwnProperty(\"begin\"))\n                    if (typeof message.begin === \"number\")\n                        object.begin = options.longs === String ? String(message.begin) : message.begin;\n                    else\n                        object.begin = options.longs === String ? $util.Long.prototype.toString.call(message.begin) : options.longs === Number ? new $util.LongBits(message.begin.low >>> 0, message.begin.high >>> 0).toNumber() : message.begin;\n                if (message.end != null && message.hasOwnProperty(\"end\"))\n                    if (typeof message.end === \"number\")\n                        object.end = options.longs === String ? String(message.end) : message.end;\n                    else\n                        object.end = options.longs === String ? $util.Long.prototype.toString.call(message.end) : options.longs === Number ? new $util.LongBits(message.end.low >>> 0, message.end.high >>> 0).toNumber() : message.end;\n                return object;\n            };\n\n            /**\n             * Converts this Segment to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorProto.Segment\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Segment.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Segment;\n        })();\n\n        /**\n         * DataLocation enum.\n         * @name onnx.TensorProto.DataLocation\n         * @enum {string}\n         * @property {number} DEFAULT=0 DEFAULT value\n         * @property {number} EXTERNAL=1 EXTERNAL value\n         */\n        TensorProto.DataLocation = (function() {\n            var valuesById = {}, values = Object.create(valuesById);\n            values[valuesById[0] = \"DEFAULT\"] = 0;\n            values[valuesById[1] = \"EXTERNAL\"] = 1;\n            return values;\n        })();\n\n        return TensorProto;\n    })();\n\n    onnx.TensorShapeProto = (function() {\n\n        /**\n         * Properties of a TensorShapeProto.\n         * @memberof onnx\n         * @interface ITensorShapeProto\n         * @property {Array.<onnx.TensorShapeProto.IDimension>|null} [dim] TensorShapeProto dim\n         */\n\n        /**\n         * Constructs a new TensorShapeProto.\n         * @memberof onnx\n         * @classdesc Represents a TensorShapeProto.\n         * @implements ITensorShapeProto\n         * @constructor\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         */\n        function TensorShapeProto(properties) {\n            this.dim = [];\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TensorShapeProto dim.\n         * @member {Array.<onnx.TensorShapeProto.IDimension>} dim\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         */\n        TensorShapeProto.prototype.dim = $util.emptyArray;\n\n        /**\n         * Creates a new TensorShapeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto=} [properties] Properties to set\n         * @returns {onnx.TensorShapeProto} TensorShapeProto instance\n         */\n        TensorShapeProto.create = function create(properties) {\n            return new TensorShapeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.dim != null && message.dim.length)\n                for (var i = 0; i < message.dim.length; ++i)\n                    $root.onnx.TensorShapeProto.Dimension.encode(message.dim[i], writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TensorShapeProto message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.ITensorShapeProto} message TensorShapeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TensorShapeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    if (!(message.dim && message.dim.length))\n                        message.dim = [];\n                    message.dim.push($root.onnx.TensorShapeProto.Dimension.decode(reader, reader.uint32()));\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TensorShapeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TensorShapeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TensorShapeProto message.\n         * @function verify\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TensorShapeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.dim != null && message.hasOwnProperty(\"dim\")) {\n                if (!Array.isArray(message.dim))\n                    return \"dim: array expected\";\n                for (var i = 0; i < message.dim.length; ++i) {\n                    var error = $root.onnx.TensorShapeProto.Dimension.verify(message.dim[i]);\n                    if (error)\n                        return \"dim.\" + error;\n                }\n            }\n            return null;\n        };\n\n        /**\n         * Creates a TensorShapeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TensorShapeProto} TensorShapeProto\n         */\n        TensorShapeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TensorShapeProto)\n                return object;\n            var message = new $root.onnx.TensorShapeProto();\n            if (object.dim) {\n                if (!Array.isArray(object.dim))\n                    throw TypeError(\".onnx.TensorShapeProto.dim: array expected\");\n                message.dim = [];\n                for (var i = 0; i < object.dim.length; ++i) {\n                    if (typeof object.dim[i] !== \"object\")\n                        throw TypeError(\".onnx.TensorShapeProto.dim: object expected\");\n                    message.dim[i] = $root.onnx.TensorShapeProto.Dimension.fromObject(object.dim[i]);\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TensorShapeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TensorShapeProto\n         * @static\n         * @param {onnx.TensorShapeProto} message TensorShapeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TensorShapeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.arrays || options.defaults)\n                object.dim = [];\n            if (message.dim && message.dim.length) {\n                object.dim = [];\n                for (var j = 0; j < message.dim.length; ++j)\n                    object.dim[j] = $root.onnx.TensorShapeProto.Dimension.toObject(message.dim[j], options);\n            }\n            return object;\n        };\n\n        /**\n         * Converts this TensorShapeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TensorShapeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TensorShapeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TensorShapeProto.Dimension = (function() {\n\n            /**\n             * Properties of a Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @interface IDimension\n             * @property {number|Long|null} [dimValue] Dimension dimValue\n             * @property {string|null} [dimParam] Dimension dimParam\n             * @property {string|null} [denotation] Dimension denotation\n             */\n\n            /**\n             * Constructs a new Dimension.\n             * @memberof onnx.TensorShapeProto\n             * @classdesc Represents a Dimension.\n             * @implements IDimension\n             * @constructor\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             */\n            function Dimension(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Dimension dimValue.\n             * @member {number|Long} dimValue\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimValue = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n            /**\n             * Dimension dimParam.\n             * @member {string} dimParam\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.dimParam = \"\";\n\n            /**\n             * Dimension denotation.\n             * @member {string} denotation\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Dimension.prototype.denotation = \"\";\n\n            // OneOf field names bound to virtual getters and setters\n            var $oneOfFields;\n\n            /**\n             * Dimension value.\n             * @member {\"dimValue\"|\"dimParam\"|undefined} value\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             */\n            Object.defineProperty(Dimension.prototype, \"value\", {\n                get: $util.oneOfGetter($oneOfFields = [\"dimValue\", \"dimParam\"]),\n                set: $util.oneOfSetter($oneOfFields)\n            });\n\n            /**\n             * Creates a new Dimension instance using the specified properties.\n             * @function create\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension=} [properties] Properties to set\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension instance\n             */\n            Dimension.create = function create(properties) {\n                return new Dimension(properties);\n            };\n\n            /**\n             * Encodes the specified Dimension message. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int64(message.dimValue);\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\"))\n                    writer.uint32(/* id 2, wireType 2 =*/18).string(message.dimParam);\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    writer.uint32(/* id 3, wireType 2 =*/26).string(message.denotation);\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Dimension message, length delimited. Does not implicitly {@link onnx.TensorShapeProto.Dimension.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.IDimension} message Dimension message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Dimension.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TensorShapeProto.Dimension();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.dimValue = reader.int64();\n                        break;\n                    case 2:\n                        message.dimParam = reader.string();\n                        break;\n                    case 3:\n                        message.denotation = reader.string();\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Dimension message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Dimension.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Dimension message.\n             * @function verify\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Dimension.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                var properties = {};\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    properties.value = 1;\n                    if (!$util.isInteger(message.dimValue) && !(message.dimValue && $util.isInteger(message.dimValue.low) && $util.isInteger(message.dimValue.high)))\n                        return \"dimValue: integer|Long expected\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    if (properties.value === 1)\n                        return \"value: multiple values\";\n                    properties.value = 1;\n                    if (!$util.isString(message.dimParam))\n                        return \"dimParam: string expected\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    if (!$util.isString(message.denotation))\n                        return \"denotation: string expected\";\n                return null;\n            };\n\n            /**\n             * Creates a Dimension message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TensorShapeProto.Dimension} Dimension\n             */\n            Dimension.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TensorShapeProto.Dimension)\n                    return object;\n                var message = new $root.onnx.TensorShapeProto.Dimension();\n                if (object.dimValue != null)\n                    if ($util.Long)\n                        (message.dimValue = $util.Long.fromValue(object.dimValue)).unsigned = false;\n                    else if (typeof object.dimValue === \"string\")\n                        message.dimValue = parseInt(object.dimValue, 10);\n                    else if (typeof object.dimValue === \"number\")\n                        message.dimValue = object.dimValue;\n                    else if (typeof object.dimValue === \"object\")\n                        message.dimValue = new $util.LongBits(object.dimValue.low >>> 0, object.dimValue.high >>> 0).toNumber();\n                if (object.dimParam != null)\n                    message.dimParam = String(object.dimParam);\n                if (object.denotation != null)\n                    message.denotation = String(object.denotation);\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Dimension message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @static\n             * @param {onnx.TensorShapeProto.Dimension} message Dimension\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Dimension.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults)\n                    object.denotation = \"\";\n                if (message.dimValue != null && message.hasOwnProperty(\"dimValue\")) {\n                    if (typeof message.dimValue === \"number\")\n                        object.dimValue = options.longs === String ? String(message.dimValue) : message.dimValue;\n                    else\n                        object.dimValue = options.longs === String ? $util.Long.prototype.toString.call(message.dimValue) : options.longs === Number ? new $util.LongBits(message.dimValue.low >>> 0, message.dimValue.high >>> 0).toNumber() : message.dimValue;\n                    if (options.oneofs)\n                        object.value = \"dimValue\";\n                }\n                if (message.dimParam != null && message.hasOwnProperty(\"dimParam\")) {\n                    object.dimParam = message.dimParam;\n                    if (options.oneofs)\n                        object.value = \"dimParam\";\n                }\n                if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                    object.denotation = message.denotation;\n                return object;\n            };\n\n            /**\n             * Converts this Dimension to JSON.\n             * @function toJSON\n             * @memberof onnx.TensorShapeProto.Dimension\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Dimension.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Dimension;\n        })();\n\n        return TensorShapeProto;\n    })();\n\n    onnx.TypeProto = (function() {\n\n        /**\n         * Properties of a TypeProto.\n         * @memberof onnx\n         * @interface ITypeProto\n         * @property {onnx.TypeProto.ITensor|null} [tensorType] TypeProto tensorType\n         * @property {string|null} [denotation] TypeProto denotation\n         */\n\n        /**\n         * Constructs a new TypeProto.\n         * @memberof onnx\n         * @classdesc Represents a TypeProto.\n         * @implements ITypeProto\n         * @constructor\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         */\n        function TypeProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * TypeProto tensorType.\n         * @member {onnx.TypeProto.ITensor|null|undefined} tensorType\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.tensorType = null;\n\n        /**\n         * TypeProto denotation.\n         * @member {string} denotation\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        TypeProto.prototype.denotation = \"\";\n\n        // OneOf field names bound to virtual getters and setters\n        var $oneOfFields;\n\n        /**\n         * TypeProto value.\n         * @member {\"tensorType\"|undefined} value\n         * @memberof onnx.TypeProto\n         * @instance\n         */\n        Object.defineProperty(TypeProto.prototype, \"value\", {\n            get: $util.oneOfGetter($oneOfFields = [\"tensorType\"]),\n            set: $util.oneOfSetter($oneOfFields)\n        });\n\n        /**\n         * Creates a new TypeProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto=} [properties] Properties to set\n         * @returns {onnx.TypeProto} TypeProto instance\n         */\n        TypeProto.create = function create(properties) {\n            return new TypeProto(properties);\n        };\n\n        /**\n         * Encodes the specified TypeProto message. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\"))\n                $root.onnx.TypeProto.Tensor.encode(message.tensorType, writer.uint32(/* id 1, wireType 2 =*/10).fork()).ldelim();\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                writer.uint32(/* id 6, wireType 2 =*/50).string(message.denotation);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified TypeProto message, length delimited. Does not implicitly {@link onnx.TypeProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.ITypeProto} message TypeProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        TypeProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.tensorType = $root.onnx.TypeProto.Tensor.decode(reader, reader.uint32());\n                    break;\n                case 6:\n                    message.denotation = reader.string();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes a TypeProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.TypeProto} TypeProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        TypeProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies a TypeProto message.\n         * @function verify\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        TypeProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            var properties = {};\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                properties.value = 1;\n                {\n                    var error = $root.onnx.TypeProto.Tensor.verify(message.tensorType);\n                    if (error)\n                        return \"tensorType.\" + error;\n                }\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                if (!$util.isString(message.denotation))\n                    return \"denotation: string expected\";\n            return null;\n        };\n\n        /**\n         * Creates a TypeProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.TypeProto} TypeProto\n         */\n        TypeProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.TypeProto)\n                return object;\n            var message = new $root.onnx.TypeProto();\n            if (object.tensorType != null) {\n                if (typeof object.tensorType !== \"object\")\n                    throw TypeError(\".onnx.TypeProto.tensorType: object expected\");\n                message.tensorType = $root.onnx.TypeProto.Tensor.fromObject(object.tensorType);\n            }\n            if (object.denotation != null)\n                message.denotation = String(object.denotation);\n            return message;\n        };\n\n        /**\n         * Creates a plain object from a TypeProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.TypeProto\n         * @static\n         * @param {onnx.TypeProto} message TypeProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        TypeProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults)\n                object.denotation = \"\";\n            if (message.tensorType != null && message.hasOwnProperty(\"tensorType\")) {\n                object.tensorType = $root.onnx.TypeProto.Tensor.toObject(message.tensorType, options);\n                if (options.oneofs)\n                    object.value = \"tensorType\";\n            }\n            if (message.denotation != null && message.hasOwnProperty(\"denotation\"))\n                object.denotation = message.denotation;\n            return object;\n        };\n\n        /**\n         * Converts this TypeProto to JSON.\n         * @function toJSON\n         * @memberof onnx.TypeProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        TypeProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        TypeProto.Tensor = (function() {\n\n            /**\n             * Properties of a Tensor.\n             * @memberof onnx.TypeProto\n             * @interface ITensor\n             * @property {number|null} [elemType] Tensor elemType\n             * @property {onnx.ITensorShapeProto|null} [shape] Tensor shape\n             */\n\n            /**\n             * Constructs a new Tensor.\n             * @memberof onnx.TypeProto\n             * @classdesc Represents a Tensor.\n             * @implements ITensor\n             * @constructor\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             */\n            function Tensor(properties) {\n                if (properties)\n                    for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                        if (properties[keys[i]] != null)\n                            this[keys[i]] = properties[keys[i]];\n            }\n\n            /**\n             * Tensor elemType.\n             * @member {number} elemType\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.elemType = 0;\n\n            /**\n             * Tensor shape.\n             * @member {onnx.ITensorShapeProto|null|undefined} shape\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             */\n            Tensor.prototype.shape = null;\n\n            /**\n             * Creates a new Tensor instance using the specified properties.\n             * @function create\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor=} [properties] Properties to set\n             * @returns {onnx.TypeProto.Tensor} Tensor instance\n             */\n            Tensor.create = function create(properties) {\n                return new Tensor(properties);\n            };\n\n            /**\n             * Encodes the specified Tensor message. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encode = function encode(message, writer) {\n                if (!writer)\n                    writer = $Writer.create();\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    writer.uint32(/* id 1, wireType 0 =*/8).int32(message.elemType);\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    $root.onnx.TensorShapeProto.encode(message.shape, writer.uint32(/* id 2, wireType 2 =*/18).fork()).ldelim();\n                return writer;\n            };\n\n            /**\n             * Encodes the specified Tensor message, length delimited. Does not implicitly {@link onnx.TypeProto.Tensor.verify|verify} messages.\n             * @function encodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.ITensor} message Tensor message or plain object to encode\n             * @param {$protobuf.Writer} [writer] Writer to encode to\n             * @returns {$protobuf.Writer} Writer\n             */\n            Tensor.encodeDelimited = function encodeDelimited(message, writer) {\n                return this.encode(message, writer).ldelim();\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer.\n             * @function decode\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @param {number} [length] Message length if known beforehand\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decode = function decode(reader, length) {\n                if (!(reader instanceof $Reader))\n                    reader = $Reader.create(reader);\n                var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.TypeProto.Tensor();\n                while (reader.pos < end) {\n                    var tag = reader.uint32();\n                    switch (tag >>> 3) {\n                    case 1:\n                        message.elemType = reader.int32();\n                        break;\n                    case 2:\n                        message.shape = $root.onnx.TensorShapeProto.decode(reader, reader.uint32());\n                        break;\n                    default:\n                        reader.skipType(tag & 7);\n                        break;\n                    }\n                }\n                return message;\n            };\n\n            /**\n             * Decodes a Tensor message from the specified reader or buffer, length delimited.\n             * @function decodeDelimited\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             * @throws {Error} If the payload is not a reader or valid buffer\n             * @throws {$protobuf.util.ProtocolError} If required fields are missing\n             */\n            Tensor.decodeDelimited = function decodeDelimited(reader) {\n                if (!(reader instanceof $Reader))\n                    reader = new $Reader(reader);\n                return this.decode(reader, reader.uint32());\n            };\n\n            /**\n             * Verifies a Tensor message.\n             * @function verify\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} message Plain object to verify\n             * @returns {string|null} `null` if valid, otherwise the reason why it is not\n             */\n            Tensor.verify = function verify(message) {\n                if (typeof message !== \"object\" || message === null)\n                    return \"object expected\";\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    if (!$util.isInteger(message.elemType))\n                        return \"elemType: integer expected\";\n                if (message.shape != null && message.hasOwnProperty(\"shape\")) {\n                    var error = $root.onnx.TensorShapeProto.verify(message.shape);\n                    if (error)\n                        return \"shape.\" + error;\n                }\n                return null;\n            };\n\n            /**\n             * Creates a Tensor message from a plain object. Also converts values to their respective internal types.\n             * @function fromObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {Object.<string,*>} object Plain object\n             * @returns {onnx.TypeProto.Tensor} Tensor\n             */\n            Tensor.fromObject = function fromObject(object) {\n                if (object instanceof $root.onnx.TypeProto.Tensor)\n                    return object;\n                var message = new $root.onnx.TypeProto.Tensor();\n                if (object.elemType != null)\n                    message.elemType = object.elemType | 0;\n                if (object.shape != null) {\n                    if (typeof object.shape !== \"object\")\n                        throw TypeError(\".onnx.TypeProto.Tensor.shape: object expected\");\n                    message.shape = $root.onnx.TensorShapeProto.fromObject(object.shape);\n                }\n                return message;\n            };\n\n            /**\n             * Creates a plain object from a Tensor message. Also converts values to other types if specified.\n             * @function toObject\n             * @memberof onnx.TypeProto.Tensor\n             * @static\n             * @param {onnx.TypeProto.Tensor} message Tensor\n             * @param {$protobuf.IConversionOptions} [options] Conversion options\n             * @returns {Object.<string,*>} Plain object\n             */\n            Tensor.toObject = function toObject(message, options) {\n                if (!options)\n                    options = {};\n                var object = {};\n                if (options.defaults) {\n                    object.elemType = 0;\n                    object.shape = null;\n                }\n                if (message.elemType != null && message.hasOwnProperty(\"elemType\"))\n                    object.elemType = message.elemType;\n                if (message.shape != null && message.hasOwnProperty(\"shape\"))\n                    object.shape = $root.onnx.TensorShapeProto.toObject(message.shape, options);\n                return object;\n            };\n\n            /**\n             * Converts this Tensor to JSON.\n             * @function toJSON\n             * @memberof onnx.TypeProto.Tensor\n             * @instance\n             * @returns {Object.<string,*>} JSON object\n             */\n            Tensor.prototype.toJSON = function toJSON() {\n                return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n            };\n\n            return Tensor;\n        })();\n\n        return TypeProto;\n    })();\n\n    onnx.OperatorSetIdProto = (function() {\n\n        /**\n         * Properties of an OperatorSetIdProto.\n         * @memberof onnx\n         * @interface IOperatorSetIdProto\n         * @property {string|null} [domain] OperatorSetIdProto domain\n         * @property {number|Long|null} [version] OperatorSetIdProto version\n         */\n\n        /**\n         * Constructs a new OperatorSetIdProto.\n         * @memberof onnx\n         * @classdesc Represents an OperatorSetIdProto.\n         * @implements IOperatorSetIdProto\n         * @constructor\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         */\n        function OperatorSetIdProto(properties) {\n            if (properties)\n                for (var keys = Object.keys(properties), i = 0; i < keys.length; ++i)\n                    if (properties[keys[i]] != null)\n                        this[keys[i]] = properties[keys[i]];\n        }\n\n        /**\n         * OperatorSetIdProto domain.\n         * @member {string} domain\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.domain = \"\";\n\n        /**\n         * OperatorSetIdProto version.\n         * @member {number|Long} version\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         */\n        OperatorSetIdProto.prototype.version = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n        /**\n         * Creates a new OperatorSetIdProto instance using the specified properties.\n         * @function create\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto=} [properties] Properties to set\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto instance\n         */\n        OperatorSetIdProto.create = function create(properties) {\n            return new OperatorSetIdProto(properties);\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encode = function encode(message, writer) {\n            if (!writer)\n                writer = $Writer.create();\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                writer.uint32(/* id 1, wireType 2 =*/10).string(message.domain);\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                writer.uint32(/* id 2, wireType 0 =*/16).int64(message.version);\n            return writer;\n        };\n\n        /**\n         * Encodes the specified OperatorSetIdProto message, length delimited. Does not implicitly {@link onnx.OperatorSetIdProto.verify|verify} messages.\n         * @function encodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.IOperatorSetIdProto} message OperatorSetIdProto message or plain object to encode\n         * @param {$protobuf.Writer} [writer] Writer to encode to\n         * @returns {$protobuf.Writer} Writer\n         */\n        OperatorSetIdProto.encodeDelimited = function encodeDelimited(message, writer) {\n            return this.encode(message, writer).ldelim();\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer.\n         * @function decode\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @param {number} [length] Message length if known beforehand\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decode = function decode(reader, length) {\n            if (!(reader instanceof $Reader))\n                reader = $Reader.create(reader);\n            var end = length === undefined ? reader.len : reader.pos + length, message = new $root.onnx.OperatorSetIdProto();\n            while (reader.pos < end) {\n                var tag = reader.uint32();\n                switch (tag >>> 3) {\n                case 1:\n                    message.domain = reader.string();\n                    break;\n                case 2:\n                    message.version = reader.int64();\n                    break;\n                default:\n                    reader.skipType(tag & 7);\n                    break;\n                }\n            }\n            return message;\n        };\n\n        /**\n         * Decodes an OperatorSetIdProto message from the specified reader or buffer, length delimited.\n         * @function decodeDelimited\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {$protobuf.Reader|Uint8Array} reader Reader or buffer to decode from\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         * @throws {Error} If the payload is not a reader or valid buffer\n         * @throws {$protobuf.util.ProtocolError} If required fields are missing\n         */\n        OperatorSetIdProto.decodeDelimited = function decodeDelimited(reader) {\n            if (!(reader instanceof $Reader))\n                reader = new $Reader(reader);\n            return this.decode(reader, reader.uint32());\n        };\n\n        /**\n         * Verifies an OperatorSetIdProto message.\n         * @function verify\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} message Plain object to verify\n         * @returns {string|null} `null` if valid, otherwise the reason why it is not\n         */\n        OperatorSetIdProto.verify = function verify(message) {\n            if (typeof message !== \"object\" || message === null)\n                return \"object expected\";\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                if (!$util.isString(message.domain))\n                    return \"domain: string expected\";\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (!$util.isInteger(message.version) && !(message.version && $util.isInteger(message.version.low) && $util.isInteger(message.version.high)))\n                    return \"version: integer|Long expected\";\n            return null;\n        };\n\n        /**\n         * Creates an OperatorSetIdProto message from a plain object. Also converts values to their respective internal types.\n         * @function fromObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {Object.<string,*>} object Plain object\n         * @returns {onnx.OperatorSetIdProto} OperatorSetIdProto\n         */\n        OperatorSetIdProto.fromObject = function fromObject(object) {\n            if (object instanceof $root.onnx.OperatorSetIdProto)\n                return object;\n            var message = new $root.onnx.OperatorSetIdProto();\n            if (object.domain != null)\n                message.domain = String(object.domain);\n            if (object.version != null)\n                if ($util.Long)\n                    (message.version = $util.Long.fromValue(object.version)).unsigned = false;\n                else if (typeof object.version === \"string\")\n                    message.version = parseInt(object.version, 10);\n                else if (typeof object.version === \"number\")\n                    message.version = object.version;\n                else if (typeof object.version === \"object\")\n                    message.version = new $util.LongBits(object.version.low >>> 0, object.version.high >>> 0).toNumber();\n            return message;\n        };\n\n        /**\n         * Creates a plain object from an OperatorSetIdProto message. Also converts values to other types if specified.\n         * @function toObject\n         * @memberof onnx.OperatorSetIdProto\n         * @static\n         * @param {onnx.OperatorSetIdProto} message OperatorSetIdProto\n         * @param {$protobuf.IConversionOptions} [options] Conversion options\n         * @returns {Object.<string,*>} Plain object\n         */\n        OperatorSetIdProto.toObject = function toObject(message, options) {\n            if (!options)\n                options = {};\n            var object = {};\n            if (options.defaults) {\n                object.domain = \"\";\n                if ($util.Long) {\n                    var long = new $util.Long(0, 0, false);\n                    object.version = options.longs === String ? long.toString() : options.longs === Number ? long.toNumber() : long;\n                } else\n                    object.version = options.longs === String ? \"0\" : 0;\n            }\n            if (message.domain != null && message.hasOwnProperty(\"domain\"))\n                object.domain = message.domain;\n            if (message.version != null && message.hasOwnProperty(\"version\"))\n                if (typeof message.version === \"number\")\n                    object.version = options.longs === String ? String(message.version) : message.version;\n                else\n                    object.version = options.longs === String ? $util.Long.prototype.toString.call(message.version) : options.longs === Number ? new $util.LongBits(message.version.low >>> 0, message.version.high >>> 0).toNumber() : message.version;\n            return object;\n        };\n\n        /**\n         * Converts this OperatorSetIdProto to JSON.\n         * @function toJSON\n         * @memberof onnx.OperatorSetIdProto\n         * @instance\n         * @returns {Object.<string,*>} JSON object\n         */\n        OperatorSetIdProto.prototype.toJSON = function toJSON() {\n            return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n        };\n\n        return OperatorSetIdProto;\n    })();\n\n    return onnx;\n})();\n\nmodule.exports = $root;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/* eslint-disable import/no-internal-modules */\nimport {Backend, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {Session} from './onnxjs/session';\nimport {OnnxjsSessionHandler} from './onnxjs/session-handler';\n\nclass OnnxjsBackend implements Backend {\n  // eslint-disable-next-line @typescript-eslint/no-empty-function\n  async init(): Promise<void> {}\n\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    // NOTE: Session.Config(from onnx.js) is not compatible with InferenceSession.SessionOptions(from\n    // onnxruntime-common).\n    //       In future we should remove Session.Config and use InferenceSession.SessionOptions.\n    //       Currently we allow this to happen to make test runner work.\n    const session = new Session(options as unknown as Session.Config);\n\n    // typescript cannot merge method override correctly (so far in 4.2.3). need if-else to call the method.\n    if (typeof pathOrBuffer === 'string') {\n      await session.loadModel(pathOrBuffer);\n    } else {\n      await session.loadModel(pathOrBuffer);\n    }\n\n    return new OnnxjsSessionHandler(session);\n  }\n}\n\nexport const onnxjsBackend = new OnnxjsBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {Backend, env, InferenceSession, SessionHandler} from 'onnxruntime-common';\nimport {cpus} from 'os';\nimport {promisify} from 'util';\nimport {initWasm} from './wasm/proxy-wrapper';\n\nimport {OnnxruntimeWebAssemblySessionHandler} from './wasm/session-handler';\n\n/**\n * This function initializes all flags for WebAssembly.\n *\n * Those flags are accessible from `ort.env.wasm`. Users are allow to set those flags before the first inference session\n * being created, to override default value.\n */\nexport const initializeFlags = (): void => {\n  if (typeof env.wasm.initTimeout !== 'number' || env.wasm.initTimeout < 0) {\n    env.wasm.initTimeout = 0;\n  }\n\n  if (typeof env.wasm.simd !== 'boolean') {\n    env.wasm.simd = true;\n  }\n\n  if (typeof env.wasm.proxy !== 'boolean') {\n    env.wasm.proxy = false;\n  }\n\n  if (typeof env.wasm.numThreads !== 'number' || !Number.isInteger(env.wasm.numThreads) || env.wasm.numThreads <= 0) {\n    const numCpuLogicalCores = typeof navigator === 'undefined' ? cpus().length : navigator.hardwareConcurrency;\n    env.wasm.numThreads = Math.min(4, Math.ceil((numCpuLogicalCores || 1) / 2));\n  }\n};\n\nclass OnnxruntimeWebAssemblyBackend implements Backend {\n  async init(): Promise<void> {\n    // populate wasm flags\n    initializeFlags();\n\n    // init wasm\n    await initWasm();\n  }\n  createSessionHandler(path: string, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  createSessionHandler(buffer: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SessionHandler>;\n  async createSessionHandler(pathOrBuffer: string|Uint8Array, options?: InferenceSession.SessionOptions):\n      Promise<SessionHandler> {\n    let buffer: Uint8Array;\n    if (typeof pathOrBuffer === 'string') {\n      if (typeof fetch === 'undefined') {\n        // node\n        buffer = await promisify(readFile)(pathOrBuffer);\n      } else {\n        // browser\n        const response = await fetch(pathOrBuffer);\n        const arrayBuffer = await response.arrayBuffer();\n        buffer = new Uint8Array(arrayBuffer);\n      }\n    } else {\n      buffer = pathOrBuffer;\n    }\n\n    const handler = new OnnxruntimeWebAssemblySessionHandler();\n    await handler.loadModel(buffer, options);\n    return Promise.resolve(handler);\n  }\n}\n\nexport const wasmBackend = new OnnxruntimeWebAssemblyBackend();\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nexport * from 'onnxruntime-common';\nimport {registerBackend} from 'onnxruntime-common';\nimport {onnxjsBackend} from './backend-onnxjs';\nimport {wasmBackend} from './backend-wasm';\n\nregisterBackend('webgl', onnxjsBackend, 1);\nregisterBackend('wasm', wasmBackend, 2);\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nclass AttributeWithCacheKeyImpl {\n  constructor(attribute: Record<string, unknown>) {\n    Object.assign(this, attribute);\n  }\n\n  private _cacheKey: string;\n  public get cacheKey(): string {\n    if (!this._cacheKey) {\n      this._cacheKey =\n          Object.getOwnPropertyNames(this).sort().map(name => `${(this as Record<string, unknown>)[name]}`).join(';');\n    }\n    return this._cacheKey;\n  }\n}\n\nexport interface AttributeWithCacheKey {\n  readonly cacheKey: string;\n}\n\nexport const createAttributeWithCacheKey = <T extends Record<string, unknown>>(attribute: T): T&AttributeWithCacheKey =>\n    new AttributeWithCacheKeyImpl(attribute) as unknown as T & AttributeWithCacheKey;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {Tensor} from './tensor';\nimport {LongUtil} from './util';\n\nexport declare namespace Attribute {\n  export interface DataTypeMap {\n    float: number;\n    int: number;\n    string: string;\n    tensor: Tensor;\n    floats: number[];\n    ints: number[];\n    strings: string[];\n    tensors: Tensor[];\n  }\n\n  export type DataType = keyof DataTypeMap;\n}\n\ntype ValueTypes = Attribute.DataTypeMap[Attribute.DataType];\n\ntype Value = [ValueTypes, Attribute.DataType];\n\nexport class Attribute {\n  constructor(attributes: onnx.IAttributeProto[]|ortFbs.Attribute[]|null|undefined) {\n    this._attributes = new Map();\n    if (attributes !== null && attributes !== undefined) {\n      for (const attr of attributes) {\n        if (attr instanceof onnx.AttributeProto) {\n          this._attributes.set(attr.name, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        } else if (attr instanceof ortFbs.Attribute) {\n          this._attributes.set(attr.name()!, [Attribute.getValue(attr), Attribute.getType(attr)]);\n        }\n      }\n      if (this._attributes.size < attributes.length) {\n        throw new Error('duplicated attribute names');\n      }\n    }\n  }\n\n  set(key: string, type: Attribute.DataType, value: ValueTypes): void {\n    this._attributes.set(key, [value, type]);\n  }\n  delete(key: string): void {\n    this._attributes.delete(key);\n  }\n  getFloat(key: string, defaultValue?: Attribute.DataTypeMap['float']) {\n    return this.get(key, 'float', defaultValue);\n  }\n\n  getInt(key: string, defaultValue?: Attribute.DataTypeMap['int']) {\n    return this.get(key, 'int', defaultValue);\n  }\n\n  getString(key: string, defaultValue?: Attribute.DataTypeMap['string']) {\n    return this.get(key, 'string', defaultValue);\n  }\n\n  getTensor(key: string, defaultValue?: Attribute.DataTypeMap['tensor']) {\n    return this.get(key, 'tensor', defaultValue);\n  }\n\n  getFloats(key: string, defaultValue?: Attribute.DataTypeMap['floats']) {\n    return this.get(key, 'floats', defaultValue);\n  }\n\n  getInts(key: string, defaultValue?: Attribute.DataTypeMap['ints']) {\n    return this.get(key, 'ints', defaultValue);\n  }\n\n  getStrings(key: string, defaultValue?: Attribute.DataTypeMap['strings']) {\n    return this.get(key, 'strings', defaultValue);\n  }\n\n  getTensors(key: string, defaultValue?: Attribute.DataTypeMap['tensors']) {\n    return this.get(key, 'tensors', defaultValue);\n  }\n\n  private get<V extends Attribute.DataTypeMap[Attribute.DataType]>(\n      key: string, type: Attribute.DataType, defaultValue?: V): V {\n    const valueAndType = this._attributes.get(key);\n    if (valueAndType === undefined) {\n      if (defaultValue !== undefined) {\n        return defaultValue;\n      }\n      throw new Error(`required attribute not found: ${key}`);\n    }\n    if (valueAndType[1] !== type) {\n      throw new Error(`type mismatch: expected ${type} but got ${valueAndType[1]}`);\n    }\n    return valueAndType[0] as V;\n  }\n\n  private static getType(attr: onnx.IAttributeProto|ortFbs.Attribute): Attribute.DataType {\n    const type = attr instanceof onnx.AttributeProto ? (attr).type : (attr as ortFbs.Attribute).type();\n    switch (type) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return 'float';\n      case onnx.AttributeProto.AttributeType.INT:\n        return 'int';\n      case onnx.AttributeProto.AttributeType.STRING:\n        return 'string';\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return 'tensor';\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return 'floats';\n      case onnx.AttributeProto.AttributeType.INTS:\n        return 'ints';\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return 'strings';\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return 'tensors';\n      default:\n        throw new Error(`attribute type is not supported yet: ${onnx.AttributeProto.AttributeType[type]}`);\n    }\n  }\n\n  private static getValue(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    const attrType = attr instanceof onnx.AttributeProto ? attr.type : (attr as ortFbs.Attribute).type();\n    if (attrType === onnx.AttributeProto.AttributeType.GRAPH || attrType === onnx.AttributeProto.AttributeType.GRAPHS) {\n      throw new Error('graph attribute is not supported yet');\n    }\n\n    const value = this.getValueNoCheck(attr);\n\n    // cast LONG to number\n    if (attrType === onnx.AttributeProto.AttributeType.INT && LongUtil.isLong(value)) {\n      return LongUtil.longToNumber(value as Long | flatbuffers.Long);\n    }\n\n    // cast LONG[] to number[]\n    if (attrType === onnx.AttributeProto.AttributeType.INTS) {\n      const arr = (value as Array<number|Long|flatbuffers.Long>);\n      const numberValue: number[] = new Array<number>(arr.length);\n\n      for (let i = 0; i < arr.length; i++) {\n        const maybeLong = arr[i];\n        numberValue[i] = LongUtil.longToNumber(maybeLong);\n      }\n\n      return numberValue;\n    }\n\n    // cast onnx.TensorProto to onnxjs.Tensor\n    if (attrType === onnx.AttributeProto.AttributeType.TENSOR) {\n      return attr instanceof onnx.AttributeProto ? Tensor.fromProto(value as onnx.ITensorProto) :\n                                                   Tensor.fromOrtTensor(value as ortFbs.Tensor);\n    }\n\n    // cast onnx.TensorProto[] to onnxjs.Tensor[]\n    if (attrType === onnx.AttributeProto.AttributeType.TENSORS) {\n      if (attr instanceof onnx.AttributeProto) {\n        const tensorProtos = value as onnx.ITensorProto[];\n        return tensorProtos.map(value => Tensor.fromProto(value));\n      } else if (attr instanceof ortFbs.Attribute) {\n        const tensorProtos = value as ortFbs.Tensor[];\n        return tensorProtos.map(value => Tensor.fromOrtTensor(value));\n      }\n    }\n\n    // cast Uint8Array to string\n    if (attrType === onnx.AttributeProto.AttributeType.STRING) {\n      // string in onnx attribute is of uint8array type, so we need to convert it to string below. While in ort format,\n      // string attributes are returned as string, so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8String = value as Uint8Array;\n        return Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString();\n      }\n    }\n\n    // cast Uint8Array[] to string[]\n    if (attrType === onnx.AttributeProto.AttributeType.STRINGS) {\n      // strings in onnx attribute is returned as uint8array[], so we need to convert it to string[] below. While in ort\n      // format strings attributes are returned as string[], so no conversion is needed.\n      if (attr instanceof onnx.AttributeProto) {\n        const utf8Strings = value as Uint8Array[];\n        return utf8Strings.map(\n            utf8String => Buffer.from(utf8String.buffer, utf8String.byteOffset, utf8String.byteLength).toString());\n      }\n    }\n\n    return value as ValueTypes;\n  }\n\n  private static getValueNoCheck(attr: onnx.IAttributeProto|ortFbs.Attribute) {\n    return attr instanceof (onnx.AttributeProto) ? this.getValueNoCheckFromOnnxFormat(attr) :\n                                                   this.getValueNoCheckFromOrtFormat(attr as ortFbs.Attribute);\n  }\n\n  private static getValueNoCheckFromOnnxFormat(attr: onnx.IAttributeProto) {\n    switch (attr.type!) {\n      case onnx.AttributeProto.AttributeType.FLOAT:\n        return attr.f;\n      case onnx.AttributeProto.AttributeType.INT:\n        return attr.i;\n      case onnx.AttributeProto.AttributeType.STRING:\n        return attr.s;\n      case onnx.AttributeProto.AttributeType.TENSOR:\n        return attr.t;\n      case onnx.AttributeProto.AttributeType.GRAPH:\n        return attr.g;\n      case onnx.AttributeProto.AttributeType.FLOATS:\n        return attr.floats;\n      case onnx.AttributeProto.AttributeType.INTS:\n        return attr.ints;\n      case onnx.AttributeProto.AttributeType.STRINGS:\n        return attr.strings;\n      case onnx.AttributeProto.AttributeType.TENSORS:\n        return attr.tensors;\n      case onnx.AttributeProto.AttributeType.GRAPHS:\n        return attr.graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${onnx.AttributeProto.AttributeType[attr.type!]}`);\n    }\n  }\n\n  private static getValueNoCheckFromOrtFormat(attr: ortFbs.Attribute) {\n    switch (attr.type()) {\n      case ortFbs.AttributeType.FLOAT:\n        return attr.f();\n      case ortFbs.AttributeType.INT:\n        return attr.i();\n      case ortFbs.AttributeType.STRING:\n        return attr.s();\n      case ortFbs.AttributeType.TENSOR:\n        return attr.t();\n      case ortFbs.AttributeType.GRAPH:\n        return attr.g();\n      case ortFbs.AttributeType.FLOATS:\n        return attr.floatsArray();\n      case ortFbs.AttributeType.INTS: {\n        const ints = [];\n        for (let i = 0; i < attr.intsLength(); i++) {\n          ints.push(attr.ints(i)!);\n        }\n        return ints;\n      }\n      case ortFbs.AttributeType.STRINGS: {\n        const strings = [];\n        for (let i = 0; i < attr.stringsLength(); i++) {\n          strings.push(attr.strings(i));\n        }\n        return strings;\n      }\n      case ortFbs.AttributeType.TENSORS: {\n        const tensors = [];\n        for (let i = 0; i < attr.tensorsLength(); i++) {\n          tensors.push(attr.tensors(i)!);\n        }\n        return tensors;\n      }\n      // case ortFbs.AttributeType.GRAPHS:\n      // TODO: Subgraph not supported yet.\n      // const graphs = [];\n      // for (let i = 0; i < attr.graphsLength(); i++) {\n      //   graphs.push(attr.graphs(i)!);\n      // }\n      // return graphs;\n      default:\n        throw new Error(`unsupported attribute type: ${ortFbs.AttributeType[attr.type()]}`);\n    }\n  }\n\n  protected _attributes: Map<string, Value>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {WebGLBackend} from './backends/backend-webgl';\nimport {Graph} from './graph';\nimport {Operator} from './operators';\nimport {OpSet} from './opset';\nimport {Session} from './session';\n\nexport interface InferenceHandler {\n  /**\n   * dispose the inference handler. it will be called as the last step in Session.run()\n   */\n  dispose(): void;\n}\n\nexport interface SessionHandler {\n  /**\n   * transform the graph at initialization time\n   * @param graphTransformer the graph transformer to manipulate the model graph\n   */\n  transformGraph?(graphTransformer: Graph.Transformer): void;\n\n  /**\n   * create an instance of InferenceHandler to use in a Session.run() call\n   */\n  createInferenceHandler(): InferenceHandler;\n\n  /**\n   * dispose the session handler. it will be called when a session is being disposed explicitly\n   */\n  dispose(): void;\n\n  /**\n   * Resolves the operator from the name and opset version; backend specific\n   * @param node the node to resolve\n   * @param opsets a list of opsets that exported from the model\n   * @param graph the completely initialized graph\n   */\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator;\n\n  /**\n   * This method let's the sessionHandler know that the graph initialization is complete\n   * @param graph the completely initialized graph\n   */\n  onGraphInitialized?(graph: Graph): void;\n\n  /**\n   * a reference to the corresponding backend\n   */\n  readonly backend: Backend;\n\n  /**\n   * a reference to the session context\n   */\n  readonly context: Session.Context;\n}\n\nexport interface Backend {\n  /**\n   * initialize the backend. will be called only once, when the first time the\n   * backend it to be used\n   */\n  initialize(): boolean|Promise<boolean>;\n\n  /**\n   * create an instance of SessionHandler to use in a Session object's lifecycle\n   */\n  createSessionHandler(context: Session.Context): SessionHandler;\n\n  /**\n   * dispose the backend. currently this will not be called\n   */\n  dispose(): void;\n}\n\n// caches all initialized backend instances\nconst backendsCache: Map<string, Backend> = new Map();\n\nexport const backend: {[name: string]: Backend} = {\n  webgl: new WebGLBackend(),\n};\n\n/**\n * Resolve a reference to the backend. If a hint is specified, the corresponding\n * backend will be used.\n */\nexport async function resolveBackend(hint?: string|readonly string[]): Promise<Backend> {\n  if (!hint) {\n    return resolveBackend(['webgl']);\n  } else {\n    const hints = typeof hint === 'string' ? [hint] : hint;\n\n    for (const backendHint of hints) {\n      const cache = backendsCache.get(backendHint);\n      if (cache) {\n        return cache;\n      }\n\n      const backend = await tryLoadBackend(backendHint);\n      if (backend) {\n        return backend;\n      }\n    }\n  }\n\n  throw new Error('no available backend to use');\n}\n\nasync function tryLoadBackend(backendHint: string): Promise<Backend|undefined> {\n  const backendObj = backend;\n\n  if (typeof backendObj[backendHint] !== 'undefined' && isBackend(backendObj[backendHint])) {\n    const backend = backendObj[backendHint];\n    let init = backend.initialize();\n    if (typeof init === 'object' && 'then' in init) {\n      init = await init;\n    }\n    if (init) {\n      backendsCache.set(backendHint, backend);\n      return backend;\n    }\n  }\n\n  return undefined;\n}\n\nfunction isBackend(obj: unknown) {\n  // eslint-disable-next-line @typescript-eslint/no-explicit-any\n  const o = obj as any;\n\n  // check if an object is a Backend instance\n  if (\n      'initialize' in o && typeof o.initialize === 'function' &&                      // initialize()\n      'createSessionHandler' in o && typeof o.createSessionHandler === 'function' &&  // createSessionHandler()\n      'dispose' in o && typeof o.dispose === 'function'                               // dispose()\n  ) {\n    return true;\n  }\n\n  return false;\n}\n\nexport type BackendType = Backend;\nexport type SessionHandlerType = ReturnType<BackendType['createSessionHandler']>;\nexport type InferenceHandlerType = ReturnType<SessionHandlerType['createInferenceHandler']>;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Backend, SessionHandler} from '../backend';\nimport {Logger} from '../instrument';\nimport {Session} from '../session';\n\nimport {WebGLSessionHandler} from './webgl/session-handler';\nimport {WebGLContext} from './webgl/webgl-context';\nimport {createWebGLContext} from './webgl/webgl-context-factory';\n\n/**\n * WebGLBackend is the entry point for all WebGL opeartions\n * When it starts it created the WebGLRenderingContext\n * and other main framework components such as Program and Texture Managers\n */\nexport class WebGLBackend implements Backend {\n  glContext: WebGLContext;\n\n  get contextId(): 'webgl'|'webgl2'|undefined {\n    return env.webgl.contextId;\n  }\n  set contextId(value: 'webgl'|'webgl2'|undefined) {\n    env.webgl.contextId = value;\n  }\n\n  get matmulMaxBatchSize(): number|undefined {\n    return env.webgl.matmulMaxBatchSize;\n  }\n  set matmulMaxBatchSize(value: number|undefined) {\n    env.webgl.matmulMaxBatchSize = value;\n  }\n\n  get textureCacheMode(): 'initializerOnly'|'full'|undefined {\n    return env.webgl.textureCacheMode;\n  }\n  set textureCacheMode(value: 'initializerOnly'|'full'|undefined) {\n    env.webgl.textureCacheMode = value;\n  }\n\n  get pack(): boolean|undefined {\n    return env.webgl.pack;\n  }\n  set pack(value: boolean|undefined) {\n    env.webgl.pack = value;\n  }\n\n  get async(): boolean|undefined {\n    return env.webgl.async;\n  }\n  set async(value: boolean|undefined) {\n    env.webgl.async = value;\n  }\n\n  initialize(): boolean {\n    try {\n      this.glContext = createWebGLContext(this.contextId);\n      if (typeof this.matmulMaxBatchSize !== 'number') {\n        this.matmulMaxBatchSize = 16;\n      }\n      if (typeof this.textureCacheMode !== 'string') {\n        this.textureCacheMode = 'full';\n      }\n      if (typeof this.pack !== 'boolean') {\n        this.pack = false;\n      }\n      if (typeof this.async !== 'boolean') {\n        this.async = false;\n      }\n\n      Logger.setWithEnv(env);\n\n      Logger.verbose(\n          'WebGLBackend',\n          `Created WebGLContext: ${typeof this.glContext} with matmulMaxBatchSize: ${\n              this.matmulMaxBatchSize}; textureCacheMode: ${this.textureCacheMode}; pack: ${this.pack}; async: ${\n              this.async}.`);\n      return true;\n    } catch (e) {\n      Logger.warning('WebGLBackend', `Unable to initialize WebGLBackend. ${e}`);\n      return false;\n    }\n  }\n  createSessionHandler(context: Session.Context): SessionHandler {\n    return new WebGLSessionHandler(this, context);\n  }\n  dispose(): void {\n    this.glContext.dispose();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ArrayUtil, BroadcastUtil, ShapeUtil} from '../../util';\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\nimport {squeezeShape} from './texture-layout-strategy';\nimport {TextureLayout} from './types';\nimport {generateShaderFuncNameFromInputSamplerName, generateShaderFuncNameFromInputSamplerNameAtOutCoords, getCoordsDataType, getGlChannels, getSqueezedParams, squeezeInputShape} from './utils';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class CoordsGlslLib extends GlslLib {\n  returnType: string;\n\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.offsetToCoords(),\n      ...this.coordsToOffset(),\n      ...this.toVec(),\n      ...this.valueFrom(),\n      // TODO return these only when packing is enabled.\n      ...this.getCommonUtilFuncs(),\n      ...this.getInputsSamplingSnippets(),\n      ...this.getOutputSamplingSnippet()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected offsetToCoords(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'offsetToCoords';\n    return {\n      offsetToCoords: new GlslLibRoutine(`\n      vec2 ${funcName}(int offset, int width, int height) {\n        int t = offset / width;\n        int s = offset - t*width;\n        vec2 coords = (vec2(s,t) + vec2(0.5,0.5)) / vec2(width, height);\n        return coords;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Produces a function that can map from\n   * 2D normalzied coordinates (s,t) to a flat offset\n   */\n  protected coordsToOffset(): {[name: string]: GlslLibRoutine} {\n    const funcName = 'coordsToOffset';\n    return {\n      coordsToOffset: new GlslLibRoutine(`\n      int ${funcName}(vec2 coords, int width, int height) {\n        float s = coords.s * float(width);\n        float t = coords.t * float(height);\n        int offset = int(t) * width + int(s);\n        return offset;\n      }\n      `)\n    };\n  }\n\n  /**\n   * Generates code for output sampler.\n   */\n\n  protected getOutputSamplingSnippet(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    if (outputLayout.isPacked) {\n      return this.getPackedOutputSamplingSnippet(outputLayout);\n    } else {\n      return this.getUnpackedOutputSamplingSnippet(outputLayout);\n    }\n  }\n\n  /**\n   * Generates code for packed output sampler.\n   */\n  protected getPackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputPacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] = this.getOutputPacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputPacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        result[funcName] = this.getOutputPackedNDCoords(outShape, outTexShape as [number, number]);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRGBASource = `\n      void setOutput(vec4 val) {\n        ${glsl.output} = val;\n      }\n    `;\n    const floatTextureSetRGBAFuncName = 'floatTextureSetRGBA';\n    result[floatTextureSetRGBAFuncName] = new GlslLibRoutine(floatTextureSetRGBASource);\n    return result;\n  }\n\n  /**\n   * Generates code for unpacked output sampler.\n   */\n  protected getUnpackedOutputSamplingSnippet(outputLayout: TextureLayout): {[name: string]: GlslLibRoutine} {\n    const outShape = outputLayout.unpackedShape;\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const funcName = 'getOutputCoords';\n    switch (outShape.length) {\n      case 0:\n        result[funcName] = this.getOutputScalarCoords();\n        break;\n      case 1:\n        result[funcName] = this.getOutputUnpacked1DCoords(outShape as [number], outTexShape as [number, number]);\n        break;\n      case 2:\n        result[funcName] =\n            this.getOutputUnpacked2DCoords(outShape as [number, number], outTexShape as [number, number]);\n        break;\n      case 3:\n        result[funcName] =\n            this.getOutputUnpacked3DCoords(outShape as [number, number, number], outTexShape as [number, number]);\n        break;\n      case 4:\n        result[funcName] = this.getOutputUnpacked4DCoords(\n            outShape as [number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 5:\n        result[funcName] = this.getOutputUnpacked5DCoords(\n            outShape as [number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      case 6:\n        result[funcName] = this.getOutputUnpacked6DCoords(\n            outShape as [number, number, number, number, number, number], outTexShape as [number, number]);\n        break;\n      default:\n        throw new Error(`Unsupported output dimensionality: ${outShape.length}`);\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    // TODO we need this to properly return a packed vec4 from kernels.\n    // Replace all '{glsl.output} = result' with 'setOutput(result)' in all kernels.\n    const floatTextureSetRSource = `\n        void setOutput(float val) {\n          ${glsl.output} = vec4(val, 0, 0, 0);\n        }\n    `;\n    const floatTextureSetRFuncName = 'floatTextureSetR';\n    result[floatTextureSetRFuncName] = new GlslLibRoutine(floatTextureSetRSource);\n    return result;\n  }\n\n  /**\n   * Scalar output coordinates.\n   */\n  protected getOutputScalarCoords(): GlslLibRoutine {\n    return new GlslLibRoutine(`\n      int getOutputCoords() {\n        return 0;\n      }\n    `);\n  }\n\n  /**\n   * 1D packed output coordinates.\n   */\n  protected getOutputPacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = texShape;\n    let source = '';\n    if (packedTexShape[0] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.y * ${packedTexShape[1]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    if (packedTexShape[1] === 1) {\n      source = `\n          int getOutputCoords() {\n            return 2 * int(TexCoords.x * ${packedTexShape[0]}.0);\n          }\n        `;\n      return new GlslLibRoutine(source);\n    }\n\n    source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                 vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          return 2 * (resTexRC.y * ${packedTexShape[0]} + resTexRC.x);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 2D packed output coordinates.\n   */\n  protected getOutputPacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    if (ArrayUtil.arraysEqual(shape, texShape)) {\n      source = `\n        ivec2 getOutputCoords() {\n          return 2 * ivec2(TexCoords.xy * vec2(${texShape[0]}, ${texShape[1]}));\n        }\n      `;\n      return new GlslLibRoutine(source);\n    }\n\n    const packedTexShape = texShape;\n    // texels needed to accommodate a logical row\n    const texelsInLogicalRow = Math.ceil(shape[1] / 2);\n\n    /**\n     * getOutputCoords\n     *\n     * resTexRC: The rows and columns of the texels. If you move over one\n     * texel to the right in the packed texture, you are moving over one column\n     * (not two).\n     *\n     * index: The texel index\n     */\n    source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * 3D packed output coordinates.\n   */\n  protected getOutputPacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texelsInLogicalRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[1] / 2);\n    const source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n          int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n          int b = index / ${texelsInBatch};\n          index -= b * ${texelsInBatch};\n\n          // reverse r and c order for packed texture\n          int r = imod(index, ${texelsInLogicalRow}) * 2;\n          int c = 2 * (index / ${texelsInLogicalRow});\n\n          return ivec3(b, r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * ND packed output coordinates.\n   */\n  protected getOutputPackedNDCoords(shape: readonly number[], texShape: [number, number]): GlslLibRoutine {\n    const packedTexShape = [texShape[0], texShape[1]];\n\n    const texelsInLogicalRow = Math.ceil(shape[shape.length - 1] / 2);\n    const texelsInBatch = texelsInLogicalRow * Math.ceil(shape[shape.length - 2] / 2);\n    let texelsInBatchN = texelsInBatch;\n    let batches = '';\n    let coords = 'b, r, c';\n\n    for (let b = 2; b < shape.length - 1; b++) {\n      texelsInBatchN *= shape[shape.length - b - 1];\n      batches = `\n      int b${b} = index / ${texelsInBatchN};\n      index -= b${b} * ${texelsInBatchN};\n    ` + batches;\n      coords = `b${b}, ` + coords;\n    }\n    const source = `\n      ivec${shape.length} getOutputCoords() {\n        ivec2 resTexRC = ivec2(TexCoords.xy *\n                              vec2(${packedTexShape[0]}, ${packedTexShape[1]}));\n        int index = resTexRC.y * ${packedTexShape[0]} + resTexRC.x;\n\n        ${batches}\n\n        int b = index / ${texelsInBatch};\n        index -= b * ${texelsInBatch};\n\n        // reverse r and c order for packed texture\n        int r = imod(index, ${texelsInLogicalRow}) * 2;\n        int c = 2 * (index / ${texelsInLogicalRow});\n\n        return ivec${shape.length}(${coords});\n      }\n    `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 1D output coordinates.\n   */\n  protected getOutputUnpacked1DCoords(shape: [number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        int getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          return resTexRC.y * ${texShape[0]} + resTexRC.x;\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 2D output coordinates.\n   */\n  protected getOutputUnpacked2DCoords(shape: [number, number], texShape: [number, number]): GlslLibRoutine {\n    const source = `\n        ivec2 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          int r = index / ${shape[1]};\n          int c = index - r * ${shape[1]};\n          return ivec2(r, c);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 3D output coordinates.\n   */\n  protected getOutputUnpacked3DCoords(shape: [number, number, number], texShape: [number, number]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n        ivec3 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec3(r, c, d);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 4D output coordinates.\n   */\n  protected getOutputUnpacked4DCoords(shape: [number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec4 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec4(r, c, d, d2);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 5D output coordinates.\n   */\n  protected getOutputUnpacked5DCoords(shape: [number, number, number, number, number], texShape: [number, number]):\n      GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n      ivec5 getOutputCoords() {\n          ivec2 resTexRC = ivec2(TexCoords.xy *\n                                vec2(${texShape[0]}, ${texShape[1]}));\n          int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n          ${coordsFromIndexSnippet}\n          return ivec5(r, c, d, d2, d3);\n        }\n      `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked 6D output coordinates.\n   */\n  protected getOutputUnpacked6DCoords(shape: [number, number, number, number, number, number], texShape: [\n    number, number\n  ]): GlslLibRoutine {\n    let source = '';\n    const rank = shape.length;\n\n    let strides = null;\n    if (rank < 2) {\n      strides = [];\n    }\n\n    strides = new Array(rank - 1);\n    strides[rank - 2] = shape[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * shape[i + 1];\n    }\n    const coordsToCompute = ['r', 'c', 'd', 'd2', 'd3', 'd4'];\n    const coordsFromIndexSnippet =\n        strides\n            .map((stride, i) => {\n              const line1 = `int ${coordsToCompute[i]} = index / ${stride}`;\n              const line2 = i === strides.length - 1 ?\n                  `int ${coordsToCompute[i + 1]} = index - ${coordsToCompute[i]} * ${stride}` :\n                  `index -= ${coordsToCompute[i]} * ${stride}`;\n              return `${line1}; ${line2};`;\n            })\n            .join('');\n\n    source = `\n     ivec6 getOutputCoords() {\n         ivec2 resTexRC = ivec2(TexCoords.xy *\n                               vec2(${texShape[0]}, ${texShape[1]}));\n         int index = resTexRC.y * ${texShape[0]} + resTexRC.x;\n         ${coordsFromIndexSnippet}\n         return ivec6(r, c, d, d2, d3, d4);\n       }\n     `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Generates code for common UV coords computation utility functions.\n   */\n  protected getCommonUtilFuncs(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    let funcName = 'uvFromFlat';\n    result[funcName] = new GlslLibRoutine(`\n    vec2 uvFromFlat(int texNumR, int texNumC, int index) {\n      int texC = index / texNumR;\n      int texR = index - texC * texNumR;\n      // TODO: swap texR, texC order in following function so row is corresponding to u and column is corresponding to\n      //       v.\n      return (vec2(texR, texC) + halfCR) / vec2(texNumR, texNumC);\n    }\n    `);\n    funcName = 'packedUVfrom1D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom1D(int texNumR, int texNumC, int index) {\n        int texelIndex = index / 2;\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom2D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom2D(int texNumR, int texNumC, int texelsInLogicalRow, int row, int col) {\n        int texelIndex = (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = texelIndex / texNumC;\n        int texC = texelIndex - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'packedUVfrom3D';\n    result[funcName] = new GlslLibRoutine(`\n      vec2 packedUVfrom3D(int texNumR, int texNumC,\n          int texelsInBatch, int texelsInLogicalRow, int b,\n          int row, int col) {\n        int index = b * texelsInBatch + (row / 2) * texelsInLogicalRow + (col / 2);\n        int texR = index / texNumC;\n        int texC = index - texR * texNumC;\n        return (vec2(texC, texR) + halfCR) / vec2(texNumC, texNumR);\n      }\n      `);\n    funcName = 'sampleTexture';\n    const glsl = getGlsl(this.context.glContext.version);\n    result[funcName] = new GlslLibRoutine(`\n        float sampleTexture(sampler2D textureSampler, vec2 uv) {\n            return ${glsl.texture2D}(textureSampler, uv).r;\n        }`);\n    return result;\n  }\n\n  /**\n   * Constructing snippets for inputs\n   */\n  protected getInputsSamplingSnippets(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    const outputLayout = this.context.outputTextureLayout;\n    this.context.programInfo.inputNames.forEach((samplerName, i) => {\n      const inputLayout = this.context.inputTextureLayouts[i];\n      const funcName = generateShaderFuncNameFromInputSamplerName(samplerName);\n      if (inputLayout.isPacked) {\n        result[funcName] = this.getPackedSamplerFromInput(funcName, samplerName, inputLayout);\n      } else {\n        result[funcName] = this.getUnpackedSamplerFromInput(funcName, samplerName, inputLayout);\n      }\n\n      const outCoordFuncName = generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName);\n      if (inputLayout.unpackedShape.length <= outputLayout.unpackedShape.length) {\n        if (inputLayout.isPacked) {\n          result[outCoordFuncName] =\n              this.getPackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        } else {\n          result[outCoordFuncName] =\n              this.getUnpackedSamplerAtOutputCoords(outCoordFuncName, inputLayout, outputLayout, samplerName);\n        }\n      }\n    });\n\n    return result;\n  }\n\n  /**\n   * Constructing snippets for output coordinates of samplers\n   */\n  protected getPackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texName = name;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(texName);\n\n    const inRank = inShape.length;\n    const outRank = outShape.length;\n\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n\n    const type = getCoordsDataType(outRank);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n\n    let output = 'return outputValue;';\n    const inSize = ShapeUtil.size(inShape);\n    const isInputScalar = inSize === 1;\n    const outSize = ShapeUtil.size(outShape);\n    const isOutputScalar = outSize === 1;\n\n    if (inRank === 1 && !isInputScalar && !isOutputScalar) {\n      output = `\n        return vec4(outputValue.xy, outputValue.xy);\n      `;\n    } else if (isInputScalar && !isOutputScalar) {\n      if (outRank === 1) {\n        output = `\n          return vec4(outputValue.x, outputValue.x, 0., 0.);\n        `;\n      } else {\n        output = `\n          return vec4(outputValue.x);\n        `;\n      }\n    } else if (broadcastDims.length) {\n      const rows = inRank - 2;\n      const cols = inRank - 1;\n\n      if (broadcastDims.indexOf(rows) > -1 && broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.x);';\n      } else if (broadcastDims.indexOf(rows) > -1) {\n        output = 'return vec4(outputValue.x, outputValue.y, ' +\n            'outputValue.x, outputValue.y);';\n      } else if (broadcastDims.indexOf(cols) > -1) {\n        output = 'return vec4(outputValue.xx, outputValue.zz);';\n      }\n    }\n\n    const swapLastDimsSnippet = `\n        int lastDim = coords.${fields[outRank - 1]};\n        coords.${fields[outRank - 1]} = coords.${fields[outRank - 2]};\n        coords.${fields[outRank - 2]} = lastDim;\n      `;\n    const source = `\n      vec4 ${funcName}() {\n        ${type} coords = getOutputCoords();\n        ${swapLastDimsSnippet}\n        ${coordsSnippet}\n        vec4 outputValue = ${texFuncSnippet}(${unpackedCoordsSnippet});\n        ${output}\n      }\n    `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for unpacked output coordinates of samplers\n   */\n  protected getUnpackedSamplerAtOutputCoords(\n      funcName: string, inputLayout: TextureLayout, outputLayout: TextureLayout, name: string): GlslLibRoutine {\n    const outTexShape = [outputLayout.width, outputLayout.height];\n    const inTexShape = [inputLayout.width, inputLayout.height];\n    const inRank = inputLayout.unpackedShape.length;\n    const outRank = outputLayout.unpackedShape.length;\n    const inShape = inputLayout.unpackedShape;\n    const outShape = outputLayout.unpackedShape;\n    const texFuncSnippet = generateShaderFuncNameFromInputSamplerName(name);\n\n    if (inRank === outRank && ArrayUtil.arraysEqual(inTexShape, outTexShape)) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, TexCoords);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const type = getCoordsDataType(outRank);\n    const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n    const rankDiff = outRank - inRank;\n    let coordsSnippet: string;\n    const fields = getGlChannels();\n\n    if (inRank === 0) {\n      coordsSnippet = '';\n    } else if (outRank < 2 && broadcastDims.length >= 1) {\n      coordsSnippet = 'coords = 0;';\n    } else {\n      coordsSnippet = broadcastDims.map(d => `coords.${fields[d + rankDiff]} = 0;`).join('\\n');\n    }\n    let unpackedCoordsSnippet = '';\n    if (outRank < 2 && inRank > 0) {\n      unpackedCoordsSnippet = 'coords';\n    } else {\n      unpackedCoordsSnippet = inputLayout.unpackedShape.map((s, i) => `coords.${fields[i + rankDiff]}`).join(', ');\n    }\n    const source = `\n        float ${funcName}() {\n          ${type} coords = getOutputCoords();\n          ${coordsSnippet}\n          return ${texFuncSnippet}(${unpackedCoordsSnippet});\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.getOutputCoords']);\n  }\n\n  /**\n   * Constructing snippets for packed operations.\n   */\n  protected getPackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    switch (inputLayout.unpackedShape.length) {\n      case 0:\n        return this.getPackedSamplerScalar(funcName, name);\n      case 1:\n        return this.getPackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getPackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getPackedSampler3D(funcName, name, inputLayout);\n      default:\n        return this.getPackedSamplerND(funcName, name, inputLayout);\n    }\n  }\n\n  /**\n   * Constructing snippets for unpacked operations.\n   */\n  protected getUnpackedSamplerFromInput(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    switch (shape.length) {\n      case 0:\n        return this.getUnpackedSamplerScalar(funcName, name, inputLayout);\n      case 1:\n        return this.getUnpackedSampler1D(funcName, name, inputLayout);\n      case 2:\n        return this.getUnpackedSampler2D(funcName, name, inputLayout);\n      case 3:\n        return this.getUnpackedSampler3D(funcName, name, inputLayout);\n      case 4:\n        return this.getUnpackedSampler4D(funcName, name, inputLayout);\n      case 5:\n        return this.getUnpackedSampler5D(funcName, name, inputLayout);\n      case 6:\n        return this.getUnpackedSampler6D(funcName, name, inputLayout);\n      default:\n        // TODO support more dimensionalities\n        throw new Error(`Unsupported dimension ${shape.length}-D`);\n    }\n  }\n\n  /**\n   * Packed scalar snippet.\n   */\n  protected getPackedSamplerScalar(funcName: string, name: string): GlslLibRoutine {\n    const glsl = getGlsl(this.context.glContext.version);\n    const source = `\n          vec4 ${funcName}() {\n            return ${glsl.texture2D}(${name}, halfCR);\n          }\n        `;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Packed 1D snippet.\n   */\n  protected getPackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[1], texShape[0]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedSampler = `vec4 ${funcName}(int index) {\n      vec2 uv = packedUVfrom1D(\n      ${packedTexShape[0]}, ${packedTexShape[1]}, index);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom1D']);\n  }\n\n  /**\n   * Packed 2D snippet.\n   */\n  protected getPackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n    const texNumR = texShape[0];\n    const texNumC = texShape[1];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const packedSampler = `vec4 ${funcName}(int row, int col) {\n        vec2 uv = (vec2(col, row) + halfCR) / vec2(${texNumC}.0, ${texNumR}.0);\n        return ${glsl.texture2D}(${name}, uv);\n      }`;\n\n      return new GlslLibRoutine(packedSampler);\n    }\n    const packedTexShape = texShape;\n    const valuesPerRow = Math.ceil(shape[1] / 2);\n    const packedSampler = `vec4 ${funcName}(int row, int col) {\n      vec2 uv = packedUVfrom2D(${packedTexShape[1]}, ${packedTexShape[0]}, ${valuesPerRow}, row, col);\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom2D']);\n  }\n\n  /**\n   * Packed 3D snippet.\n   */\n  protected getPackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const packedTexShape = [texShape[0], texShape[1]];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    if (shape[0] === 1) {\n      const squeezedShape = shape.slice(1);\n      const keptDims = [1, 2];\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['b', 'row', 'col'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const samplerRoutine = this.getPackedSamplerFromInput(funcName, name, newInputLayout);\n      const packedSampler = `${samplerRoutine.routineBody}\n      vec4 ${funcName}(int b, int row, int col) {\n        return ${funcName}(${getSqueezedParams(params, keptDims)});\n      } `;\n      const source = packedSampler;\n      return new GlslLibRoutine(source, samplerRoutine.dependencies);\n    }\n    const texNumR = packedTexShape[0];\n    const texNumC = packedTexShape[1];\n\n    const valuesPerRow = Math.ceil(shape[2] / 2);\n    const texelsInBatch = valuesPerRow * Math.ceil(shape[1] / 2);\n\n    const packedSampler = `vec4 ${funcName}(int b, int row, int col) {\n      vec2 uv = packedUVfrom3D(\n        ${texNumC}, ${texNumR}, ${texelsInBatch}, ${valuesPerRow}, b, row, col);\n      return ${glsl.texture2D}(${name}, uv);}`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source, ['coordinates.packedUVfrom3D']);\n  }\n  /*\n   * Packed ND snippet.\n   */\n  protected getPackedSamplerND(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const rank = shape.length;\n    const texShape = [inputLayout.width, inputLayout.height];\n    const glsl = getGlsl(this.context.glContext.version);\n\n    const packedTexShape = [texShape[0], texShape[1]];\n    const texNumR = packedTexShape[1];\n    const texNumC = packedTexShape[0];\n    const valuesPerRow = Math.ceil(shape[rank - 1] / 2);\n    let texelsInBatch = valuesPerRow * Math.ceil(shape[rank - 2] / 2);\n    let params = 'int b, int row, int col';\n    let index = `b * ${texelsInBatch} + (row / 2) * ${valuesPerRow} + (col / 2)`;\n    for (let b = 2; b < rank - 1; b++) {\n      params = `int b${b}, ` + params;\n      texelsInBatch *= shape[rank - b - 1];\n      index = `b${b} * ${texelsInBatch} + ` + index;\n    }\n    const packedSampler = `vec4 ${funcName}(${params}) {\n      int index = ${index};\n      int texR = index / ${texNumC};\n      int texC = index - texR * ${texNumC};\n      vec2 uv = (vec2(texC, texR) + halfCR) / vec2(${texNumC}, ${texNumR});\n      return ${glsl.texture2D}(${name}, uv);\n    }`;\n    const source = packedSampler;\n    return new GlslLibRoutine(source);\n  }\n\n  /**\n   * Unpacked scalar snippet.\n   */\n  protected getUnpackedSamplerScalar(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const [texNumR, texNumC] = [inputLayout.width, inputLayout.height];\n    if (texNumR === 1 && texNumC === 1) {\n      const source = `\n          float ${funcName}() {\n            return sampleTexture(${name}, halfCR);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const source = `\n        float ${funcName}() {\n          int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, offset_${name});\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 1D snippet.\n   */\n  protected getUnpackedSampler1D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const tNumR = inputLayout.width;\n    const tNumC = inputLayout.height;\n\n    if (tNumC === 1 && tNumR === 1) {\n      const source = `\n        float ${funcName}(int index) {\n          return sampleTexture(${name}, halfCR);\n        }\n      `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    if (tNumC === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2((float(index) + 0.5) / ${tNumR}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    if (tNumR === 1) {\n      const source = `\n          float ${funcName}(int index) {\n            vec2 uv = vec2(0.5, (float(index) + 0.5) / ${tNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n    const source = `\n        float ${funcName}(int index) {\n          vec2 uv = uvFromFlat(${tNumR}, ${tNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 2D snippet.\n   */\n\n  protected getUnpackedSampler2D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n\n    // TODO: modify row/col order for other dimensions.\n    const texShape = [inputLayout.height, inputLayout.width];\n\n    if (texShape != null && ArrayUtil.arraysEqual(shape, texShape)) {\n      const texNumR = texShape[1];\n      const texNumC = texShape[0];\n      const source = `\n          float ${funcName}(int row, int col) {\n            vec2 uv = (vec2(row, col) + halfCR) / vec2(${texNumR}.0, ${texNumC}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const params = ['col', 'row'];\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture']);\n    }\n\n    const texNumR = texShape[1];\n    const texNumC = texShape[0];\n    if (texNumC === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2(0.5, (index + 0.5) / ${texNumR}.0);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    if (texNumR === 1) {\n      const source = `\n          float ${funcName}(int row, int col) {\n            int offset_${name} = coordsToOffset(TexCoords, ${texNumR}, ${texNumC});\n            float index = dot(vec3(row, col, offset_${name}), vec3(${shape[1]}, 1, 1));\n            vec2 uv = vec2((index + 0.5) / ${texNumC}.0, 0.5);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    }\n\n    const source = `\n        float ${funcName}(int row, int col) {\n          int index = col * ${shape[1]} + row;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 3D snippet.\n   */\n\n  protected getUnpackedSampler3D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride0 = shape[1] * shape[2];\n    const stride1 = shape[2];\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    const squeezedShape = newShape;\n    if (squeezedShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, squeezedShape);\n      const params = ['batch', 'col', 'row'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n      const routine = this.getUnpackedSamplerFromInput(funcName, name, newInputLayout);\n      // TODO: revisit the logic here to make it simpler\n      const revDims = keptDims.reverse();\n      const source = `\n          ${routine.routineBody}\n          float ${funcName}(int batch, int row, int col) {\n            return ${funcName}(${getSqueezedParams(params, revDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, routine.dependencies);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int depth, int row, int col) {\n            // Explicitly use integer operations as dot() only works on floats.\n            int index = depth * ${stride0} + col * ${stride1} + row;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n      `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * Unpacked 4D snippet.\n   */\n\n  protected getUnpackedSampler4D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride2 = shape[3];\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    //\n    // TODO: re-enable this shortcut once the index calculation bug is fixed.\n    //\n    // const {newShape, keptDims} = squeezeShape(shape as number[]);\n    // if (newShape.length < shape.length) {\n    //   const newInputShape = squeezeInputShape(shape, newShape);\n    //   const params = ['row', 'col', 'depth', 'depth2'];\n    //   // Deep copy of input texture layout.\n    //   const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n    //   newInputLayout.unpackedShape = newInputShape;\n    //   const source = `\n    //       ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n    //       float ${funcName}(int row, int col, int depth, int depth2) {\n    //         return ${funcName}(${getSqueezedParams(params, keptDims)});\n    //       }\n    //     `;\n    //   return new GlslLibRoutine(\n    //       source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n    // }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2) {\n          int index = row * ${stride0} + col * ${stride1} +\n              depth2 * ${stride2} + depth;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture']);\n  }\n\n  /**\n   * Unpacked 5D snippet.\n   */\n  protected getUnpackedSampler5D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride3 = shape[4];\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n          ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n          float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n            return ${funcName}(${getSqueezedParams(params, keptDims)});\n          }\n        `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n        float ${funcName}(int row, int col, int depth, int depth2, int depth3) {\n          int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n          depth3 * ${stride3} + depth2;\n          vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n          return sampleTexture(${name}, uv);\n        }\n      `;\n    return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n  }\n\n  /**\n   * Unpacked 6D snippet.\n   */\n  protected getUnpackedSampler6D(funcName: string, name: string, inputLayout: TextureLayout): GlslLibRoutine {\n    const shape = inputLayout.unpackedShape;\n    const stride4 = shape[5];\n    const stride3 = shape[4] * stride4;\n    const stride2 = shape[3] * stride3;\n    const stride1 = shape[2] * stride2;\n    const stride0 = shape[1] * stride1;\n\n    const {newShape, keptDims} = squeezeShape(shape as number[]);\n    if (newShape.length < shape.length) {\n      const newInputShape = squeezeInputShape(shape, newShape);\n      const params = ['row', 'col', 'depth', 'depth2', 'depth3', 'depth4'];\n      // Deep copy of input texture layout.\n      const newInputLayout: TextureLayout = JSON.parse(JSON.stringify(inputLayout));\n      newInputLayout.unpackedShape = newInputShape;\n\n      const source = `\n            ${this.getUnpackedSamplerFromInput(funcName, name, newInputLayout).routineBody}\n            float ${funcName}(int row, int col, int depth,\n              int depth2, int depth3, int depth4) {\n              return ${funcName}(${getSqueezedParams(params, keptDims)});\n            }\n          `;\n      return new GlslLibRoutine(source, ['coordinates.sampleTexture', 'coordinates.uvFromFlat']);\n    }\n\n    const texNumR = inputLayout.width;\n    const texNumC = inputLayout.height;\n    const source = `\n          float ${funcName}(int row, int col, int depth,\n            int depth2, int depth3, int depth4) {\n            int index = row * ${stride0} + col * ${stride1} + depth * ${stride2} +\n            depth2 * ${stride3} + depth3 * ${stride4} + depth4;\n            vec2 uv = uvFromFlat(${texNumR}, ${texNumC}, index);\n            return sampleTexture(${name}, uv);\n          }\n        `;\n    return new GlslLibRoutine(\n        source, ['coordinates.uvFromFlat', 'coordinates.sampleTexture', 'coordinates.coordsToOffset']);\n  }\n\n  /**\n   * This is the main function to map from the given texture coordiantes (s,t)\n   * to logical indices for the output\n   * There will only be one single variation of this\n   * Also see coordsToOffset and offsetToIndices for input-specific versions\n   */\n  protected toVec(): {[name: string]: GlslLibRoutine} {\n    const output = this.context.outputTextureLayout;\n    const rank = output.shape.length;\n    const strides = output.strides;\n    const xScale = output.width;\n    const yScale = output.height;\n\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n        c[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= c[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n        c[${rank - 1}] = offset;`);\n    const body = `\n      void toVec(vec2 texCoords, out int c[${rank}]) {\n        int offset = coordsToOffset(texCoords, ${xScale}, ${yScale});\n        ${stridesBlock.join('')}\n      }\n      void toVec(int offset, out int c[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n    `;\n    return {toVec: new GlslLibRoutine(body, ['coordinates.coordsToOffset'])};\n  }\n  /**\n   * These are value getter functions generated for each input\n   * Each function is hardwired to the name and dimensions of the input\n   * An '_T' variation is also produced which accesses values as if the\n   * input was transposed\n   */\n  protected valueFrom(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const layout = this.context.inputTextureLayouts[i];\n      const shape = layout.unpackedShape.length > 0 ? layout.unpackedShape : layout.shape;\n      const rank = shape.length;\n      let funcName = `_${name}`;\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, false),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n      funcName = funcName + '_T';\n      result[funcName] = new GlslLibRoutine(\n          this.getValueFromSingle(name, rank, layout.width, layout.height, true),\n          [`shapeUtils.indicesToOffset${funcName}`, 'coordinates.offsetToCoords', 'fragcolor.getColorAsFloat']);\n    });\n    return result;\n  }\n  /**\n   * Produces one value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getValueFromSingle(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        float ${name}(int m[${rank}]) {\n          int offset = indicesToOffset${name}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          float value = getColorAsFloat(${glsl.texture2D}(${varName}, coords));\n          return value;\n        }\n        `;\n  }\n\n  /**\n   * Produces a packed value getter function for the name and rank given\n   * If a transpose is set proper offsetToCoords mapping will be used\n   * @param name name of the function\n   * @param rank rank of the input\n   * @param transpose whether or not should generate a transpose variation\n   */\n  protected getPackedValueFrom(varName: string, rank: number, width: number, height: number, transpose: boolean):\n      string {\n    let name = `_${varName}_Pack`;\n    if (transpose) {\n      name = name + '_T';\n    }\n    const glsl = getGlsl(this.context.glContext.version);\n    return `\n        vec4 ${name}(int m[${rank}]) {\n          int offset = indicesToOffset_${varName}(m);\n          vec2 coords = offsetToCoords(offset, ${width}, ${height});\n          return ${glsl.texture2D}(${varName}, coords);\n        }\n        `;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ProgramInfo, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/* eslint-disable @typescript-eslint/naming-convention */\nexport enum FunctionType {\n  ValueBased,\n  Positional\n}\nexport interface GlslFunction<T extends FunctionType> {\n  body: string;\n  name: string;\n  type: T;\n}\nexport type GlslValueFunction = GlslFunction<FunctionType.ValueBased>;\nexport interface GlslPositionalFunction extends GlslFunction<FunctionType.Positional> {\n  inputShape: readonly number[];\n  outputShape: readonly number[];\n}\n\nexport class GlslContext {\n  constructor(\n      public glContext: WebGLContext, public programInfo: ProgramInfo, public inputTextureLayouts: TextureLayout[],\n      public outputTextureLayout: TextureLayout) {}\n}\nexport abstract class GlslLib {\n  constructor(public context: GlslContext) {}\n  abstract getFunctions(): {[name: string]: GlslLibRoutine};\n  abstract getCustomTypes(): {[name: string]: string};\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies\nexport class GlslLibRoutine {\n  constructor(public routineBody: string, public dependencies?: string[]) {}\n}\n\n// abstraction to represent a GLSL library routine and it's dependencies AS GRAPH Nodes\n// this level of abstraction is used to topologically sort routines before fragment shade inclusion\nexport class GlslLibRoutineNode {\n  dependencies: GlslLibRoutineNode[];\n  routineBody: string;\n  constructor(public name: string, routineBody?: string, dependencies?: GlslLibRoutineNode[]) {\n    if (dependencies) {\n      this.dependencies = dependencies;\n    } else {\n      this.dependencies = [];\n    }\n\n    if (routineBody) {\n      this.routineBody = routineBody;\n    }\n  }\n  addDependency(node: GlslLibRoutineNode) {\n    if (node) {\n      this.dependencies.push(node);\n    }\n  }\n}\n\n// topologically sort GLSL library routines (graph nodes abstraction) before shader script inclusion\nexport class TopologicalSortGlslRoutines {\n  static returnOrderedNodes(nodes: GlslLibRoutineNode[]): GlslLibRoutineNode[] {\n    if (!nodes || nodes.length === 0) {\n      return [];\n    }\n\n    if (nodes.length === 1) {\n      return nodes;\n    }\n\n    const cycleCheck = new Set<string>();\n    const alreadyTraversed = new Set<string>();\n    const result = new Array<GlslLibRoutineNode>();\n\n    this.createOrderedNodes(nodes, cycleCheck, alreadyTraversed, result);\n    return result;\n  }\n\n  private static createOrderedNodes(\n      graphNodes: GlslLibRoutineNode[], cycleCheck: Set<string>, alreadyTraversed: Set<string>,\n      result: GlslLibRoutineNode[]) {\n    for (let i = 0; i < graphNodes.length; ++i) {\n      this.dfsTraverse(graphNodes[i], cycleCheck, alreadyTraversed, result);\n    }\n  }\n\n  private static dfsTraverse(\n      root: GlslLibRoutineNode, cycleCheck: Set<string>, alreadyTraversed: Set<string>, result: GlslLibRoutineNode[]) {\n    // if this root has already been traversed return\n    if (!root || alreadyTraversed.has(root.name)) {\n      return;\n    }\n\n    // cyclic dependency has been detected\n    if (cycleCheck.has(root.name)) {\n      throw new Error('Cyclic dependency detected. Can\\'t topologically sort routines needed for shader.');\n    }\n\n    // hold this node to detect cycles if any\n    cycleCheck.add(root.name);\n\n    // traverse children in a dfs fashion\n    const dependencies = root.dependencies;\n    if (dependencies && dependencies.length > 0) {\n      for (let i = 0; i < dependencies.length; ++i) {\n        this.dfsTraverse(dependencies[i], cycleCheck, alreadyTraversed, result);\n      }\n    }\n\n    // add to result holder\n    result.push(root);\n\n    // mark this node as traversed so that we don't traverse from this again\n    alreadyTraversed.add(root.name);\n\n    // release the hold\n    cycleCheck.delete(root.name);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * This GLSL library handles routines converting\n * float32 to/from Unsigned byte or float 16\n */\nexport class EncodingGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.encodeFloat32(), ...this.decodeFloat32()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected encodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      encode: new GlslLibRoutine(`highp vec4 encode(highp float f) {\n        return vec4(f, 0.0, 0.0, 0.0);\n      }\n        `)\n    };\n  }\n  protected decodeFloat32(): {[name: string]: GlslLibRoutine} {\n    return {\n      decode: new GlslLibRoutine(`highp float decode(highp vec4 rgba) {\n        return rgba.r;\n      }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode encode a 32bit float to a vec4 (of unsigned bytes)\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected encodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      encode: new GlslLibRoutine(`\n      highp vec4 encode(highp float f) {\n        highp float F = abs(f);\n        highp float Sign = step(0.0,-f);\n        highp float Exponent = floor(log2(F));\n        highp float Mantissa = (exp2(- Exponent) * F);\n        Exponent = floor(log2(F) + 127.0) + floor(log2(Mantissa));\n        highp vec4 rgba;\n        rgba[0] = 128.0 * Sign  + floor(Exponent*exp2(-1.0));\n        rgba[1] = 128.0 * mod(Exponent,2.0) + mod(floor(Mantissa*128.0),128.0);\n        rgba[2] = floor(mod(floor(Mantissa*exp2(23.0 -8.0)),exp2(8.0)));\n        rgba[3] = floor(exp2(23.0)*mod(Mantissa,exp2(-15.0)));\n        ${endianness}\n        rgba = rgba / 255.0; // values need to be normalized to [0,1]\n        return rgba;\n    }\n        `)\n    };\n  }\n  /**\n   * returns the routine to encode a vec4 of unsigned bytes to float32\n   * @credit: https://stackoverflow.com/questions/7059962/how-do-i-convert-a-vec4-rgba-value-to-a-float\n   */\n  protected decodeUint8(): {[name: string]: GlslLibRoutine} {\n    const endianness = EncodingGlslLib.isLittleEndian() ? 'rgba.rgba=rgba.abgr;' : '';\n    return {\n      decode: new GlslLibRoutine(`\n        highp float decode(highp vec4 rgba) {\n          rgba = rgba * 255.0; // values need to be de-normalized from [0,1] to [0,255]\n          ${endianness}\n          highp float Sign = 1.0 - step(128.0,rgba[0])*2.0;\n          highp float Exponent = 2.0 * mod(rgba[0],128.0) + step(128.0,rgba[1]) - 127.0;\n          highp float Mantissa = mod(rgba[1],128.0)*65536.0 + rgba[2]*256.0 +rgba[3] + float(0x800000);\n          highp float Result =  Sign * exp2(Exponent) * (Mantissa * exp2(-23.0 ));\n          return Result;\n      }\n        `)\n    };\n  }\n  /**\n   * Determines if the machine is little endian or not\n   * @credit: https://gist.github.com/TooTallNate/4750953\n   */\n  static isLittleEndian(): boolean {\n    const b = new ArrayBuffer(4);\n    const a = new Uint32Array(b);\n    const c = new Uint8Array(b);\n    a[0] = 0xdeadbeef;\n    if (c[0] === 0xef) {\n      return true;\n    }\n    if (c[0] === 0xde) {\n      return false;\n    }\n    throw new Error('unknown endianness');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\nimport {getGlsl} from './glsl-source';\n\n/**\n * This GLSL library handles routines around reading a texlet and writing to it\n * Reading and writing could be more than just dealing with one channel\n * It may require encoding/decoding to/from 4 channels into one\n */\nexport class FragColorGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.setFragColor(), ...this.getColorAsFloat()};\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  protected setFragColor(): {[name: string]: GlslLibRoutine} {\n    const glsl = getGlsl(this.context.glContext.version);\n    return {\n      setFragColor: new GlslLibRoutine(\n          `\n        void setFragColor(float value) {\n            ${glsl.output} = encode(value);\n        }\n        `,\n          ['encoding.encode'])\n    };\n  }\n  protected getColorAsFloat(): {[name: string]: GlslLibRoutine} {\n    return {\n      getColorAsFloat: new GlslLibRoutine(\n          `\n        float getColorAsFloat(vec4 color) {\n            return decode(color);\n        }\n        `,\n          ['encoding.decode'])\n    };\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nconst INLINE_FUNC_DEF_REGEX = /@inline[\\s\\n\\r]+(\\w+)[\\s\\n\\r]+([0-9a-zA-Z_]+)\\s*\\(([^)]*)\\)\\s*{(([^}]|[\\n\\r])*)}/gm;\nconst FUNC_CALL_REGEX = '(\\\\w+)?\\\\s+([_0-9a-zA-Z]+)\\\\s+=\\\\s+__FUNC__\\\\((.*)\\\\)\\\\s*;';\n/**\n * GLSL preprocessor responsible for resolving @inline directives\n */\nexport function replaceInlines(script: string): string {\n  const inlineDefs: {[name: string]: {params: Array<{type: string; name: string}|null>; body: string}} = {};\n  let match;\n  while ((match = INLINE_FUNC_DEF_REGEX.exec(script)) !== null) {\n    const params = match[3]\n                       .split(',')\n                       .map(s => {\n                         const tokens = s.trim().split(' ');\n                         if (tokens && tokens.length === 2) {\n                           return {type: tokens[0], name: tokens[1]};\n                         }\n                         return null;\n                       })\n                       .filter(v => v !== null);\n    inlineDefs[match[2]] = {params, body: match[4]};\n  }\n  for (const name in inlineDefs) {\n    const regexString = FUNC_CALL_REGEX.replace('__FUNC__', name);\n    const regex = new RegExp(regexString, 'gm');\n    while ((match = regex.exec(script)) !== null) {\n      const type = match[1];\n      const variable = match[2];\n      const params = match[3].split(',');\n      const declLine = (type) ? `${type} ${variable};` : '';\n      let newBody: string = inlineDefs[name].body;\n      let paramRedecLine = '';\n      inlineDefs[name].params.forEach((v, i) => {\n        if (v) {\n          paramRedecLine += `${v.type} ${v.name} = ${params[i]};\\n`;\n        }\n      });\n      newBody = `${paramRedecLine}\\n ${newBody}`;\n      newBody = newBody.replace('return', `${variable} = `);\n      const replacement = `\n      ${declLine}\n      {\n        ${newBody}\n      }\n      `;\n      script = script.replace(match[0], replacement);\n    }\n  }\n  script = script.replace(INLINE_FUNC_DEF_REGEX, '');\n  return script;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutineNode, TopologicalSortGlslRoutines} from './glsl-definitions';\nimport {replaceInlines} from './glsl-function-inliner';\nimport {glslRegistry} from './glsl-registered-libs';\nimport {getDefaultFragShaderMain, getFragShaderPreamble} from './glsl-source';\nimport {ProgramInfo, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * Preprocessor for the additions to the GLSL language\n * It deals with:\n *  @include directives\n *  @inline\n *  Loop unrolling (not implemented)\n *  Macro resolution (not implemented)\n */\nexport class GlslPreprocessor {\n  readonly context: GlslContext;\n  readonly libs: {[name: string]: GlslLib} = {};\n  readonly glslLibRoutineDependencyGraph: {[routineName: string]: GlslLibRoutineNode} = {};\n\n  constructor(\n      glContext: WebGLContext, programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[],\n      outputTextureLayout: TextureLayout) {\n    this.context = new GlslContext(glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n\n    // construct GlslLibs\n    Object.keys(glslRegistry).forEach((name: string) => {\n      const lib = new glslRegistry[name](this.context);\n      this.libs[name] = lib;\n    });\n\n    // construct GlslRoutineDependencyGraph\n    const map = this.glslLibRoutineDependencyGraph;\n    for (const libName in this.libs) {\n      const lib = this.libs[libName];\n      const routinesInLib = lib.getFunctions();\n      for (const routine in routinesInLib) {\n        const key = libName + '.' + routine;\n        let currentNode: GlslLibRoutineNode;\n        if (map[key]) {\n          currentNode = map[key];\n          currentNode.routineBody = routinesInLib[routine].routineBody;\n        } else {\n          currentNode = new GlslLibRoutineNode(key, routinesInLib[routine].routineBody);\n          map[key] = currentNode;\n        }\n        const dependencies = routinesInLib[routine].dependencies;\n        if (dependencies) {\n          for (let i = 0; i < dependencies.length; ++i) {\n            if (!map[dependencies[i]]) {\n              const node = new GlslLibRoutineNode(dependencies[i]);\n              map[dependencies[i]] = node;\n              currentNode.addDependency(node);\n            } else {\n              currentNode.addDependency(map[dependencies[i]]);\n            }\n          }\n        }\n      }\n    }\n  }\n\n  preprocess(): string {\n    const programInfo = this.context.programInfo;\n    let source = programInfo.shaderSource;\n\n    // append main() function\n    if (!this.context.programInfo.hasMain) {\n      source = `${source}\n      ${getDefaultFragShaderMain(this.context.glContext.version, this.context.outputTextureLayout.shape.length)}`;\n    }\n    // replace inlines\n    source = replaceInlines(source);\n\n    // concat final source string\n    return `${getFragShaderPreamble(this.context.glContext.version)}\n    ${this.getUniforms(programInfo.inputNames, programInfo.variables)}\n    ${this.getImports(source)}\n    ${source}`;\n  }\n\n  protected getImports(script: string): string {\n    const routinesIncluded = this.selectGlslLibRoutinesToBeIncluded(script);\n\n    if (routinesIncluded.length === 0) {\n      return '';\n    }\n\n    let routines = '';\n    for (let i = 0; i < routinesIncluded.length; ++i) {\n      if (routinesIncluded[i].routineBody) {\n        routines += routinesIncluded[i].routineBody + '\\n';\n      } else {\n        throw new Error(`Missing body for the Glsl Library routine: ${routinesIncluded[i].name}`);\n      }\n    }\n\n    return routines;\n  }\n  private selectGlslLibRoutinesToBeIncluded(script: string): GlslLibRoutineNode[] {\n    const nodes: GlslLibRoutineNode[] = [];\n\n    Object.keys(this.glslLibRoutineDependencyGraph).forEach(classAndRoutine => {\n      const routine = classAndRoutine.split('.')[1];\n      if (script.indexOf(routine) !== -1) {\n        nodes.push(this.glslLibRoutineDependencyGraph[classAndRoutine]);\n      }\n    });\n\n    return TopologicalSortGlslRoutines.returnOrderedNodes(nodes);\n  }\n\n  protected getUniforms(samplers?: string[], variables?: VariableInfo[]): string {\n    const uniformLines: string[] = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLines.push(`uniform sampler2D ${sampler};`);\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLines.push(\n            `uniform ${variable.type} ${variable.name}${variable.arrayLength ? `[${variable.arrayLength}]` : ''};`);\n      }\n    }\n    return uniformLines.join('\\n');\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {CoordsGlslLib} from './glsl-coordinate-lib';\nimport {GlslContext, GlslLib} from './glsl-definitions';\nimport {EncodingGlslLib} from './glsl-encoding-lib';\nimport {FragColorGlslLib} from './glsl-fragcolor-lib';\nimport {ShapeUtilsGlslLib} from './glsl-shape-utils-lib';\nimport {VecGlslLib} from './glsl-vec-lib';\n\nexport const glslRegistry: {[name: string]: new (context: GlslContext) => GlslLib} = {\n  'encoding': EncodingGlslLib,\n  'fragcolor': FragColorGlslLib,\n  'vec': VecGlslLib,\n  'shapeUtils': ShapeUtilsGlslLib,\n  'coordinates': CoordsGlslLib,\n  //  'arrays': ArrayGlslSLib\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for data types and routines for manipulating\n * coordinates and mapping to/from tensor indices\n */\nexport class ShapeUtilsGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {\n      ...this.bcastIndex(),\n      ...this.bcastMatmulIndex(),\n      ...this.offsetToIndices(),\n      ...this.indicesToOffset(),\n      ...this.incrementIndices()\n    };\n  }\n  getCustomTypes() {\n    return {};\n  }\n  protected bcastIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].unpackedShape;\n      if (shape.length <= outputRank) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName} (int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected bcastMatmulIndex(): {[name: string]: GlslLibRoutine} {\n    const outputRank = this.context.outputTextureLayout.shape.length;\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      if (!(shape.length < 2 || shape.length > outputRank)) {\n        const rank = shape.length;\n        const dimOffset = outputRank - rank;\n        const funcName = `bcastMatmulIndices_${name}`;\n        let block = '';\n        for (let i = 0; i < rank - 2; ++i) {\n          block += `\n          realIndices[${i}] = int( mod(float(bcastedIndices[${dimOffset + i}]), ${shape[i]}.0) );\n          `;\n        }\n        const body = `\n        void ${funcName}(int bcastedIndices[${outputRank}], out int realIndices[${rank}]) {\n          ${block}\n          realIndices[${rank - 1}] = bcastedIndices[${outputRank - 1}];\n          realIndices[${rank - 2}] = bcastedIndices[${outputRank - 2}];\n        }\n        `;\n        result[funcName] = new GlslLibRoutine(body);\n      }\n    });\n    return result;\n  }\n  protected indicesToOffset(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `indicesToOffset_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides));\n      funcName = `indicesToOffset_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.indexToOffsetSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static indexToOffsetSingle(name: string, rank: number, strides: readonly number[]): string {\n    let block = '';\n    for (let i = rank - 1; i >= 0; --i) {\n      block += `\n        offset += indices[${i}] * ${strides[i]};\n        `;\n    }\n    return `\n      int ${name}(int indices[${rank}]) {\n        int offset = 0;\n        ${block}\n        return offset;\n      }\n      `;\n  }\n  protected offsetToIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const strides = this.context.inputTextureLayouts[i].strides;\n      const rank = shape.length;\n      let funcName = `offsetToIndices_${name}`;\n      result[funcName] = new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides));\n      funcName = `offsetToIndices_${name}_T`;\n      result[funcName] =\n          new GlslLibRoutine(ShapeUtilsGlslLib.offsetToIndicesSingle(funcName, rank, strides.slice().reverse()));\n    });\n    return result;\n  }\n  static offsetToIndicesSingle(name: string, rank: number, strides: readonly number[]): string {\n    const stridesBlock = [];\n    for (let i = 0; i < rank - 1; ++i) {\n      stridesBlock.push(`\n      indices[${i}] = offset / ${strides[i]};`);\n      stridesBlock.push(`\n        offset -= indices[${i}] * ${strides[i]};`);\n    }\n    stridesBlock.push(`\n      indices[${rank - 1}] = offset;`);\n    return `\n      void ${name}(int offset, out int indices[${rank}]) {\n        ${stridesBlock.join('')}\n      }\n      `;\n  }\n  protected incrementIndices(): {[name: string]: GlslLibRoutine} {\n    const result: {[name: string]: GlslLibRoutine} = {};\n    this.context.programInfo.inputNames.forEach((name, i) => {\n      const shape = this.context.inputTextureLayouts[i].shape;\n      const rank = shape.length;\n      const funcName = `incrementIndices_${name}`;\n      let shapeInit = '';\n      for (let i = 0; i < rank; ++i) {\n        shapeInit += `\n        shape[${i}] = ${shape[i]};`;\n      }\n      const body = `\n        void ${funcName}(int axis, out int indices[${rank}]) {\n          int shape[${rank}];\n          ${shapeInit};\n          for(int i = ${rank} -1 ; i >= 0; --i) {\n            if(i > axis) continue;\n            indices[i] += 1;\n            if(indices[i] < shape[i]) {\n              break;\n            }\n            indices[i] = 0;\n          }\n        }\n        `;\n      result[funcName] = new GlslLibRoutine(body);\n    });\n    return result;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\n/**\n * represent a version irrelevant abstraction of for GLSL source code\n */\nexport interface Glsl {\n  readonly version: string;\n  readonly attribute: string;\n  readonly varyingVertex: string;\n  readonly varyingFrag: string;\n  readonly texture2D: string;\n  readonly output: string;\n  readonly outputDeclaration: string;\n}\n\nconst GLSL_ES_2_0: Glsl = {\n  version: '',\n  attribute: 'attribute',\n  varyingVertex: 'varying',\n  varyingFrag: 'varying',\n  texture2D: 'texture2D',\n  output: 'gl_FragColor',\n  outputDeclaration: '',\n};\nconst GLSL_ES_3_0: Glsl = {\n  version: '#version 300 es',\n  attribute: 'in',\n  varyingVertex: 'out',\n  varyingFrag: 'in',\n  texture2D: 'texture',\n  output: 'outputColor',\n  outputDeclaration: 'out vec4 outputColor;',\n};\n\nexport function getGlsl(version: 1|2) {\n  return version === 1 ? GLSL_ES_2_0 : GLSL_ES_3_0;\n}\n\nexport function getVertexShaderSource(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n      precision highp float;\n      ${glsl.attribute} vec3 position;\n      ${glsl.attribute} vec2 textureCoord;\n\n      ${glsl.varyingVertex} vec2 TexCoords;\n\n      void main()\n      {\n          gl_Position = vec4(position, 1.0);\n          TexCoords = textureCoord;\n      }`;\n}\n\nexport function getFragShaderPreamble(version: 1|2): string {\n  const glsl = getGlsl(version);\n  return `${glsl.version}\n    precision highp float;\n    precision highp int;\n    precision highp sampler2D;\n    ${glsl.varyingFrag} vec2 TexCoords;\n    ${glsl.outputDeclaration}\n    const vec2 halfCR = vec2(0.5, 0.5);\n\n    // Custom vector types to handle higher dimenalities.\n    struct ivec5\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n    };\n\n    struct ivec6\n    {\n      int x;\n      int y;\n      int z;\n      int w;\n      int u;\n      int v;\n    };\n\n    int imod(int x, int y) {\n      return x - y * (x / y);\n    }\n\n    `;\n}\n\nexport function getDefaultFragShaderMain(version: 1|2, outputShapeLength: number): string {\n  const glsl = getGlsl(version);\n  return `\n  void main() {\n    int indices[${outputShapeLength}];\n    toVec(TexCoords, indices);\n    vec4 result = vec4(process(indices));\n    ${glsl.output} = result;\n  }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {GlslContext, GlslLib, GlslLibRoutine} from './glsl-definitions';\n\n/**\n * GLSL Library responsible for vec routines\n * Vec is an varible length int array. The length is fixed at the time of\n * generating the library functions from the dimensions of the output.\n */\nexport class VecGlslLib extends GlslLib {\n  constructor(context: GlslContext) {\n    super(context);\n  }\n  getCustomTypes(): {[name: string]: string} {\n    return {};\n  }\n  getFunctions(): {[name: string]: GlslLibRoutine} {\n    return {...this.binaryVecFunctions(), ...this.copyVec(), ...this.setVecItem(), ...this.getVecItem()};\n  }\n  protected binaryVecFunctions(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    const nameOp: {[name: string]: string} = {add: '+=', sub: '-=', mul: '*=', div: '/='};\n    const result: {[name: string]: GlslLibRoutine} = {};\n    for (const name in nameOp) {\n      const fname = `${name}Vec`;\n      let assignmentBlock = '';\n      for (let i = 0; i < rank; ++i) {\n        assignmentBlock += `\n          dest[${i}] ${nameOp[name]} src[${i}];\n          `;\n      }\n      const body = `\n        void ${fname}(int src[${rank}], out int dest[${rank}]) {\n          ${assignmentBlock}\n        }\n        `;\n      result[fname] = new GlslLibRoutine(body);\n    }\n\n    return result;\n  }\n  protected copyVec(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let assignmentBlock = '';\n    for (let i = 0; i < rank; ++i) {\n      assignmentBlock += `\n        dest[${i}] = src[${i}];\n        `;\n    }\n    const body = `\n      void copyVec(int src[${rank}], out int dest[${rank}]) {\n        ${assignmentBlock}\n      }\n      `;\n    return {copyVec: new GlslLibRoutine(body)};\n  }\n\n  protected setVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index =${rank} + index;\n        if (index == 0)\n            m[0] = value;\n        `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            m[${i}] = value;\n            `;\n    }\n    block += `\n        else\n            m[${rank - 1}] = value;\n        `;\n    const body = `\n      void setVecItem(out int m[${rank}], int index, int value) {\n        ${block}\n      }\n        `;\n    return {setVecItem: new GlslLibRoutine(body)};\n  }\n  protected getVecItem(): {[name: string]: GlslLibRoutine} {\n    const outputLayout = this.context.outputTextureLayout;\n    const rank = outputLayout.shape.length;\n    let block = `\n        if(index < 0)\n            index = ${rank} + index;\n        if (index == 0)\n            return m[0];\n      `;\n    for (let i = 1; i < rank - 1; ++i) {\n      block += `\n        else if (index == ${i})\n            return m[${i}];\n      `;\n    }\n    block += `\n        else\n            return m[${rank - 1}];\n        `;\n    const body = `\n      int getVecItem(int m[${rank}], int index) {\n        ${block}\n      }\n    `;\n    return {getVecItem: new GlslLibRoutine(body)};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from '../../backend';\nimport {Logger} from '../../instrument';\nimport {Tensor} from '../../tensor';\nimport {ShapeUtil} from '../../util';\nimport {createPackProgramInfoLoader} from './ops/pack';\nimport {createPackedReshape3DProgramInfoLoader, isReshapeCheap, processDims3D} from './ops/reshape-packed';\n\nimport {encodeAsUint8} from './ops/uint8-encode';\nimport {createUnpackProgramInfoLoader} from './ops/unpack';\nimport {WebGLSessionHandler} from './session-handler';\nimport {Encoder} from './texture-data-encoder';\nimport {calculateTextureWidthAndHeight, createTextureLayoutFromShape, createTextureLayoutFromTextureType} from './texture-layout';\nimport {Artifact, ProgramInfo, ProgramInfoLoader, TextureData, TextureLayout, TextureType} from './types';\n\nconst getProgramInfoUniqueKey =\n    (programInfo: ProgramInfo|ProgramInfoLoader, inputTextureDatas: TextureData[]): string => {\n      const inputs =\n          inputTextureDatas.map(texture => `${texture.unpackedShape.join(',')};${texture.width}x${texture.height}`)\n              .join('_');\n      let key = programInfo.name;\n      if (programInfo.cacheHint) {\n        key += '[' + programInfo.cacheHint + ']';\n      }\n      key += ':' + inputs;\n      return key;\n    };\n\nexport class WebGLInferenceHandler implements InferenceHandler {\n  private packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  private unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  constructor(public session: WebGLSessionHandler) {\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  /**\n   * @returns [width, height]\n   */\n  calculateTextureWidthAndHeight(shape: readonly number[], textureType: TextureType): [number, number] {\n    return calculateTextureWidthAndHeight(this.session.layoutStrategy, shape, textureType);\n  }\n\n  executeProgram(program: ProgramInfo|ProgramInfoLoader, inputs: readonly Tensor[]): TextureData {\n    if (inputs.length < program.inputNames.length) {\n      throw new Error(`Input size mustn't be less than ${program.inputNames.length}.`);\n    }\n    if (program.inputNames.length !== program.inputTypes.length) {\n      throw new Error('input names size does not match input types');\n    }\n\n    // create texture info for input\n    const inputTextureDatas: TextureData[] = [];\n    for (let i = 0; i < program.inputNames.length; ++i) {\n      inputTextureDatas[i] = this.getOrCreateTextureData(inputs[i], program.inputTypes[i]);\n    }\n\n    const key = getProgramInfoUniqueKey(program, inputTextureDatas);\n    let artifact = this.session.programManager.getArtifact(key);\n    const programInfo = artifact ?\n        artifact.programInfo :\n        (typeof (program as ProgramInfoLoader).get === 'function' ? (program as ProgramInfoLoader).get() :\n                                                                    (program as ProgramInfo));\n\n    // create texture info for output\n    const outputTextureLayout = createTextureLayoutFromTextureType(\n        this.session.layoutStrategy, programInfo.output.dims, programInfo.output.textureType);\n    const outputTextureData = this.createTextureData(outputTextureLayout, programInfo.output.type);\n\n    if (!artifact) {\n      artifact = this.session.programManager.build(programInfo, inputTextureDatas, outputTextureData);\n      this.session.programManager.setArtifact(key, artifact);\n    }\n\n    this.runProgram(artifact, inputTextureDatas, outputTextureData);\n    return outputTextureData;\n  }\n\n  run(program: ProgramInfoLoader, inputs: readonly Tensor[]): Tensor {\n    const outputTextureData = this.executeProgram(program, inputs);\n    return outputTextureData.tensor;\n  }\n\n  private runProgram(artifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    // input should match\n    for (let i = 0; i < inputs.length; ++i) {\n      if (!!inputs[i].isPacked !== (artifact.programInfo.inputTypes[i] === TextureType.packed)) {\n        throw new Error(`input[${i}] property packed inconsistent`);\n      }\n    }\n\n    // output should match\n    if (!!output.isPacked !== (artifact.programInfo.output.textureType === TextureType.packed)) {\n      throw new Error('output property packed inconsistent');\n    }\n\n    this.session.programManager.run(artifact, inputs, output);\n  }\n\n  /**\n   * Create a TextureData object from a tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * If a related texture data is found in cache, returns it;\n   * Otherwise:\n   *   Creates a new texture layout if not provided;\n   *   Creates WebGLTexture with the layout;\n   *   Upload tensor data to the texture;\n   *   Creates a texture data object associated with the given tensor.\n   * @param tensor the tensor with data to upload\n   */\n  private getOrCreateTextureData(tensor: Tensor, textureType: TextureType) {\n    let td = this.getTextureData(tensor.dataId, textureType === TextureType.packed);\n\n    if (!td) {\n      // check if we have texture data in different type\n      td = this.getTextureData(tensor.dataId, textureType !== TextureType.packed);\n      if (td) {\n        if (textureType === TextureType.packed) {\n          return this.pack(td);\n        } else {\n          return this.unpack(td);\n        }\n      }\n    }\n\n    if (!td) {\n      const layout = createTextureLayoutFromTextureType(this.session.layoutStrategy, tensor.dims, textureType);\n\n      if (textureType === TextureType.packedLastDimension) {\n        const group = 1;\n        const channels = 4;\n        const shape = tensor.dims;\n        if (shape.length === 4) {\n          // pre-processing for kernel data of Conv.\n          //\n          // TODO: currently this is a hacking to overwrite Conv's weight. The correct way to do this should be:\n          // 1. implement texture based const-folding\n          // 2. create a WebGL program \"preprocessConvWeight\" to do the same work as below\n          // 3. run the program before dotProduct.\n          //\n          const adjustedKernelShape = [shape[0], Math.ceil((shape[1] * shape[2] * shape[3]) / channels)];\n          const adjustedLayout =\n              createTextureLayoutFromTextureType(this.session.layoutStrategy, adjustedKernelShape, textureType);\n          let buffer = tensor.numberData;\n          if (shape[1] * shape[2] * shape[3] % channels !== 0) {\n            const numFeatureMaps = shape[0];\n            const oldRowSize = shape[1] * shape[2] * shape[3];\n            const newRowSize = Math.ceil(oldRowSize * group / channels) * channels;\n            const newSize = numFeatureMaps * newRowSize;\n            buffer = new Float32Array(newSize);\n            for (let f = 0; f < numFeatureMaps; ++f) {\n              const oldOffset = f * oldRowSize;\n              const newOffset = f * newRowSize + f % group * oldRowSize;\n              buffer.set(tensor.numberData.subarray(oldOffset, oldOffset + oldRowSize), newOffset);\n            }\n          }\n          return this.createTextureData(adjustedLayout, tensor.type, buffer, tensor, Encoder.Usage.UploadOnly);\n        }\n      }\n\n      if (textureType === TextureType.packed) {\n        const unpackedTextureLayout =\n            createTextureLayoutFromShape(this.session.layoutStrategy, tensor.dims, 1, [], {reverseWH: true});\n        const unpackedTextureData = this.createTextureData(\n            unpackedTextureLayout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n        td = this.pack(unpackedTextureData);\n      } else {\n        td = this.createTextureData(layout, tensor.type, tensor.numberData, tensor, Encoder.Usage.UploadOnly);\n      }\n    }\n    return td;\n  }\n\n  /**\n   * Create a TextureData object using the given data and bind to the given tensor.\n   * Usage = Encoder.Usage.UploadOnly.\n   * NOTE: this function is a hack for Conv implementation. should remove this function, after rewriting Conv\n   * implementation by Graph.Transformer\n   * @param dataType the tensor data type\n   * @param data the actual data to upload\n   * @param tensor the tensor to bind. tensor's data is ignored.\n   */\n  createTextureDataFromLayoutBindTensor(\n      layout: TextureLayout, dataType: Tensor.DataType, data: Tensor.NumberType, tensor: Tensor): TextureData {\n    return this.createTextureData(layout, dataType, data, tensor, Encoder.Usage.UploadOnly);\n  }\n\n  private createTextureData(\n      layout: TextureLayout, dataType: Tensor.DataType, data?: Tensor.NumberType, tensor?: Tensor,\n      usage?: Encoder.Usage): TextureData {\n    Logger.verbose('InferenceHandler', `Creating TextureData: layout:[${JSON.stringify(layout)}]`);\n    const texture = this.session.textureManager.createTextureFromLayout(dataType, layout, data, usage);\n    return this.createTextureDataFromTexture(layout, dataType, texture, tensor);\n  }\n\n  reshapeUnpacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.unpacked);\n    const newTextureLayout: TextureLayout = {\n      channels: inputTD.channels,\n      height: inputTD.height,\n      width: inputTD.width,\n      // handle reshaping into scalar Tensors\n      shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n      strides: ShapeUtil.computeStrides(reshapedDims),\n      unpackedShape: reshapedDims,\n    };\n    const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n    return newTextureData.tensor;\n  }\n\n  reshapePacked(input: Tensor, reshapedDims: readonly number[]): Tensor {\n    const inputTD = this.getOrCreateTextureData(input, TextureType.packed);\n\n    // check if the reshape is 'cheap'\n    if (isReshapeCheap(input.dims, reshapedDims)) {\n      const newTextureLayout: TextureLayout = {\n        channels: inputTD.channels,\n        height: inputTD.height,\n        width: inputTD.width,\n        // handle reshaping into scalar Tensors\n        shape: reshapedDims.length !== 0 ? reshapedDims : [1],\n        strides: ShapeUtil.computeStrides(reshapedDims),\n        unpackedShape: reshapedDims,\n        isPacked: true\n      };\n      const newTextureData = this.createTextureDataFromTexture(newTextureLayout, input.type, inputTD.texture);\n      return newTextureData.tensor;\n    }\n\n    const squeezedInputShape = processDims3D(input.dims);\n    const squeezedOutputShape = processDims3D(reshapedDims);\n\n    const squeezedInputTensor = this.reshapePacked(input, squeezedInputShape);\n    const squeezedOutputTensor = this.run(\n        createPackedReshape3DProgramInfoLoader(this, squeezedInputTensor, squeezedOutputShape), [squeezedInputTensor]);\n    const outputTensor = this.reshapePacked(squeezedOutputTensor, reshapedDims);\n    return outputTensor;\n  }\n\n  private createTextureDataFromTexture(\n      layout: TextureLayout, dataType: Tensor.DataType, texture: WebGLTexture, tensor?: Tensor, tensorId?: Tensor.Id) {\n    const textureData: TextureData = {\n      ...layout,\n      tensor: tensor ||\n          new Tensor(\n                  layout.unpackedShape, dataType, (_id: Tensor.Id) => this.readTexture(textureData),\n                  async (_id: Tensor.Id) => this.readTextureAsync(textureData), undefined, tensorId),\n      texture\n    };\n    this.setTextureData(textureData.tensor.dataId, textureData, layout.isPacked);\n    return textureData;\n  }\n\n  private getTextureData(tensorId: Tensor.Id, isPacked = false): TextureData|undefined {\n    return this.session.isInitializer(tensorId) ?\n        this.session.getTextureData(tensorId, isPacked) :\n        isPacked ? this.packedTextureDataCache.get(tensorId) : this.unpackedTextureDataCache.get(tensorId);\n  }\n  setTextureData(tensorId: Tensor.Id, td: TextureData, isPacked = false): void {\n    if (this.session.isInitializer(tensorId)) {\n      this.session.setTextureData(tensorId, td, isPacked);\n    } else {\n      (isPacked ? this.packedTextureDataCache : this.unpackedTextureDataCache).set(tensorId, td);\n    }\n  }\n  isTextureLayoutCached(tensor: Tensor, isPacked = false): boolean {\n    return !!this.getTextureData(tensor.dataId, isPacked);\n  }\n\n  dispose(): void {\n    this.session.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.session.textureManager.releaseTexture(td));\n    this.unpackedTextureDataCache = new Map();\n  }\n\n  readTexture(textureData: TextureData): Tensor.NumberType {\n    if (textureData.isPacked) {\n      return this.readTexture(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTexture(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  async readTextureAsync(textureData: TextureData): Promise<Tensor.NumberType> {\n    if (textureData.isPacked) {\n      return this.readTextureAsync(this.unpack(textureData));\n    }\n    if (!this.session.backend.glContext.isFloat32DownloadSupported) {\n      return this.session.textureManager.readUint8TextureAsFloat(encodeAsUint8(this, textureData));\n    }\n    return this.session.textureManager.readTextureAsync(textureData, textureData.tensor.type, textureData.channels);\n  }\n\n  pack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createPackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n\n  unpack(input: TextureData): TextureData {\n    const outputTextureData = this.executeProgram(createUnpackProgramInfoLoader(this, input.tensor), [input.tensor]);\n    return outputTextureData;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {OpSet} from '../../opset';\n\nimport {batchNormalization, parseBatchNormalizationAttributes} from './ops/batch-normalization';\nimport * as binaryOps from './ops/binary-op';\nimport {concat, parseConcatAttributes} from './ops/concat';\nimport {conv, parseConvAttributes} from './ops/conv';\nimport {depthToSpace, parseDepthToSpaceAttributes} from './ops/depth-to-space';\nimport {flatten, parseFlattenAttributes} from './ops/flatten';\nimport {gather, parseGatherAttributes} from './ops/gather';\nimport {gemm, parseGemmAttributesV11, parseGemmAttributesV7} from './ops/gemm';\nimport {imageScaler, parseImageScalerAttributes} from './ops/image-scaler';\nimport {instanceNormalization, parseInstanceNormalizationAttributes} from './ops/instance-normalization';\nimport {matMul, parseMatMulAttributes} from './ops/matmul';\nimport {pad, parsePadAttributes} from './ops/pad';\nimport {averagePool, parseAveragePoolAttributes} from './ops/pool';\nimport {globalAveragePool, parseGlobalAveragePoolAttributes} from './ops/pool';\nimport {maxPool, parseMaxPoolAttributes} from './ops/pool';\nimport {globalMaxPool} from './ops/pool';\nimport {reduceLogSum, reduceLogSumSquare, reduceMax, reduceMean, reduceMin, reduceProd, reduceSum} from './ops/reduce';\nimport {parseReduceAttributes} from './ops/reduce';\nimport {reshape} from './ops/reshape';\nimport {parseResizeAttributesV10, parseResizeAttributesV11, resize} from './ops/resize-packed';\nimport {shape} from './ops/shape';\nimport {parseSliceAttributes, slice, sliceV10} from './ops/slice';\nimport {parseSoftmaxAttributes, softmax} from './ops/softmax';\nimport {parseSplitAttributes, split} from './ops/split';\nimport {parseSqueezeAttributes, squeeze} from './ops/squeeze';\nimport {sum} from './ops/sum';\nimport {tile} from './ops/tile';\nimport {parseTransposeAttributes, transpose} from './ops/transpose';\nimport * as unaryOps from './ops/unary-op';\nimport {parseUnsqueezeAttributes, unsqueeze} from './ops/unsqueeze';\nimport {parseUpsampleAttributesV7, parseUpsampleAttributesV9, upsample} from './ops/upsample';\n\nexport const WEBGL_OP_RESOLVE_RULES: readonly OpSet.ResolveRule[] = [\n  ['Abs', '', '6+', unaryOps.abs],\n  ['Acos', '', '7+', unaryOps.acos],\n  ['Add', '', '7+', binaryOps.add],\n  ['And', '', '7+', binaryOps.and],\n  ['Asin', '', '7+', unaryOps.asin],\n  ['Atan', '', '7+', unaryOps.atan],\n  // TODO: support new attributes for AveragePool-10\n  ['AveragePool', '', '7-10', averagePool, parseAveragePoolAttributes],\n  ['BatchNormalization', '', '7+', batchNormalization, parseBatchNormalizationAttributes],\n  ['Ceil', '', '6+', unaryOps.ceil],\n  ['Clip', '', '6-10', unaryOps.clip, unaryOps.parseClipAttributes],\n  ['Concat', '', '4+', concat, parseConcatAttributes],\n  ['Conv', '', '1+', conv, parseConvAttributes],\n  ['Cos', '', '7+', unaryOps.cos],\n  ['Div', '', '7+', binaryOps.div],\n  ['Dropout', '', '7+', unaryOps.identity],\n  ['DepthToSpace', '', '1+', depthToSpace, parseDepthToSpaceAttributes],\n  ['Equal', '', '7+', binaryOps.equal],\n  ['Elu', '', '6+', unaryOps.elu, unaryOps.parseEluAttributes],\n  ['Exp', '', '6+', unaryOps.exp],\n  ['Flatten', '', '1+', flatten, parseFlattenAttributes],\n  ['Floor', '', '6+', unaryOps.floor],\n  ['Gather', '', '1+', gather, parseGatherAttributes],\n  ['Gemm', '', '7-10', gemm, parseGemmAttributesV7],\n  ['Gemm', '', '11+', gemm, parseGemmAttributesV11],\n  ['GlobalAveragePool', '', '1+', globalAveragePool, parseGlobalAveragePoolAttributes],\n  ['GlobalMaxPool', '', '1+', globalMaxPool],\n  ['Greater', '', '7+', binaryOps.greater],\n  ['Identity', '', '1+', unaryOps.identity],\n  ['ImageScaler', '', '1+', imageScaler, parseImageScalerAttributes],\n  ['InstanceNormalization', '', '6+', instanceNormalization, parseInstanceNormalizationAttributes],\n  ['LeakyRelu', '', '6+', unaryOps.leakyRelu, unaryOps.parseLeakyReluAttributes],\n  ['Less', '', '7+', binaryOps.less],\n  ['Log', '', '6+', unaryOps.log],\n  ['MatMul', '', '1+', matMul, parseMatMulAttributes],\n  // TODO: support new attributes for MaxPool-8 and MaxPool-10\n  ['MaxPool', '', '1-9', maxPool, parseMaxPoolAttributes],\n  ['Mul', '', '7+', binaryOps.mul],\n  ['Neg', '', '6+', unaryOps.neg],\n  ['Not', '', '1+', unaryOps.not],\n  ['Or', '', '7+', binaryOps.or],\n  ['Pad', '', '2-10', pad, parsePadAttributes],\n  ['Pow', '', '7+', binaryOps.pow],\n  ['PRelu', '', '7+', binaryOps.pRelu],\n  ['ReduceLogSum', '', '1+', reduceLogSum, parseReduceAttributes],\n  ['ReduceMax', '', '1+', reduceMax, parseReduceAttributes],\n  ['ReduceMean', '', '1+', reduceMean, parseReduceAttributes],\n  ['ReduceMin', '', '1+', reduceMin, parseReduceAttributes],\n  ['ReduceProd', '', '1+', reduceProd, parseReduceAttributes],\n  ['ReduceSum', '', '1+', reduceSum, parseReduceAttributes],\n  ['ReduceSumSquare', '', '1+', reduceLogSumSquare, parseReduceAttributes],\n  ['Relu', '', '6+', unaryOps.relu],\n  ['Reshape', '', '5+', reshape],\n  ['Resize', '', '10', resize, parseResizeAttributesV10],\n  ['Resize', '', '11+', resize, parseResizeAttributesV11],\n  ['Shape', '', '1+', shape],\n  ['Sigmoid', '', '6+', unaryOps.sigmoid],\n  ['Sin', '', '7+', unaryOps.sin],\n  ['Slice', '', '10+', sliceV10],  // TODO: support 'steps' for Slice-10\n  ['Slice', '', '1-9', slice, parseSliceAttributes],\n  ['Softmax', '', '1+', softmax, parseSoftmaxAttributes],\n  // 'Split' operator has an optional attribute 'split'\n  // this attribute determines how the specified axis of input data is split.\n  // When the attribute is missing, we need the count of number of outputs\n  // so that we can determine the 'split' attribute from the runtime input to the Operator\n  ['Split', '', '2+', split, parseSplitAttributes],\n  ['Sqrt', '', '6+', unaryOps.sqrt],\n  ['Squeeze', '', '1+', squeeze, parseSqueezeAttributes],\n  ['Sub', '', '7+', binaryOps.sub],\n  ['Sum', '', '6+', sum],\n  ['Tan', '', '7+', unaryOps.tan],\n  ['Tanh', '', '6+', unaryOps.tanh],\n  ['Tile', '', '6+', tile],\n  ['Transpose', '', '1+', transpose, parseTransposeAttributes],\n  ['Upsample', '', '7-8', upsample, parseUpsampleAttributesV7],\n  ['Upsample', '', '9', upsample, parseUpsampleAttributesV9],\n  ['Unsqueeze', '', '1+', unsqueeze, parseUnsqueezeAttributes],\n  ['Xor', '', '7+', binaryOps.xor],\n];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface BatchNormalizationAttributes extends AttributeWithCacheKey {\n  epsilon: number;\n  momentum: number;\n  spatial: number;\n}\n\nconst batchNormalizationProgramMetadata = {\n  name: 'BatchNormalization',\n  inputNames: ['A', 'Scale', 'B', 'Mean', 'Variance'],\n  inputTypes:\n      [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked, TextureType.unpacked]\n};\n\nexport const batchNormalization: OperatorImplementation<BatchNormalizationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...batchNormalizationProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createBatchNormalizationProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseBatchNormalizationAttributes: OperatorInitialization<BatchNormalizationAttributes> =\n    (node: Graph.Node): BatchNormalizationAttributes => {\n      const epsilon = node.attributes.getFloat('epsilon', 1e-5);\n      const momentum = node.attributes.getFloat('momentum', 0.9);\n      const spatial = node.attributes.getInt('spatial', 1);\n      return createAttributeWithCacheKey({epsilon, momentum, spatial});\n    };\n\nconst createBatchNormalizationProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: BatchNormalizationAttributes):\n        ProgramInfo => {\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const rank = inputs[0].dims.length;\n          const [scaleWidth, scaleHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(inputs[1].dims, TextureType.unpacked);\n          const shaderSource = `\n  float process(int[${rank}] indices) {\n    vec2 position = offsetToCoords(indices[1], ${scaleWidth}, ${scaleHeight});\n    float scale = getColorAsFloat(${glsl.texture2D}(Scale, position));\n    float mean = getColorAsFloat(${glsl.texture2D}(Mean, position));\n    float variance = getColorAsFloat(${glsl.texture2D}(Variance, position));\n    float b = getColorAsFloat(${glsl.texture2D}(B, position));\n\n    return scale * ( (_A(indices) - mean) / sqrt(variance + float(${attributes.epsilon})) ) + b;\n  }`;\n          return {\n            ...batchNormalizationProgramMetadata,\n            output: {dims: inputs[0].dims, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 5) {\n    throw new Error('BatchNormalization requires 5 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n  const mean = inputs[3];\n  const var_ = inputs[4];\n\n  // input should atleast have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1 || mean.dims.length !== 1 ||\n      var_.dims.length !== 1) {\n    throw new Error('invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1] || mean.dims[0] !== X.dims[1] ||\n      var_.dims[0] !== X.dims[1]) {\n    throw new Error('invalid input shape.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64') || (mean.type !== 'float32' && mean.type !== 'float64') ||\n      (var_.type !== 'float32' && var_.type !== 'float64')) {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\n\nexport function glslAdd(): GlslValueFunction {\n  const name = 'add_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a + b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 + v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslDiv(): GlslValueFunction {\n  const name = 'div_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a / b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 / v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslMul(): GlslValueFunction {\n  const name = 'mul_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a * b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 * v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSub(): GlslValueFunction {\n  const name = 'sub_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a - b;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return v1 - v2;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslEqual(): GlslValueFunction {\n  const name = 'equal_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a == b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(equal(v1, v2));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslGreater(): GlslValueFunction {\n  const name = 'greater_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a > b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r > v2.r ,\n      v1.g > v2.g,\n      v1.b > v2.b,\n      v1.a > v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLess(): GlslValueFunction {\n  const name = 'less_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float(a < b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4( v1.r < v2.r ,\n                v1.g < v2.g,\n                v1.b < v2.b,\n                v1.a < v2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslAnd(): GlslValueFunction {\n  const name = 'and_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) && bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r && b2.r ,\n                b1.g && b2.g,\n                b1.b && b2.b,\n                b1.a && b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslOr(): GlslValueFunction {\n  const name = 'or_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) || bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r || b2.r ,\n                b1.g || b2.g,\n                b1.b || b2.b,\n                b1.a || b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslXor(): GlslValueFunction {\n  const name = 'xor_';\n  const body = `\n  float ${name}(float a, float b) {\n    return float( bool(a) ^^ bool(b) );\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    bvec4 b1 = bvec4(v1);\n    bvec4 b2 = bvec4(v2);\n    return vec4( b1.r ^^ b2.r ,\n                b1.g ^^ b2.g,\n                b1.b ^^ b2.b,\n                b1.a ^^ b2.a );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslPow(): GlslValueFunction {\n  return glslBuiltinBinary('pow');\n}\nexport function glslPRelu(): GlslValueFunction {\n  const name = 'prelu_';\n  const body = `\n  float ${name}(float a, float b) {\n    return a < 0.0 ? a * b: a;\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return vec4(\n      v1.r < 0.0 ? v1.r * v2.r: v1.r,\n      v1.g < 0.0 ? v1.g * v2.g: v1.g,\n      v1.b < 0.0 ? v1.b * v2.b: v1.b,\n      v1.a < 0.0 ? v1.a * v2.a: v1.a\n      );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nfunction glslBuiltinBinary(fname: string): GlslValueFunction {\n  const name = `${fname}_`;\n  const body = `\n  float ${name}(float a, float b) {\n    return ${fname}(a, b);\n  }\n  vec4 ${name}(vec4 v1, vec4 v2) {\n    return ${fname}(v1, v2);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\nconst createBinaryProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type, cacheKey?: string): ProgramInfoLoader => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        cacheHint: cacheKey,\n        get: () => createBinaryProgramInfo(handler, inputs, glslFunc, outputTensorType)\n      };\n    };\n\nconst createBinaryProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], glslFunc: GlslValueFunction,\n     outputTensorType: Tensor.DataType = inputs[0].type): ProgramInfo => {\n      const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n      let outputShape = inputs[0].dims;\n\n      const usePackedTexture = handler.session.pack;\n\n      if (isBroadcast) {\n        const calculatedShape = BroadcastUtil.calcShape(inputs[0].dims, inputs[1].dims, false);\n        if (!calculatedShape) {\n          throw new Error('Can\\'t perform binary op on the given tensors');\n        }\n        outputShape = calculatedShape;\n        const outputRank = outputShape.length;\n        const aRank = inputs[0].dims.length !== 0 ? inputs[0].dims.length : 1;\n        const bRank = inputs[1].dims.length !== 0 ? inputs[1].dims.length : 1;\n        const aBcast = inputs[0].dims.length !== 0 ? 'bcastIndices_A(indices, aindices);' : 'aindices[0] = 0;';\n        const bBcast = inputs[1].dims.length !== 0 ? 'bcastIndices_B(indices, bindices);' : 'bindices[0] = 0;';\n\n        const glsl = getGlsl(handler.session.backend.glContext.version);\n        const shaderSource = usePackedTexture ? `\n      ${glslFunc.body}\n      void main() {\n        vec4 a = getAAtOutCoords();\n        vec4 b = getBAtOutCoords();\n        vec4 result = ${glslFunc.name}(a, b);\n        ${glsl.output} = result;\n      }` :\n                                                `\n      ${glslFunc.body}\n      float process(int indices[${outputRank}]) {\n        int aindices[${aRank}];\n        int bindices[${bRank}];\n        ${aBcast}\n        ${bBcast}\n        return ${glslFunc.name}(_A(aindices), _B(bindices));\n      }`;\n\n        return {\n          name: glslFunc.name,\n          inputNames: ['A', 'B'],\n          inputTypes: [textureType, textureType],\n          output: {dims: outputShape, type: outputTensorType, textureType},\n          shaderSource,\n          hasMain: usePackedTexture\n        };\n      }\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n      const shaderSource = `\n    ${glslFunc.body}\n    void main() {\n      vec4 v1 = ${glsl.texture2D}(A, TexCoords);\n      vec4 v2 = ${glsl.texture2D}(B, TexCoords);\n      vec4 result = ${glslFunc.name}(v1, v2);\n      ${glsl.output} = result;\n    }\n    `;\n\n      return {\n        name: glslFunc.name,\n        inputNames: ['A', 'B'],\n        inputTypes: [textureType, textureType],\n        output: {dims: inputs[0].dims, type: outputTensorType, textureType},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const add = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAdd()), inputs)];\n\nexport const and = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslAnd(), 'bool'), inputs)];\n\nexport const div = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslDiv()), inputs)];\n\nexport const equal = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslEqual(), 'bool'), inputs)];\n\nexport const greater = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslGreater(), 'bool'), inputs)];\n\nexport const less = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslLess(), 'bool'), inputs)];\n\nexport const mul = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslMul()), inputs)];\n\nexport const or = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslOr(), 'bool'), inputs)];\n\nexport const pow = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPow()), inputs)];\n\nexport const pRelu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslPRelu()), inputs)];\n\nexport const sub = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslSub()), inputs)];\n\nexport const xor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createBinaryProgramInfoLoader(handler, inputs, glslXor(), 'bool'), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {ConcatAttributes} from './concat';\n\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst createPackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat (packed)',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.packed),\n  cacheHint\n});\n\nconst createPackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n      const coords = getChannels('coords', rank);\n      const dtype = getCoordsDataType(rank);\n      const unpackChannel = unpackFromChannel();\n\n      const shapes = inputs.map(i => i.dims);\n      const channels = getGlChannels(rank);\n      const offsets: number[] = new Array(shapes.length - 1);\n\n      offsets[0] = shapes[0][axis];\n      for (let i = 1; i < offsets.length; i++) {\n        offsets[i] = offsets[i - 1] + shapes[i][axis];\n      }\n\n      const channel = channels[axis];\n      const lastChannels = channels.slice(-2);\n      const allChannels = channels.join();\n\n      let getValueSnippet = `if (${channel} < ${offsets[0]}) {\n        return getChannel(\n            getX0(${allChannels}), vec2(${lastChannels.join()}));\n        }`;\n      for (let i = 1; i < offsets.length; i++) {\n        const shift = offsets[i - 1];\n        getValueSnippet += `\n            if (${channel} < ${offsets[i]}  && ${channel} >= ${offsets[i - 1]}) {\n              return getChannel(\n                getX${i}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n                vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));\n            }`;\n      }\n      const lastIndex = offsets.length;\n      const shift = offsets[offsets.length - 1];\n      getValueSnippet += `\n            return getChannel(\n              getX${lastIndex}(${getShiftedChannelsSnippet(channels, channel, shift)}),\n              vec2(${getShiftedChannelsSnippet(lastChannels, channel, shift)}));`;\n\n      const glsl = getGlsl(handler.session.backend.glContext.version);\n\n      const shaderSource = `\n          ${unpackChannel}\n          float getValue(${channels.map(x => 'int ' + x)}) {\n            ${getValueSnippet}\n          }\n\n          void main() {\n            ${dtype} coords = getOutputCoords();\n            int lastDim = coords.${channels[rank - 1]};\n            coords.${channels[rank - 1]} = coords.${channels[rank - 2]};\n            coords.${channels[rank - 2]} = lastDim;\n\n            vec4 result = vec4(getValue(${coords}), 0., 0., 0.);\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} + 1;\n            if (${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.g = getValue(${coords});\n            }\n\n            ${coords[rank - 2]} = ${coords[rank - 2]} + 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]}) {\n              result.a = getValue(${coords});\n            }\n\n            ${coords[rank - 1]} = ${coords[rank - 1]} - 1;\n            if (${coords[rank - 2]} < ${outputShape[rank - 2]} &&\n                ${coords[rank - 1]} < ${outputShape[rank - 1]}) {\n              result.b = getValue(${coords});\n            }\n            ${glsl.output} = result;\n          }\n        `;\n\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createPackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createPackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createPackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getShiftedChannelsSnippet = (channels: string[], channel: string, shift: number): string => {\n  const channelIdx = channels.indexOf(channel);\n  const res = channels.map((c, idx) => {\n    if (idx === channelIdx) {\n      return `${c} - ${shift}`;\n    } else {\n      return c;\n    }\n  });\n  return res.join();\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {createPackedConcatProgramInfoLoader} from './concat-packed';\n\nexport interface ConcatAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const concat: OperatorImplementation<ConcatAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): Tensor[] => {\n      validateInputs(inputs);\n      if (inferenceHandler.session.pack && inputs[0].dims.length > 1) {\n        const output =\n            inferenceHandler.run(createPackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      } else {\n        const output =\n            inferenceHandler.run(createUnpackedConcatProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n        return [output];\n      }\n    };\n\nconst createUnpackedConcatProgramMetadata = (inputCount: number, cacheHint: string) => ({\n  name: 'Concat',\n  inputNames: Array.from({length: inputCount}, (v, i) => `X${i}`),\n  inputTypes: Array(inputCount).fill(TextureType.unpacked),\n  cacheHint\n});\n\nconst createUnpackedConcatProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      if (axis >= inputShape.length || axis < (-1 * inputShape.length)) {\n        throw new Error('axis specified for concat doesn\\'t match input dimensionality');\n      }\n      if (axis < 0) {\n        axis = inputShape.length + axis;\n      }\n      // ensure all of the non-concatenated axes match each other\n      // calculate the shape of the output tensor while we do that\n      const outputShape = inputShape.slice(0);\n      for (let i = 1; i < inputs.length; i++) {\n        const dataNShape = inputs[i].dims.slice();\n        for (let axisIndex = 0; axisIndex < inputShape.length; axisIndex++) {\n          // add to the placeholder for computing output shape\n          if (axisIndex === axis) {\n            outputShape[axis] += dataNShape[axisIndex];\n          }\n          // ensure all non-cancatenated axes match each other\n          else if (inputShape[axisIndex] !== dataNShape[axisIndex]) {\n            throw new Error('non concat dimensions must match');\n          }\n        }\n      }\n\n      const rank = outputShape.length;\n\n      const sizeInConcatAxis = new Array<number>(inputs.length);\n      let previousSum = 0;\n      for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n        previousSum += inputs[i].dims[axis];\n        sizeInConcatAxis[i] = previousSum;\n      }\n\n      let getTextureIndexWhereDataResidesMethod = '';\n      // in most cases linear search is sufficient, as in most scenarios, only 2 tensors are concatenated\n      if (inputs.length < 5) {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n      } else {\n        getTextureIndexWhereDataResidesMethod = getTextureIndexWhereDataResidesBinarySearch(sizeInConcatAxis);\n      }\n\n      const fetchDataFromCorrectTextureMethod = getFetchDataFromCorrectTextureMethod(inputs.length, rank);\n      const getSizeInConcatAxisValueFromIndexMethod = getGetSizeInConcatAxisValueFromIndexMethod(sizeInConcatAxis);\n      const shaderSource = `\n        ${fetchDataFromCorrectTextureMethod}\n        ${getSizeInConcatAxisValueFromIndexMethod}\n        ${getTextureIndexWhereDataResidesMethod}\n        float process(int indices[${rank}]) {\n          int textureIndex = getTextureWhereDataResides (indices[${axis}]);\n\n          if(textureIndex != 0) {\n            indices[${axis}] = indices[${axis}] - int(getSizeInConcatAxisValueFromIndex(textureIndex-int(1)));\n          }\n\n          return fetchDataFromCorrectTexture(textureIndex, indices);\n        }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n      };\n    };\n\nconst createUnpackedConcatProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConcatAttributes): ProgramInfoLoader => {\n      const metadata = createUnpackedConcatProgramMetadata(inputs.length, attributes.cacheKey);\n      return {...metadata, get: () => createUnpackedConcatProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst getTextureIndexWhereDataResidesLinearSearch = (sizeInConcatAxis: number[]): string => {\n  const searchAxis = sizeInConcatAxis.map((size, i) => `if(index<${size}) {return ${i};}\n`);\n  return `int getTextureWhereDataResides(int index) {\n      ${searchAxis.join('')}\n    }`;\n};\n\n// TODO: Implement BinarySearch in GLSL\nconst getTextureIndexWhereDataResidesBinarySearch = (sizeInConcatAxis: number[]): string =>\n    getTextureIndexWhereDataResidesLinearSearch(sizeInConcatAxis);\n\nconst getFetchDataFromCorrectTextureMethod = (numberOfTensors: number, tensorRank: number) => {\n  const codeLines: string[] = [`float fetchDataFromCorrectTexture(int textureIndex, int indices[${tensorRank}]) {`];\n  for (let i = 0; i < numberOfTensors; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    } else if (i === numberOfTensors - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return _X${i}(indices); }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (textureIndex == ${i}) { return _X${i}(indices); }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst getGetSizeInConcatAxisValueFromIndexMethod = (sizeInConcatAxis: number[]): string => {\n  const codeLines: string[] = ['int getSizeInConcatAxisValueFromIndex(int index) {'];\n  for (let i = 0; i < sizeInConcatAxis.length; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    } else if (i === sizeInConcatAxis.length - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return ${sizeInConcatAxis[i]}; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (index == ${i}) { return ${sizeInConcatAxis[i]}; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n\n  return codeLines.join('\\n');\n};\n\nexport const parseConcatAttributes: OperatorInitialization<ConcatAttributes> = (node: Graph.Node): ConcatAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis')});\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 1) {\n    throw new Error('too few inputs');\n  }\n\n  const inputType = inputs[0].type;\n  const inputDimensionality = inputs[0].dims.length;\n\n  // TODO: Support string concat\n  if (inputType === 'string') {\n    throw new Error('string tensor is not supported yet');\n  }\n\n  for (const input of inputs) {\n    // make sure types of all inputs match\n    if (input.type !== inputType) {\n      throw new Error('input tensors should be one type');\n    }\n\n    // make sure the dimensionality of all inputs are the same\n    if (input.dims.length !== inputDimensionality) {\n      throw new Error('input tensors should have the same shape');\n    }\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../../instrument';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {getActicationSnippet} from './fuse-utils';\n\nconst createUnpackedGroupedConvProgramMetadata = (hasBias: boolean, cacheHint: string): ProgramMetadata => ({\n  name: 'GroupedConv',\n  inputNames: hasBias ? ['X', 'W', 'Bias'] : ['X', 'W'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nconst createUnpackedGroupedConvProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], metadata: ProgramMetadata,\n     attributes: ConvAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBias(output_channel);' : '';\n      const xShape = inputs[0].dims.slice();\n      const wShape = inputs[1].dims.slice();\n      const outputChannelsPerGroup = wShape[0] / attributes.group;\n      Logger.verbose(\n          'GroupedConv',\n          `autpPad:${attributes.autoPad}, dilations:${attributes.dilations}, group:${attributes.group}, kernelShape:${\n              attributes.kernelShape}, pads:${attributes.pads}, strides:${attributes.strides}`);\n      const outputShape =\n          calculateOutputShape(xShape, wShape, attributes.dilations, attributes.pads, attributes.strides);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n\n      const shaderSource = `\n  const ivec2 strides = ivec2(${attributes.strides[0]}, ${attributes.strides[1]});\n  const ivec2 pads = ivec2(${attributes.pads[0]}, ${attributes.pads[1]});\n  ${activationFunction}\n  void main() {\n    ivec4 coords = getOutputCoords();\n    int batch = coords.x;\n    int output_channel = coords.y;\n    ivec2 xRCCorner = coords.zw * strides - pads;\n    int group_id = output_channel / ${outputChannelsPerGroup};\n\n    float value = 0.0;\n    for (int wInChannel = 0; wInChannel < ${wShape[1]}; wInChannel++) {\n      int input_channel = group_id * ${wShape[1]} + wInChannel;\n      for (int wHeight = 0; wHeight < ${wShape[2]}; wHeight++) {\n        int xHeight = xRCCorner.x + wHeight * ${attributes.dilations[0]};\n\n        if (xHeight < 0 || xHeight >= ${xShape[2]}) {\n          continue;\n        }\n\n        for (int wWidth = 0; wWidth < ${wShape[3]}; wWidth++) {\n          int xWidth = xRCCorner.y + wWidth * ${attributes.dilations[1]};\n          if (xWidth < 0 || xWidth >= ${xShape[3]}) {\n            continue;\n          }\n\n          float xVal = getX(batch, input_channel, xWidth, xHeight);\n          float wVal = getW(output_channel, wInChannel, wWidth, wHeight);\n          value += xVal*wVal;\n        }\n      }\n    }\n    ${processBias}\n    ${applyActivation}\n    ${glsl.output} = vec4(value, .0, .0, .0);\n  }\n`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        hasMain: true,\n      };\n    };\n\nexport const createUnpackedGroupedConvProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes):\n        ProgramInfoLoader => {\n          const metadata = createUnpackedGroupedConvProgramMetadata(inputs.length > 2, attributes.cacheKey);\n          return {\n            ...metadata,\n            get: () => createUnpackedGroupedConvProgramInfo(inferenceHandler, inputs, metadata, attributes)\n          };\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {calculateOutputShape, ConvAttributes} from './conv';\nimport {createPackedIm2ColProgramInfoLoader} from './im2col-pack';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const conv2DPackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapePacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapePacked(matmulOutput, outputShape);\n    };\n\nexport const conv2DPacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n\n      // run im2col\n      const im2colOutput = inferenceHandler.run(\n          createPackedIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes),\n          [inputs[0]]);\n\n      // reshape kernel\n      const kernelReshaped = inferenceHandler.reshapePacked(inputs[1], [kshape[0], kshape[1] * kshape[2] * kshape[3]]);\n\n      // run matmul\n      const matmulInputs =\n          (inputs.length === 3) ? [kernelReshaped, im2colOutput, inputs[2]] : [kernelReshaped, im2colOutput];\n      const matmulOutput = inferenceHandler.run(\n          createPackedMatmulProgramInfoLoader(inferenceHandler, matmulInputs, attributes), matmulInputs);\n\n      // reshape output\n      const outputReshaped = inferenceHandler.reshapePacked(matmulOutput, outputShape);\n      return outputReshaped;\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {InferenceHandler} from '../../../backend';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {createUnpackedGroupedConvProgramInfoLoader} from './conv-grouped';\nimport {conv2DPacked} from './conv-pack';\nimport {createDotProductProgramInfoLoader} from './dot-product';\nimport {InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createIm2ColProgramInfoLoader} from './im2col';\nimport {createMatmulProgramInfoLoader} from './matmul';\n\n\nexport const calculateOutputShape =\n    (inputShape: readonly number[], kernelShape: readonly number[], dilations: readonly number[],\n     adjustPads: readonly number[], strides: readonly number[]): number[] => {\n      const batchSize = inputShape[0];\n      const inputSpatialShape = inputShape.slice(2);\n      const spatialRank = inputSpatialShape.length;\n      const outChannels = kernelShape[0];\n      const kernelSpatialShape = kernelShape.slice(2);\n      const dilatedKernelShape = kernelSpatialShape.map((v, i) => v + (v - 1) * (dilations[i] - 1));\n      const inputSpatialShapeWithPad = inputSpatialShape.map((v, i) => v + adjustPads[i] + adjustPads[i + spatialRank]);\n      const outputSpatialShape =\n          inputSpatialShapeWithPad.map((v, i) => Math.floor((v - dilatedKernelShape[i] + strides[i]) / strides[i]));\n      const outputShape = [batchSize, outChannels].concat(...outputSpatialShape);\n      return outputShape;\n    };\n\nexport interface ConvAttributes extends InternalActivationAttributes, AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly dilations: readonly number[];\n  readonly group: number;\n  readonly kernelShape: readonly number[];\n  readonly pads: readonly number[];\n  readonly strides: readonly number[];\n}\n\nexport const conv: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: InferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);  // currently will fail if not conv2D\n      return conv2d(inferenceHandler, inputs, attributes);\n    };\n\nconst conv2d: OperatorImplementation<ConvAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ConvAttributes): Tensor[] => {\n      const adjustedAttributes = getAdjustedConvAttributes(attributes, inputs);\n      const packMode = inferenceHandler.session.pack;\n      const isPointwise = adjustedAttributes.kernelShape[0] === 1 && adjustedAttributes.kernelShape[1] === 1;\n      if (adjustedAttributes.group > 1) {\n        const result = inferenceHandler.run(\n            createUnpackedGroupedConvProgramInfoLoader(inferenceHandler, inputs, adjustedAttributes), inputs);\n        return [result];\n      } else if (isPointwise && packMode) {\n        return [conv2DUnpackedPointwise(inferenceHandler, inputs, adjustedAttributes)];\n      } else if (packMode && inputs[0].dims.length === 4 && inputs[0].dims[0] === 1 && !isPointwise) {\n        return [conv2DPacked(inferenceHandler, inputs, adjustedAttributes)];\n      } else {\n        return [conv2DUnpacked(inferenceHandler, inputs, adjustedAttributes)];\n      }\n    };\n\nconst conv2DUnpackedPointwise =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const reshapedX = inferenceHandler.reshapeUnpacked(inputs[0], [xshape[1], xshape[2] * xshape[3]]);\n      const reshapedK = inferenceHandler.reshapeUnpacked(inputs[1], [kshape[0], kshape[1]]);\n\n      const matmulInputs = inputs.length > 2 ? [reshapedK, reshapedX, inputs[2]] : [reshapedK, reshapedX];\n      const matmulOutput = inferenceHandler.run(createMatmulProgramInfoLoader(matmulInputs, attributes), matmulInputs);\n      return inferenceHandler.reshapeUnpacked(matmulOutput, outputShape);\n    };\n\nconst conv2DUnpacked =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], attributes: ConvAttributes): Tensor => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const outputShape =\n          calculateOutputShape(xshape, kshape, attributes.dilations, attributes.pads, attributes.strides);\n      const xIm2Col = inferenceHandler.run(\n          createIm2ColProgramInfoLoader(inferenceHandler, inputs[0], inputs[1], outputShape, attributes), [inputs[0]]);\n\n      const dotProductInputs = inputs.length === 3 ? [xIm2Col, inputs[1], inputs[2]] : [xIm2Col, inputs[1]];\n      const output = inferenceHandler.run(\n          createDotProductProgramInfoLoader(inferenceHandler, inputs, outputShape, attributes), dotProductInputs);\n      return output;\n    };\n\nconst getAdjustedConvAttributes = <T extends ConvAttributes>(attributes: T, inputs: Tensor[]): T => {\n  const kernelShape = attributes.kernelShape.slice();\n  // if kernelShape is not specified in the attributes of this op, infer it from the weight tensor dims\n  if (attributes.kernelShape.length === 0) {\n    for (let i = 2; i < inputs[1].dims.length; ++i) {\n      kernelShape.push(inputs[1].dims[i]);\n    }\n  }\n  const pads = attributes.pads.slice();\n  PoolConvUtil.adjustPadsBasedOnAutoPad(\n      inputs[0].dims, attributes.strides, attributes.dilations, kernelShape, pads, attributes.autoPad);\n\n  // always return a new object so does not modify the original attributes\n  const newAttributes: T = Object.assign({}, attributes);\n  Object.assign(newAttributes, {kernelShape, pads, cacheKey: attributes.cacheKey});\n  return newAttributes;\n};\n\nexport const parseConvAttributes: OperatorInitialization<ConvAttributes> = (node: Graph.Node): ConvAttributes => {\n  const attributes = node.attributes;\n  const activationAttributes = parseInternalActivationAttributes(attributes);\n  // TODO : Make this generic enough to compute default attributes for multi-dimensional conv\n  const autoPad = attributes.getString('auto_pad', 'NOTSET');\n  const dilations = attributes.getInts('dilations', [1, 1]);\n  const group = attributes.getInt('group', 1);\n  const kernelShape = attributes.getInts('kernel_shape', []);\n  const pads = attributes.getInts('pads', [0, 0, 0, 0]);\n  const strides = attributes.getInts('strides', [1, 1]);\n\n  return createAttributeWithCacheKey({autoPad, dilations, group, kernelShape, pads, strides, ...activationAttributes});\n};\n\nconst validateInputs = (inputs: Tensor[], attributes: ConvAttributes): void => {\n  // Refer to the below link for all input checks\n  // https://github.com/onnx/onnx/blob/master/docs/Operators.md#Conv\n  if (!inputs || (inputs.length !== 2 && inputs.length !== 3)) {\n    throw new Error('Conv requires 2 or 3 inputs');\n  }\n\n  // TODO : Need to add support for multi-dimensional conv\n  if (inputs[0].dims.length !== 4 || inputs[1].dims.length !== 4) {\n    throw new Error('currently only support 2-dimensional conv');\n  }\n\n  // FILTER_IN_CHANNEL should be equal to DATA_CHANNEL\n  const dataChannel = inputs[0].dims[1];\n  const filterInChannel = inputs[1].dims[1] * attributes.group;\n  if (dataChannel !== filterInChannel) {\n    throw new Error('FILTER_IN_CHANNEL should be equal to DATA_CHANNEL');\n  }\n\n  // if bias is provided it should be 1D and the number of elements should be equal to the number of feature maps\n  if (inputs.length === 3 && (inputs[2].dims.length !== 1 || inputs[1].dims[0] !== inputs[2].dims[0])) {\n    throw new Error('invalid bias');\n  }\n\n  const spatialRank = inputs[0].dims.length - 2;\n  // wrong dilations dimension\n  if (attributes.dilations.length !== spatialRank) {\n    throw new Error(`dilations should be ${spatialRank}D`);\n  }\n\n  // Wrong strides dimension\n  if (attributes.strides.length !== spatialRank) {\n    throw new Error(`strides should be ${spatialRank}D`);\n  }\n\n  // Wrong pads dimension\n  if (attributes.pads.length !== spatialRank * 2) {\n    throw new Error(`pads should be ${spatialRank * 2}D`);\n  }\n\n  // if kernelShape is specified, it's data length must be 2 less than dims length of the weights tensor\n  // (the first 2 dims are batch_size and channels)\n  if (attributes.kernelShape.length !== 0 && attributes.kernelShape.length !== inputs[1].dims.length - 2) {\n    throw new Error('invalid kernel shape');\n  }\n\n  // TODO : Need to add support for float64\n  if (inputs[0].type !== 'float32' || inputs[1].type !== 'float32') {\n    throw new Error('Conv input(X,W) should be float tensor');\n  }\n\n  if (inputs.length === 3 && inputs[2].type !== 'float32') {\n    throw new Error('Conv input(bias) should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nimport {transpose, TransposeAttributes} from './transpose';\n\nexport interface DepthToSpaceAttributes {\n  mode: 'DCR'|'CRD';\n  blocksize: number;\n}\n\nexport const depthToSpace: OperatorImplementation<DepthToSpaceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: DepthToSpaceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const blocksize = attributes.blocksize;\n      const blocksizeSqr = blocksize * blocksize;\n      const transposePerm = attributes.mode === 'DCR' ? [0, 3, 4, 1, 5, 2] : [0, 1, 4, 2, 5, 3];\n      const firstReshapeShape = attributes.mode === 'DCR' ?\n          [\n            inputs[0].dims[0], blocksize, blocksize, inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ] :\n          [\n            inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, blocksize, blocksize, inputs[0].dims[2],\n            inputs[0].dims[3]\n          ];\n\n      // const transpose = new WebGLTranspose();\n      // const attributes = new Attribute(undefined);\n      // attributes.set('perm', 'ints', transposePerm);\n      // transpose.initialize(attributes);\n\n      // First reshape\n      const firstReshapedTensor = inferenceHandler.reshapeUnpacked(inputs[0], firstReshapeShape);\n\n      // transpose\n      const transposeAttributes: TransposeAttributes = {perm: transposePerm, cacheKey: `${transposePerm}`};\n      const [transposeOutput] = transpose(inferenceHandler, [firstReshapedTensor], transposeAttributes);\n\n      // Second reshape\n      const secondReshapeShape = [\n        inputs[0].dims[0], inputs[0].dims[1] / blocksizeSqr, inputs[0].dims[2] * blocksize,\n        inputs[0].dims[3] * blocksize\n      ];\n      const result = inferenceHandler.reshapeUnpacked(transposeOutput, secondReshapeShape);\n      return [result];\n    };\n\nexport const parseDepthToSpaceAttributes: OperatorInitialization<DepthToSpaceAttributes> =\n    (node: Graph.Node): DepthToSpaceAttributes => {\n      // processing node attributes\n      const blocksize = node.attributes.getInt('blocksize');\n      if (blocksize < 1) {\n        throw new Error(`blocksize must be >= 1, but got : ${blocksize} for DepthToSpace`);\n      }\n      const mode = node.attributes.getString('mode', 'DCR');\n      if (mode !== 'DCR' && mode !== 'CRD') {\n        throw new Error(`unrecognized mode: ${mode} for DepthToSpace`);\n      }\n      return {mode, blocksize};\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (inputs.length !== 1) {\n    throw new Error(`DepthToSpace expect 1 inputs, but got ${inputs.length}`);\n  }\n\n  // Input has to be a 4-D tensor\n  // TODO: Support string depth-to-space.\n  if (inputs[0].type === 'string' || inputs[0].dims.length !== 4) {\n    throw new TypeError('DepthToSpace input should be a 4-D numeric tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {calculateIm2ColDims} from './im2col';\n\nconst createDotProductProgramMetadata = (hasBias: boolean, attributes: InternalActivationAttributes) => ({\n  name: 'ConvDotProduct',\n  inputNames: hasBias ? ['Im2Col', 'K', 'B'] : ['Im2Col', 'K'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.packedLastDimension],\n  cacheKey: attributes.activationCacheKey\n});\n\nconst createDotProductProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: readonly Tensor[],\n     outputShape: number[], attributes: InternalActivationAttributes): ProgramInfo => {\n      const xshape = inputs[0].dims;\n      const kshape = inputs[1].dims;\n      const adjustedKernelShape = [kshape[0], Math.ceil((xshape[1] * kshape[2] * kshape[3]) / 4)];\n      const im2colShape = calculateIm2ColDims(xshape, kshape, outputShape);\n      const [kWidth, kHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(adjustedKernelShape, TextureType.packedLastDimension);\n\n      const im2colStrides = ShapeUtil.computeStrides(im2colShape);\n      const [im2colWidth, im2colHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(im2colShape, TextureType.packedLastDimension);\n      const rank = outputShape.length;\n\n      const initValue = (inputs.length < 3) ? '0.0' : '_B(b)';\n      const sharedDim = Math.ceil(xshape[1] * kshape[2] * kshape[3] / 4);\n      const {activationFunction, applyActivation} = getActicationSnippet(attributes);\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n${activationFunction}\nfloat process(int indices[${rank}]) {\n  int b[1];\n  b[0] = indices[1];\n  int im2col[4];\n  im2col[0] = indices[0];\n  im2col[1] = indices[2];\n  im2col[2] = indices[3];\n  int im2colOffset = im2col[0] * ${im2colStrides[0]} + im2col[1] * ${im2colStrides[1]} + im2col[2] * ${\n          im2colStrides[2]};\n  int kernelOffset = indices[1] * ${adjustedKernelShape[1]};\n  float value = ${initValue};\n  for (int i = 0; i < ${sharedDim}; ++i) {\n    vec2 im2colCoords = offsetToCoords(im2colOffset, ${im2colWidth}, ${im2colHeight});\n    vec2 kernelCoords = offsetToCoords(kernelOffset, ${kWidth}, ${kHeight});\n    value += dot(${glsl.texture2D}(Im2Col, im2colCoords), ${glsl.texture2D}(K, kernelCoords));\n    ++im2colOffset;\n    ++kernelOffset;\n  }\n  ${applyActivation}\n  return value;\n}`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nexport const createDotProductProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: readonly Tensor[], outputShape: number[],\n     attributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createDotProductProgramMetadata(inputs.length > 2, attributes);\n      return {\n        ...metadata,\n        get: () => createDotProductProgramInfo(inferenceHandler, metadata, inputs, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const flatten: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number): Tensor[] => {\n      validateInputs(inputs, axis);\n\n      const outputDims = ShapeUtil.flattenShape(inputs[0].dims, axis);\n      return [inferenceHandler.reshapeUnpacked(inputs[0], outputDims)];\n    };\n\nexport const parseFlattenAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getInt('axis', 1);  // default axis is 1\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Flatten requires 1 input.');\n  }\n\n  const r = inputs[0].dims.length;\n  if (r === 0) {\n    throw new Error('scalar tensor is not supported.');\n  }\n\n  if (axis < -r || axis > r) {\n    throw new Error('Invalid axis');\n  }\n\n  // TODO: Support string type\n  if (inputs[0].type === 'string') {\n    throw new Error('string tensor is not supported.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Attribute} from '../../../attribute';\nimport {GlslValueFunction} from '../glsl-definitions';\nimport {glslClip, glslRelu, glslSigmoid} from './unary-op';\n\nexport interface InternalActivationAttributes {\n  readonly activation: string;\n  readonly clipMin?: number;\n  readonly clipMax?: number;\n  readonly activationCacheKey: string;\n}\n\nexport function getActicationSnippet(attributes: InternalActivationAttributes) {\n  let func: GlslValueFunction;\n  switch (attributes.activation) {\n    case 'Relu':\n      func = glslRelu();\n      break;\n    case 'Sigmoid':\n      func = glslSigmoid();\n      break;\n    case 'Clip':\n      func = glslClip(attributes.clipMin!, attributes.clipMax!);\n      break;\n    // TODO: adding other activations that can be fused.\n    default:\n      return {activationFunction: '', applyActivation: ''};\n  }\n\n  const activationName = func.name;\n  const activationFunction = func.body;\n  const applyActivation = `value = ${activationName}_(value);`;\n  return {activationFunction, applyActivation};\n}\n\nexport const parseInternalActivationAttributes = (attributes: Attribute): InternalActivationAttributes => {\n  const activation = attributes.getString('__internal_activation', '');\n\n  if (activation === 'Clip') {\n    const clipMax = attributes.getFloat('__clip_max', 3.402823e+38);\n    const clipMin = attributes.getFloat('__clip_min', -3.402823e+38);\n    return {activation, clipMax, clipMin, activationCacheKey: `${activation}:${clipMin},${clipMax}`};\n  }\n  return {activation, activationCacheKey: activation};\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\ninterface GatherAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nexport const gather: OperatorImplementation<GatherAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): Tensor[] => {\n      validateInputs(inputs, attributes.axis);\n      const output = inferenceHandler.run(createGatherProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseGatherAttributes: OperatorInitialization<GatherAttributes> = (node: Graph.Node): GatherAttributes =>\n    createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 0)});\n\nconst gatherProgramMetadata = {\n  name: 'Gather',\n  inputNames: ['A', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createGatherProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], axis: number): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const indexDataShape = inputs[1].dims.slice();\n      const outputShape = new Array(inputShape.length + indexDataShape.length - 1);\n\n      axis = ShapeUtil.normalizeAxis(axis, inputShape.length);\n      const indexCopyOps: string[] = [];\n      for (let i = 0; i < outputShape.length; i++) {\n        // outputShape is divided into three parts: A, B, C\n        // |0        axis|  axis + indexDataShape.length |          end|\n        // |     A       |             B                 |      C      |\n        //\n        // inputIdx: [A, inputs[1][B], C]\n        if (i < axis) {  // A\n          outputShape[i] = inputShape[i];\n          indexCopyOps.push(`inputIdx[${i}] = outputIdx[${i}];`);\n        } else {\n          if (i < axis + indexDataShape.length) {  // B\n            outputShape[i] = indexDataShape[i - axis];\n            indexCopyOps.push(`indexDataIdx[${i - axis}] = outputIdx[${i}];`);\n          } else {                                                       // C\n            outputShape[i] = inputShape[i - indexDataShape.length + 1];  // skip 1 for axis\n            indexCopyOps.push(`inputIdx[${i - indexDataShape.length + 1}] = outputIdx[${i}];`);\n          }\n        }\n      }\n\n      const orank = outputShape.length || 1;\n      const irank = inputShape.length;\n      const iDrank = indexDataShape.length || 1;\n      const shaderSource = `\n      float process(int outputIdx[${orank}]) {\n        int inputIdx[${irank}];\n        int indexDataIdx[${iDrank}];\n        indexDataIdx[0] = 0;\n        ${indexCopyOps.join('\\n        ')}\n        int idx = int(_B(indexDataIdx));\n        inputIdx[${axis}] = idx < 0 ? idx + ${inputShape[axis]} : idx;\n        return _A(inputIdx);\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createGatherProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: GatherAttributes): ProgramInfoLoader => {\n      const metadata = {...gatherProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createGatherProgramInfo(handler, metadata, inputs, attributes.axis)};\n    };\n\nconst validateInputs = (inputs: Tensor[], axis: number): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Gather requires 2 inputs.');\n  }\n  const tensorRank = inputs[0].dims.length;\n  if (tensorRank < 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (axis < -tensorRank || axis > tensorRank - 1) {\n    throw new Error('Invalid axis.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invaid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invaid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {GemmUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface GemmAttributes extends AttributeWithCacheKey {\n  transA: boolean;\n  transB: boolean;\n  alpha: number;\n  beta: number;\n  isOptionalC: boolean;  // in opset 11, C becomes optional\n}\n\nexport const gemm: OperatorImplementation<GemmAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: GemmAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(createGemmProgramInfoLoader(inputs, attributes), inputs);\n      return [output];\n    };\n\nconst parseGemmAttributes = (node: Graph.Node, isOptionalC: boolean): GemmAttributes => {\n  const transA = node.attributes.getInt('transA', 0) !== 0;\n  const transB = node.attributes.getInt('transB', 0) !== 0;\n  const alpha = node.attributes.getFloat('alpha', 1.0);\n  const beta = node.attributes.getFloat('beta', 1.0);\n  return createAttributeWithCacheKey({transA, transB, alpha, beta, isOptionalC});\n};\n\nexport const parseGemmAttributesV7: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, false);\n\nexport const parseGemmAttributesV11: OperatorInitialization<GemmAttributes> = (node: Graph.Node): GemmAttributes =>\n    parseGemmAttributes(node, true);\n\nconst createGemmProgramInfoLoader = (inputs: Tensor[], attributes: GemmAttributes): ProgramInfoLoader => {\n  const metadata = {\n    name: 'Gemm',\n    inputNames: inputs.length === 3 ? ['A', 'B', 'C'] : ['A', 'B'],\n    inputTypes: inputs.length === 3 ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                                      [TextureType.unpacked, TextureType.unpacked],\n    key: attributes.cacheKey\n  };\n\n  return {...metadata, get: () => createGemmProgramInfo(metadata, inputs, attributes)};\n};\n\nconst createGemmProgramInfo =\n    (metadata: ProgramMetadata, inputs: Tensor[], attributes: GemmAttributes): ProgramInfo => {\n      const aShape = inputs[0].dims.slice();\n      const bShape = inputs[1].dims.slice();\n      const [M, N] = GemmUtil.getShapeOfGemmResult(\n          aShape, attributes.transA, bShape, attributes.transB, inputs.length === 3 ? inputs[2].dims : undefined);\n      const outputShape = [M, N];\n      if (!outputShape) {\n        throw new Error('Can\\'t use gemm on the given tensors');\n      }\n      let sharedDim = aShape[aShape.length - 1];\n      let line = '';\n      if (attributes.transA) {\n        sharedDim = aShape[0];\n      }\n      if (attributes.transA && attributes.transB) {\n        line = 'value += _A_T(a) * _B_T(b);';\n      } else if (attributes.transA && !attributes.transB) {\n        line = 'value += _A_T(a) * _B(b);';\n      } else if (!attributes.transA && attributes.transB) {\n        line = 'value += _A(a) * _B_T(b);';\n      } else if (!attributes.transA && !attributes.transB) {\n        line = 'value += _A(a) * _B(b);';\n      }\n      const rank = outputShape.length;\n      const declareC = inputs.length === 3 ? `int c[${inputs[2].dims.length}];` : '';\n      const broadcastC = inputs.length === 3 ? 'bcastIndices_C(indices, c);' : '';\n      const calculateC = inputs.length === 3 ? 'value += beta * _C(c);' : '';\n      const shaderSource = `\n      float process(int indices[${rank}]) {\n          int a[${rank}];\n          int b[${rank}];\n          ${declareC}\n\n          copyVec(indices, a);\n          copyVec(indices, b);\n          ${broadcastC}\n\n          float value = 0.0;\n          for (int k=0; k<${sharedDim}; ++k) {\n              a[${rank - 1}] = k;\n              b[${rank - 2}] = k;\n              ${line}\n          }\n\n          value = value * alpha;\n          ${calculateC}\n          return value;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        variables: [\n          {name: 'alpha', type: 'float', data: attributes.alpha}, {name: 'beta', type: 'float', data: attributes.beta}\n        ],\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[], attributes: GemmAttributes): void => {\n  if (!inputs) {\n    throw new Error('Input is missing');\n  }\n  if (attributes.isOptionalC && (inputs.length < 2 || inputs.length > 3)) {\n    throw new Error('Invaid input shape.');\n  }\n  if (!attributes.isOptionalC && inputs.length !== 3) {\n    throw new Error('Gemm requires 3 inputs');\n  }\n\n  // 'C' can be of dimensionality 1 or 2 only\n  if (inputs.length === 3 && inputs[2].dims.length !== 1 && inputs[2].dims.length !== 2) {\n    throw new Error('Invalid input shape of C');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64') ||\n      (inputs.length === 3 && inputs[2].type !== 'float32' && inputs[2].type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n\n  if ((inputs[0].type !== inputs[1].type) || (inputs.length === 3 && inputs[0].type !== inputs[2].type)) {\n    throw new Error('Input types are mismatched');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col (packed)',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed],\n  cacheHint,\n});\n\nconst createPackedIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n      const rowDim = 2;\n      const colDim = 3;\n      const rank = outputShape.length;\n      const im2colShape = [wshape[1] * wshape[2] * wshape[3], outputShape[2] * outputShape[3]];\n      const kernelSize = wshape[2] * wshape[3];\n      const unpackChannel = unpackFromChannel();\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      let unrolled = '';\n\n      for (let row = 0; row <= 1; row++) {\n        for (let col = 0; col <= 1; col++) {\n          unrolled += `\n            blockIndex = rc.x + ${col};\n            pos = rc.y + ${row};\n\n            if(blockIndex < ${im2colShape[1]} && pos < ${im2colShape[0]}) {\n              offsetY = int(blockIndex / (${outputShape[rank - 1]})) * ${attributes.strides[0]} - ${\n              attributes.pads[0]};\n              d0 = offsetY + ${attributes.dilations[0]} * (imod(pos, ${kernelSize}) / ${wshape[2]});\n\n              if(d0 < ${xshape[rowDim]} && d0 >= 0) {\n                offsetX = imod(blockIndex, ${outputShape[rank - 1]}) * ${attributes.strides[1]} - ${\n              attributes.pads[1]};\n                d1 = offsetX + ${attributes.dilations[1]} * imod(imod(pos, ${kernelSize}), ${wshape[2]});\n\n                if(d1 < ${xshape[colDim]} && d1 >= 0) {\n\n                  ch = int(float(pos)/ ${kernelSize}.);\n                    innerDims = vec2(d0, d1);\n                    result[${row * 2 + col}] = getChannel(\n                      getA(0, ch, int(innerDims.x),\n                      int(innerDims.y)), innerDims);\n                }\n              }\n            }\n\n          `;\n        }\n      }\n\n      const shaderSource = `\n      ${unpackChannel}\n\n      void main() {\n        ivec2 rc = getOutputCoords();\n          vec4 result = vec4(0.0);\n          int blockIndex, pos, offsetY, d0, offsetX, d1, ch;\n          vec2 innerDims;\n          ${unrolled}\n          ${glsl.output} = result;\n      }\n            `;\n      return {\n        ...metadata,\n        output: {dims: im2colShape, type: x.type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createPackedIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {ConvAttributes} from './conv';\n\nconst createIm2ColProgramMetadata = (cacheHint: string) => ({\n  name: 'Im2Col',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n  cacheHint,\n});\n\nconst createIm2ColProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, x: Tensor, w: Tensor,\n     outputShape: readonly number[], attributes: ConvAttributes): ProgramInfo => {\n      const xshape = x.dims;\n      const wshape = w.dims;\n\n      const rank = outputShape.length;\n      const im2colDims = calculateIm2ColDims(xshape, wshape, outputShape, 4);\n\n      const shaderSource = `\n        const int XC = ${xshape[1]};\n        const int XH = ${xshape[2]};\n        const int XW = ${xshape[3]};\n        const int KH = ${attributes.kernelShape[0]};\n        const int KW = ${attributes.kernelShape[1]};\n        const int dilationH = ${attributes.dilations[0]};\n        const int dilationW = ${attributes.dilations[1]};\n        const int strideH = ${attributes.strides[0]};\n        const int strideW = ${attributes.strides[1]};\n        const int padH = ${attributes.pads[0]};\n        const int padW = ${attributes.pads[1]};\n        const int KHKW = KH*KW;\n        const int XCKHKW = XC * KHKW;\n        const int outputChannels = 4;\n        vec4 process(int indices[${rank}]) {\n          int b  = indices[0]; // batch size\n          int oh = indices[1] * strideH - padH; //output height\n          int ow = indices[2] * strideW - padW; //output width\n          int p = indices[3] * outputChannels; //patch\n          vec4 value = vec4(0.0);\n          for(int i=0; i < outputChannels; ++i) {\n            if(p < XCKHKW) {\n              int patchC = p / KHKW;\n              int patchH = (p - patchC*KHKW) / KW;\n              int patchW = (p - patchC*KHKW) - patchH * KW;\n              int xh2 = oh + patchH * dilationH;\n              int xw2 = ow + patchW * dilationW;\n              int x[${xshape.length}];\n              x[0] = b;\n              x[1] = patchC;\n              x[2] = xh2;\n              x[3] = xw2;\n              if(xh2 >= 0 &&\n                  xh2 < XH &&\n                  xw2 >= 0 &&\n                  xw2 < XW) {\n                value[i] = _X(x);\n              }\n            }\n            ++p;\n          }\n          return value;\n        }\n        `;\n      return {\n        ...metadata,\n        output: {dims: im2colDims, type: x.type, textureType: TextureType.packedLastDimension},\n        shaderSource\n      };\n    };\n\nexport const createIm2ColProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, x: Tensor, w: Tensor, outputShape: readonly number[],\n     attributes: ConvAttributes): ProgramInfoLoader => {\n      const metadata = createIm2ColProgramMetadata(attributes.cacheKey);\n      return {\n        ...metadata,\n        get: () => createIm2ColProgramInfo(inferenceHandler, metadata, x, w, outputShape, attributes)\n      };\n    };\n\n\nexport const calculateIm2ColDims =\n    (inputShape: readonly number[], kernelShape: readonly number[], outputShape: readonly number[], channels = 4):\n        number[] =>\n            [outputShape[0], outputShape[2], outputShape[3],\n             Math.ceil(inputShape[1] * kernelShape[2] * kernelShape[3] / channels)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport interface ImageScalerAttributes extends AttributeWithCacheKey {\n  scale: number;\n  bias: number[];\n}\n\nexport const imageScaler: OperatorImplementation<ImageScalerAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output =\n          inferenceHandler.run(createImageScalerProgramInfoLoader(inferenceHandler, inputs, attributes), inputs);\n      return [output];\n    };\n\nexport const parseImageScalerAttributes: OperatorInitialization<ImageScalerAttributes> =\n    (node: Graph.Node): ImageScalerAttributes => {\n      const scale = node.attributes.getFloat('scale');\n      const bias = node.attributes.getFloats('bias');\n      return createAttributeWithCacheKey({scale, bias});\n    };\n\nconst imageScalerProgramMetadata = {\n  name: 'ImageScaler',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createImageScalerProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[], attributes: ImageScalerAttributes):\n        ProgramInfo => {\n          const outputShape = inputs[0].dims.slice();\n          const rank = outputShape.length;\n          const getBiasMethod = createGetBiasMethod(attributes.bias.length);\n          const shaderSource = `\n      ${getBiasMethod}\n      float process(int indices[${rank}]) {\n        return _X(indices) * scale + getBias(bias, indices[1]);\n      }`;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            variables: [\n              {name: 'bias', type: 'float', arrayLength: attributes.bias.length, data: attributes.bias},\n              {name: 'scale', type: 'float', data: attributes.scale}\n            ],\n            shaderSource\n          };\n        };\n\nconst createImageScalerProgramInfoLoader =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ImageScalerAttributes): ProgramInfoLoader => {\n      const metadata = {...imageScalerProgramMetadata, cacheHint: attributes.cacheKey};\n      return {...metadata, get: () => createImageScalerProgramInfo(handler, metadata, inputs, attributes)};\n    };\n\nconst createGetBiasMethod = (numChannels: number): string => {\n  const codeLines: string[] = [`float getBias(float bias[${numChannels}], int channel) {`];\n  for (let i = 0; i < numChannels; ++i) {\n    if (i === 0) {\n      codeLines.push(\n          '\\t' +\n          `if (channel == ${i}) { return bias[${i}]; }`);\n    } else if (i === numChannels - 1) {\n      codeLines.push(\n          '\\t' +\n          `else { return bias[${i}]; }`);\n    } else {\n      codeLines.push(\n          '\\t' +\n          `else if (channel == ${i}) { return bias[${i}]; }`);\n    }\n  }\n  codeLines.push(\n      '\\t' +\n      '}');\n  return codeLines.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('ImageScaler requires 1 input.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Invalid input shape.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport const instanceNormalization: OperatorImplementation<number> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], epsilon: number): Tensor[] => {\n      validateInputs(inputs);\n\n      const meanAndVariance = inferenceHandler.run(createMeanAndVarianceProgramInfoLoader(inputs[0]), inputs);\n      const output = inferenceHandler.run(\n          createComputeOutputProgramInfoLoader(inferenceHandler, inputs[0], epsilon, meanAndVariance.dims),\n          [inputs[0], meanAndVariance, inputs[1], inputs[2]]);\n      return [output];\n    };\n\nexport const parseInstanceNormalizationAttributes: OperatorInitialization<number> = (node: Graph.Node): number =>\n    node.attributes.getFloat('epsilon', 1e-5);\n\nconst meanAndVarianceProgramMetadata = {\n  name: 'InstanceNormalization_MeanAndVariance',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst createMeanAndVarianceProgramInfo = (metadata: ProgramMetadata, input: Tensor): ProgramInfo => {\n  const xDims = input.dims.slice();\n  const channel = xDims[1];\n  const channelSize = xDims[2] * xDims[3];\n  const outputShape = [xDims[0], channel];\n\n  const shaderSource = `\n      vec4 process(int[2] indices) {\n        vec4 v = vec4(0.0);\n        int a[4];\n        a[0] = indices[0];\n        a[1] = indices[1];\n        float temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += x;\n          }\n        }\n        float mean = temp / float(${channelSize});\n        temp = 0.0;\n        for(int a2=0; a2<${xDims[2]}; a2++) {\n          a[2] = a2;\n          for(int a3=0; a3<${xDims[3]}; a3++) {\n            a[3] = a3;\n            float x = _X(a);\n            temp += (x - mean) * (x - mean);\n          }\n        }\n        v.r = mean;\n        v.g = temp / float(${channelSize});\n\n        return v;\n      }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: input.type, textureType: TextureType.packedLastDimension},\n    shaderSource\n  };\n};\n\nconst createMeanAndVarianceProgramInfoLoader = (input: Tensor): ProgramInfoLoader => ({\n  ...meanAndVarianceProgramMetadata,\n  get: () => createMeanAndVarianceProgramInfo(meanAndVarianceProgramMetadata, input)\n});\n\nconst computeOutputProgramMetadata = {\n  name: 'InstanceNormalization_ComputeOutput',\n  inputNames: ['X', 'MeanAndVariance', 'Scale', 'B'],\n  inputTypes: [TextureType.unpacked, TextureType.packedLastDimension, TextureType.unpacked, TextureType.unpacked],\n};\n\nconst createComputeOutputProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, epsilon: number,\n     meanAndVarianceShape: readonly number[]): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(meanAndVarianceShape, TextureType.packedLastDimension);\n      const [meanAndVarianceWidth, meanAndVarianceHeight] = [textureWidth / 4, textureHeight];\n      const shaderSource = `\n      vec4 get_MeanAndVariance(int[2] mv) {\n        int offset = indicesToOffset_MeanAndVariance(mv);\n        vec2 coords = offsetToCoords(offset, ${meanAndVarianceWidth}, ${meanAndVarianceHeight});\n        return ${glsl.texture2D}(MeanAndVariance, coords);\n      }\n\n      float process(int[4] indices) {\n        int mv[2];\n        mv[0] = indices[0];\n        mv[1] = indices[1];\n        vec4 mean_and_variance = get_MeanAndVariance(mv);\n        float mean = mean_and_variance.r;\n        float variance = mean_and_variance.g;\n\n        int sb[1];\n        sb[0] = indices[1];\n        float scale = _Scale(sb);\n        float b = _B(sb);\n\n        return scale * (_X(indices) - mean) / sqrt(variance + epsilon) + b;\n      }`;\n      return {\n        ...metadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        variables: [{name: 'epsilon', type: 'float', data: epsilon}],\n        shaderSource\n      };\n    };\n\nconst createComputeOutputProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, epsilon: number, meanAndVarianceShape: readonly number[]):\n        ProgramInfoLoader => {\n          const metadata = {...computeOutputProgramMetadata, cacheHint: `${epsilon}`};\n          return {\n            ...metadata,\n            get: () => createComputeOutputProgramInfo(inferenceHandler, metadata, input, epsilon, meanAndVarianceShape)\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 3) {\n    throw new Error('InstanceNormalization requires 3 inputs.');\n  }\n\n  const X = inputs[0];\n  const scale = inputs[1];\n  const B = inputs[2];\n\n  // input should at least have three dimensions - N,C,dim1,...,dimn\n  // other inputs can have only one dimensions\n  if (X.dims.length < 3 || scale.dims.length !== 1 || B.dims.length !== 1) {\n    throw new Error('Invalid input shape.');\n  }\n  if (scale.dims[0] !== X.dims[1] || B.dims[0] !== X.dims[1]) {\n    throw new Error('Input shapes are mismatched.');\n  }\n  if ((X.type !== 'float32' && X.type !== 'float64') || (scale.type !== 'float32' && scale.type !== 'float64') ||\n      (B.type !== 'float32' && B.type !== 'float64')) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[0].dims.length !== 4) {\n    throw new Error('Only support 4-D input shape.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil} from '../../../util';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\n\nimport {getActicationSnippet, InternalActivationAttributes} from './fuse-utils';\nimport {getBiasForMatmul} from './matmul';\n\nconst createPackedMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul (packed)',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.packed, TextureType.packed, TextureType.packed] :\n                        [TextureType.packed, TextureType.packed],\n  cacheHint\n});\n\nconst createPackedMatmulProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, metadata: ProgramMetadata, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfo => {\n      const hasBias = inputs.length > 2;\n      const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n      const aShape = inputs[0].dims;\n      const bShape = inputs[1].dims;\n      const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n      const isBroadcast = !ShapeUtil.areEqual(inputs[0].dims, inputs[1].dims);\n\n      if (!outputShape) {\n        throw new Error('Can\\'t use matmul on the given tensors');\n      }\n      const sharedDim = aShape[aShape.length - 1];\n      const sharedDimIndex = Math.ceil(sharedDim / 2);\n      const aRank = aShape.length;\n      const bRank = bShape.length;\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const coordsDataType = getCoordsDataType(outputShape.length);\n      const outRank = outputShape.length;\n      const allGlChannels = getGlChannels();\n      const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n      const getBiasForMatmulSnippet =\n          hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, true)}` : '';\n\n      const getBcastedSamplerForMatmulSnippet =\n          isBroadcast ? `${getBcastSamplerForMatmul(coordsDataType, allGlChannels, inputs, outputShape)}` : '';\n\n      const getSamplerAInLoopSnippet = isBroadcast ? 'getAAtOutCoordsMatmul(i)' : `getA(${getA(allGlChannels, aRank)})`;\n      const getSamplerBInLoopSnippet = isBroadcast ? 'getBAtOutCoordsMatmul(i)' : `getB(${getB(allGlChannels, bRank)})`;\n      const getOutputCoordsSnippet = isBroadcast ? '' : `${coordsDataType} rc =\n          getOutputCoords(); int lastDim = rc.${allGlChannels[outRank - 1]}; rc.${allGlChannels[outRank - 1]} =\n          rc.${allGlChannels[outRank - 2]}; rc.${allGlChannels[outRank - 2]} = lastDim;\n      `;\n      const shaderSource = `\n            ${getBcastedSamplerForMatmulSnippet}\n            ${getBiasForMatmulSnippet}\n            ${activationFunction}\n            void main() {\n              ${getOutputCoordsSnippet}\n\n              vec4 value = vec4(0);\n              for (int i = 0; i < ${sharedDimIndex}; i++) {\n                vec4 a = ${getSamplerAInLoopSnippet};\n                vec4 b = ${getSamplerBInLoopSnippet};\n\n                value += (a.rrbb * b.rgrg);\n                value += (a.ggaa * b.baba);\n              }\n              ${processBias}\n              ${applyActivation}\n              ${glsl.output} = value;\n            }`;\n      return {\n        ...metadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        shaderSource,\n        hasMain: true\n      };\n    };\n\nexport const createPackedMatmulProgramInfoLoader =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[],\n     activationAttributes: InternalActivationAttributes): ProgramInfoLoader => {\n      const metadata = createPackedMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n      return {\n        ...metadata,\n        get: () => createPackedMatmulProgramInfo(inferenceHandler, metadata, inputs, activationAttributes)\n      };\n    };\n\nfunction getBcastSamplerForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inputs: Tensor[], outShape: readonly number[]): string {\n  let unpackedACoordsSnippet = [];\n  let unpackedBCoordsSnippet = [];\n\n  const inAShape = inputs[0].dims;\n  const inBShape = inputs[1].dims;\n\n  const inARank = inAShape.length;\n  const inBRank = inBShape.length;\n\n  const outRank = outShape.length;\n  const rankADiff = outRank - inARank;\n  const rankBDiff = outRank - inBRank;\n\n  unpackedACoordsSnippet = inAShape.map((s, i) => `coords.${allGlChannels[i + rankADiff]}`);\n  unpackedACoordsSnippet[inARank - 1] = 'i*2';\n  unpackedACoordsSnippet.join(', ');\n  unpackedBCoordsSnippet = inBShape.map((s, i) => `coords.${allGlChannels[i + rankBDiff]}`);\n  unpackedBCoordsSnippet[inBRank - 2] = 'i*2';\n  unpackedBCoordsSnippet.join(', ');\n\n  const broadcastADims = BroadcastUtil.getBroadcastDims(inAShape, outShape);\n  const broadcastBDims = BroadcastUtil.getBroadcastDims(inBShape, outShape);\n\n  const coordsASnippet = broadcastADims.map(d => `coords.${allGlChannels[d + rankADiff]} = 0;`).join('\\n');\n  const coordsBSnippet = broadcastBDims.map(d => `coords.${allGlChannels[d + rankBDiff]} = 0;`).join('\\n');\n  const swapDimSnippet = `int lastDim = coords.${allGlChannels[outRank - 1]};\n  coords.${allGlChannels[outRank - 1]} = coords.${allGlChannels[outRank - 2]};\n  coords.${allGlChannels[outRank - 2]} = lastDim;`;\n\n  const getBcastSamplerMatmulSource = `\nvec4 getAAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsASnippet}\n  vec4 outputValue = getA(${unpackedACoordsSnippet});\n  return outputValue;\n}\n\nvec4 getBAtOutCoordsMatmul(int i) {\n  ${coordsDataType} coords = getOutputCoords();\n  ${swapDimSnippet}\n  ${coordsBSnippet}\n  vec4 outputValue = getB(${unpackedBCoordsSnippet});\n  return outputValue;\n}`;\n\n  return getBcastSamplerMatmulSource;\n}\n\nfunction getA(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += `rc.${allGlChannels[rank - 2]}, ` +\n      'i*2';\n  return res;\n}\n\nfunction getB(allGlChannels: string[], rank: number): string {\n  let res = '';\n  for (let i = 0; i < rank - 2; i++) {\n    res += `rc.${allGlChannels[i]}, `;\n  }\n  res += 'i*2, ' +\n      `rc.${allGlChannels[rank - 1]}`;\n  return res;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {BroadcastUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\nimport {getCoordsDataType, getGlChannels} from '../utils';\nimport {getActicationSnippet, InternalActivationAttributes, parseInternalActivationAttributes} from './fuse-utils';\nimport {createPackedMatmulProgramInfoLoader} from './matmul-pack';\n\nexport const matMul: OperatorImplementation<InternalActivationAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: InternalActivationAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      if (inferenceHandler.session.pack) {\n        return [inferenceHandler.run(\n            createPackedMatmulProgramInfoLoader(inferenceHandler, inputs, attributes), inputs)];\n      } else {\n        return [inferenceHandler.run(createMatmulProgramInfoLoader(inputs, attributes), inputs)];\n      }\n    };\n\nexport const parseMatMulAttributes: OperatorInitialization<InternalActivationAttributes> =\n    (node: Graph.Node): InternalActivationAttributes => parseInternalActivationAttributes(node.attributes);\n\nconst createMatmulProgramMetadata = (hasBias: boolean, cacheHint: string) => ({\n  name: 'MatMul',\n  inputNames: hasBias ? ['A', 'B', 'Bias'] : ['A', 'B'],\n  inputTypes: hasBias ? [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked] :\n                        [TextureType.unpacked, TextureType.unpacked],\n  cacheHint\n});\n\nfunction createMatmulProgramInfo(\n    metadata: ProgramMetadata, inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfo {\n  const aShape = inputs[0].dims;\n  const bShape = inputs[1].dims;\n  const outputShape = BroadcastUtil.calcShape(aShape, bShape, true);\n  if (!outputShape) {\n    throw new Error('Can\\'t use matmul on the given tensors');\n  }\n  const coordsDataType = getCoordsDataType(outputShape.length);\n  const allGlChannels = getGlChannels();\n  const {activationFunction, applyActivation} = getActicationSnippet(activationAttributes);\n\n  const hasBias = inputs.length > 2;\n  const processBias = hasBias ? 'value += getBiasForMatmul();' : '';\n  const getBiasForMatmulSnippet =\n      hasBias ? `${getBiasForMatmul(coordsDataType, allGlChannels, inputs[2].dims, outputShape, false)}` : '';\n\n  const rank = outputShape.length;\n  const arank = aShape.length;\n  const brank = bShape.length;\n  const sharedDim = aShape[aShape.length - 1];\n  const shaderSource = `\n    ${activationFunction}\n    ${getBiasForMatmulSnippet}\n    float process(int indices[${rank}]) {\n        int a[${arank}];\n        int b[${brank}];\n        bcastMatmulIndices_A(indices, a);\n        bcastMatmulIndices_B(indices, b);\n\n        float value;\n        for (int k=0; k<${sharedDim}; ++k) {\n            a[${arank - 1}] = k;\n            b[${brank - 2}] = k;\n            value += _A(a) * _B(b);\n        }\n        ${processBias}\n        ${applyActivation}\n        return value;\n    }`;\n  return {\n    ...metadata,\n    output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n    shaderSource,\n  };\n}\n\nexport function createMatmulProgramInfoLoader(\n    inputs: Tensor[], activationAttributes: InternalActivationAttributes): ProgramInfoLoader {\n  const metadata = createMatmulProgramMetadata(inputs.length > 2, activationAttributes.activationCacheKey);\n  return {...metadata, get: () => createMatmulProgramInfo(metadata, inputs, activationAttributes)};\n}\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('MatMul requires 2 inputs.');\n  }\n\n  if (inputs[0].dims[inputs[0].dims.length - 1] !== inputs[1].dims[inputs[1].dims.length - 2]) {\n    throw new Error('shared dimension does not match.');\n  }\n\n  if ((inputs[0].type !== 'float32' && inputs[0].type !== 'float64') ||\n      (inputs[1].type !== 'float32' && inputs[1].type !== 'float64')) {\n    throw new Error('inputs should be float type');\n  }\n\n  if (inputs[0].type !== inputs[1].type) {\n    throw new Error('inputs types should match');\n  }\n};\n\nexport function getBiasForMatmul(\n    coordsDataType: string, allGlChannels: readonly string[], inShape: readonly number[], outShape: readonly number[],\n    isPacked: boolean): string {\n  let unpackedCoordsSnippet = '';\n  const inRank = inShape.length;\n  const outRank = outShape.length;\n  const rankDiff = outRank - inRank;\n  if (outRank < 2 && inRank > 0) {\n    unpackedCoordsSnippet = 'coords';\n  } else {\n    unpackedCoordsSnippet = inShape.map((s, i) => `coords.${allGlChannels[i + rankDiff]}`).join(', ');\n  }\n  const broadcastDims = BroadcastUtil.getBroadcastDims(inShape, outShape);\n  const coordsSnippet = broadcastDims.map(d => `coords.${allGlChannels[d + rankDiff]} = 0;`).join('\\n');\n  const inSize = ShapeUtil.size(inShape);\n  const isInputScalar = inSize === 1;\n  let output = 'vec4(outputValue.xx, outputValue.yy)';\n  if (isInputScalar) {\n    output = 'vec4(outputValue.x)';\n  }\n  const getBiasForMatmulSource = isPacked ? `\nvec4 getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  vec4 outputValue = getBias(${unpackedCoordsSnippet});\n  return ${output};\n}` :\n                                            `\nfloat getBiasForMatmul() {\n  ${coordsDataType} coords = getOutputCoords();\n  ${coordsSnippet}\n  return getBias(coords.x);\n}`;\n\n  return getBiasForMatmulSource;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {getChannels} from './packing-utils';\n\nconst packProgramMetadata = {\n  name: 'pack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpackedReversed]\n};\n\nconst createPackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const inputShape = input.dims;\n\n  const inputRank = inputShape.length;\n  // createTextureLayoutFromShape won't change output rank. Need to verify by running tests\n  const outputRank = input.dims.length;\n\n  const coordsDataType = getCoordsDataType(outputRank);\n  const channels = getChannels('rc', outputRank);\n  const setup = getSetup(outputRank, channels, inputShape[inputShape.length - 2], inputShape[inputShape.length - 1]);\n\n  let reversedInputWH;\n  if (inputRank === 0) {\n    reversedInputWH = [1, 1];\n  } else if (inputRank === 1) {\n    reversedInputWH = [inputShape[0], 1];\n  } else {\n    reversedInputWH = [inputShape[outputRank - 1], inputShape[outputRank - 2]];\n  }\n  const outOfBoundsCondition = getOutOfBoundsCondition(outputRank, reversedInputWH, channels);\n  const output = getOutput(inputShape, channels);\n\n  const shaderSource = `\n        void main() {\n          ${coordsDataType} rc = getOutputCoords();\n\n          if(${outOfBoundsCondition}) {\n            ${glsl.output} = vec4(0);\n          } else {\n            ${setup}\n\n            ${glsl.output} = vec4(${output});\n          }\n        }\n      `;\n  return {\n    ...packProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.packed},\n    shaderSource\n  };\n};\n\nexport const createPackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...packProgramMetadata, get: () => createPackProgramInfo(handler, input)});\n\n/**\n * check output coordinate location and return false if it is outside input's width/height boundary\n */\nfunction getOutOfBoundsCondition(rank: number, shape: readonly number[], dims: string[]): string {\n  if (rank === 0) {\n    return 'false';\n  }\n  if (rank === 1) {\n    return `rc > ${shape[0]}`;\n  }\n\n  let cond = '';\n  for (let i = rank - 2; i < rank; i++) {\n    cond += `${dims[i]} >= ${shape[i - rank + 2]}`;\n    if (i < rank - 1) {\n      cond += '||';\n    }\n  }\n\n  return cond;\n}\n\n/**\n * code snippet to sample input texture with output coordiantes\n */\nfunction getOutput(shape: readonly number[], dims: string[]): string {\n  const rank = shape.length;\n\n  if (rank === 0) {\n    return 'getA(), 0, 0, 0';\n  }\n\n  if (rank === 1) {\n    return `getA(rc),\n            rc + 1 >= ${shape[0]} ? 0. : getA(rc + 1),\n            0, 0`;\n  }\n\n  const coord00 = 'r, c';\n  const coord01 = 'r, cp1';\n  const coord10 = 'rp1, c';\n  const coord11 = 'rp1, cp1';\n  let D = '';\n  if (rank > 2) {\n    for (let i = 0; i < rank - 2; ++i) {\n      D = D + `${dims[i]},`;\n    }\n  }\n  return `getA(${D}${coord00}),\n          rEdge ? 0. : getA(${D}${coord10}),\n          cEdge ? 0. : getA(${D}${coord01}),\n          rEdge || cEdge ? 0. : getA(${D}${coord11})`;\n}\n\n/**\n * code snippet to setup 4 coordinates and edge conditions\n */\nfunction getSetup(rank: number, dims: string[], rows: number, cols: number): string {\n  if (rank === 0 || rank === 1) {\n    return '';\n  }\n  // rank >= 2 for width+height pack.\n  else {\n    const setup = `\n    int r = ${dims[rank - 2]};\n    int c = ${dims[rank - 1]};\n    int rp1 = ${dims[rank - 2]} + 1;\n    int cp1 = ${dims[rank - 1]} + 1;\n    bool rEdge = rp1 >= ${cols};\n    bool cEdge = cp1 >= ${rows};\n    `;\n    return setup;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlChannels} from '../utils';\n\nexport function getVecChannels(name: string, rank: number): string[] {\n  return getGlChannels(rank).map(d => `${name}.${d}`);\n}\n\nexport function getChannels(name: string, rank: number): string[] {\n  if (rank === 1) {\n    return [name];\n  }\n  return getVecChannels(name, rank);\n}\n\nexport function unpackFromChannel(): string {\n  return `\n    float getChannel(vec4 frag, int dim) {\n      int modCoord = imod(dim, 2);\n      return modCoord == 0 ? frag.r : frag.g;\n    }\n\n    float getChannel(vec4 frag, vec2 innerDims) {\n      vec2 modCoord = mod(innerDims, 2.);\n      return modCoord.x == 0. ?\n        (modCoord.y == 0. ? frag.r : frag.g) :\n        (modCoord.y == 0. ? frag.b : frag.a);\n    }\n  `;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl, Glsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface PadAttributes extends AttributeWithCacheKey {\n  readonly mode: string;\n  readonly pads: number[];\n  readonly value: number;\n}\n\nconst padProgramMetadata = {\n  name: 'Pad',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const pad: OperatorImplementation<PadAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...padProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPadProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parsePadAttributes: OperatorInitialization<PadAttributes> = (node: Graph.Node): PadAttributes => {\n  const mode = node.attributes.getString('mode', 'constant');\n  const value = node.attributes.getFloat('value', 0.0);\n  const pads = node.attributes.getInts('pads');\n  return createAttributeWithCacheKey({mode, value, pads});\n};\n\nconst createPadProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: PadAttributes): ProgramInfo => {\n      const outputShape = ShapeUtil.padShape(inputs[0].dims.slice(), attributes.pads);\n      const rank = outputShape.length;\n      const padFunction = getPadFunction(inferenceHandler, inputs[0], attributes);\n      const shaderSource = `\n      ${padFunction}\n      float process(int[${rank}] indices) {\n          return padA(indices);\n      }`;\n      return {\n        name: 'Pad',\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pad requires 1 input');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst getPadFunction = (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: PadAttributes): string => {\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  const [width, height] = inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n  const strides = ShapeUtil.computeStrides(input.dims);\n\n  switch (attributes.mode) {\n    case 'constant':\n      return getPadConstant(glsl, input.dims, strides, width, height, attributes.pads, attributes.value);\n    case 'reflect':\n      return getPadReflect(glsl, input.dims, strides, width, height, attributes.pads);\n    case 'edge':\n      return getPadEdge(glsl, input.dims, strides, width, height, attributes.pads);\n    default:\n      throw new Error('Invalid mode');\n  }\n};\n\nconst getPadConstant =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[],\n     value: number): string => {\n      const rank = shape.length;\n      let block = '';\n      for (let i = rank - 1; i >= 0; --i) {\n        block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  return constant;\n        if (k >= ${shape[i]}) return constant;\n        offset += k * ${strides[i]};\n        `;\n      }\n      return `\n      float padA(int m[${rank}]) {\n        const float constant = float(${value});\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n    };\n\nconst getPadReflect =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0) { k = -k; }\n        {\n          const int _2n_1 = ${2 * (shape[i] - 1)};\n          k = int( mod( float(k), float(_2n_1) ) ) ;\n          if(k >= ${shape[i]}) { k = _2n_1 - k; }\n        }\n        offset += k * ${strides[i]};\n        `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n\nconst getPadEdge =\n    (glsl: Glsl, shape: readonly number[], strides: readonly number[], width: number, height: number, pads: number[]):\n        string => {\n          const rank = shape.length;\n\n          let block = '';\n          for (let i = rank - 1; i >= 0; --i) {\n            block += `\n        k = m[${i}] - ${pads[i]};\n        if (k < 0)  k = 0;\n        if (k >= ${shape[i]}) k = ${shape[i] - 1};\n        offset += k * ${strides[i]};\n      `;\n          }\n          return `\n      float padA(int m[${rank}]) {\n        int offset = 0;\n        int k = 0;\n        ${block}\n        vec2 coords = offsetToCoords(offset, ${width}, ${height});\n        float value = getColorAsFloat(${glsl.texture2D}(A, coords));\n        return value;\n      }\n      `;\n        };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {PoolConvUtil, ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface AveragePoolAttributes extends AttributeWithCacheKey {\n  readonly autoPad: string;\n  readonly ceilMode: number;\n  readonly countIncludePad: boolean;\n  readonly kernelShape: number[];\n  readonly strides: number[];\n  readonly pads: number[];\n}\n\nexport const averagePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'AveragePool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n\n      // TODO: support attribute 'ceil_mode'\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for AveragePool');\n      }\n\n      return createAttributeWithCacheKey({autoPad, ceilMode, countIncludePad, kernelShape, strides, pads});\n    };\n\nconst createAveragePoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: AveragePoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const kernelSize = ShapeUtil.size(attributes.kernelShape);\n          const op1 = 'value += _X(x);';\n          let op2 = '';\n          if (attributes.countIncludePad) {\n            op2 += `value /= float(${kernelSize});`;\n          } else {\n            op2 += `value /= float(${kernelSize} - pad);`;\n          }\n          const poolingCode = generatePoolingCode(inputs[0].dims, attributes, op1, op2, '0.0');\n          const shaderSource = `\n        ${poolingCode}\n      `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nexport const globalAveragePool: OperatorImplementation<AveragePoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: AveragePoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata = {\n        name: 'GlobalAveragePool',\n        inputNames: ['X'],\n        inputTypes: [TextureType.unpacked],\n        cacheHint: `${attributes.countIncludePad}`\n      };\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createAveragePoolProgramInfo(inputs, metadata, true, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseGlobalAveragePoolAttributes: OperatorInitialization<AveragePoolAttributes> =\n    (node: Graph.Node): AveragePoolAttributes => {\n      const countIncludePad = (node.attributes.getInt('count_include_pad', 0) === 0 ? false : true);\n      return createAttributeWithCacheKey(\n          {autoPad: '', ceilMode: 0, countIncludePad, kernelShape: [], strides: [], pads: []});\n    };\n\nexport interface MaxPoolAttributes extends AveragePoolAttributes {\n  readonly storageOrder: number;\n}\n\nexport const maxPool: OperatorImplementation<MaxPoolAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: MaxPoolAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const metadata =\n          {name: 'MaxPool', inputNames: ['X'], inputTypes: [TextureType.unpacked], cacheHint: attributes.cacheKey};\n      const output = inferenceHandler.run(\n          {...metadata, get: () => createMaxPoolProgramInfo(inputs, metadata, false, attributes)}, inputs);\n      return [output];\n    };\n\nexport const parseMaxPoolAttributes: OperatorInitialization<MaxPoolAttributes> =\n    (node: Graph.Node): MaxPoolAttributes => {\n      const autoPad = node.attributes.getString('auto_pad', 'NOTSET');\n      const ceilMode = node.attributes.getInt('ceil_mode', 0);\n      const kernelShape = node.attributes.getInts('kernel_shape');\n      const strides = node.attributes.getInts('strides', []);\n      const pads = node.attributes.getInts('pads', []);\n      const storageOrder = node.attributes.getInt('storage_order', 0);\n\n      // TODO: support attribute 'ceil_mode' and 'storage_order'\n      if (storageOrder !== 0) {\n        throw new Error('column major storage order is not yet supported for MaxPool');\n      }\n      if (ceilMode !== 0) {\n        throw new Error('using ceil() in shape computation is not yet supported for MaxPool');\n      }\n\n      return createAttributeWithCacheKey(\n          {autoPad, ceilMode, countIncludePad: false, kernelShape, strides, pads, storageOrder});\n    };\n\nconst createMaxPoolProgramInfo =\n    (inputs: Tensor[], metadata: ProgramMetadata, isGlobalOperator: boolean, attributes: MaxPoolAttributes):\n        ProgramInfo => {\n          const inputShape = inputs[0].dims.slice();\n          PoolConvUtil.adjustPoolAttributes(\n              isGlobalOperator, inputShape, attributes.kernelShape, attributes.strides, attributes.pads);\n          const outputShape = PoolConvUtil.computePoolOutputShape(\n              isGlobalOperator, inputShape, attributes.strides, attributes.kernelShape, attributes.pads,\n              attributes.autoPad);\n          const op1 = `\n      value = max(_X(x), value);\n    `;\n          const op2 = '';\n          const poolingCode = generatePoolingCode(inputShape, attributes, op1, op2, '-1e5');\n          const shaderSource = `\n      ${poolingCode}\n    `;\n          return {\n            ...metadata,\n            output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst globalMaxPoolAttributes = {\n  autoPad: '',\n  ceilMode: 0,\n  countIncludePad: false,\n  kernelShape: [],\n  strides: [],\n  pads: [],\n  storageOrder: 0,\n  cacheKey: ''\n};\n\nconst globalMaxPoolMetadata = {\n  name: 'GlobalMaxPool',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const globalMaxPool = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  const output = inferenceHandler.run(\n      {\n        ...globalMaxPoolMetadata,\n        get: () => createMaxPoolProgramInfo(inputs, globalMaxPoolMetadata, true, globalMaxPoolAttributes)\n      },\n      inputs);\n  return [output];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Pool ops requires 1 input.');\n  }\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n};\n\nconst generatePoolingCode =\n    (inputDims: readonly number[], attributes: AveragePoolAttributes, op1: string, op2: string, start: string):\n        string => {\n          const rank = inputDims.length;\n          if (attributes.kernelShape.length <= 2) {\n            const kw = attributes.kernelShape[attributes.kernelShape.length - 1];\n            const sw = attributes.strides[attributes.strides.length - 1];\n            const pwStart = attributes.pads[attributes.pads.length / 2 - 1];\n            const pwEnd = attributes.pads[attributes.pads.length - 1];\n            const dimW = inputDims[rank - 1];\n            let codeW = '';\n            let codeH = '';\n            let codeHEnd = '';\n            if (pwStart + pwEnd !== 0) {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            if (x[${rank} - 1] < 0 || x[${rank} - 1] >= ${dimW}) {\n              pad++;\n              continue;\n            }\n            ${op1}\n          }`;\n            } else {\n              codeW = `\n          for (int i = 0; i < ${kw}; i++) {\n            x[${rank} - 1] = indices[${rank} - 1] * ${sw} - ${pwStart} + i;\n            ${op1}\n          }`;\n            }\n\n            if (attributes.kernelShape.length === 2) {\n              const kh = attributes.kernelShape[attributes.kernelShape.length - 2];\n              const sh = attributes.strides[attributes.strides.length - 2];\n              const phStart = attributes.pads[attributes.pads.length / 2 - 2];\n              const phEnd = attributes.pads[attributes.pads.length - 2];\n              const dimH = inputDims[rank - 2];\n              if (phStart + phEnd !== 0) {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n              if (x[${rank} - 2] < 0 || x[${rank} - 2] >= ${dimH}) {\n                pad+= ${kw};\n                continue;\n              }\n          `;\n              } else {\n                codeH = `\n            for (int j = 0; j < ${kh}; j++) {\n              x[${rank} - 2] = indices[${rank} - 2] * ${sh} - ${phStart} + j;\n            `;\n              }\n              codeHEnd = `\n          }\n        `;\n            }\n\n            const poolingCode = `\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n\n          float value = ${start};\n          int pad = 0;\n          ${codeH}\n          ${codeW}\n          ${codeHEnd}\n          ${op2}\n          return value;\n        }\n      `;\n            return poolingCode;\n          } else {\n            const kernelSize = ShapeUtil.size(attributes.kernelShape);\n            const kernelStrides = ShapeUtil.computeStrides(attributes.kernelShape);\n            const stridesRank = kernelStrides.length;\n            const padsRank = attributes.pads.length;\n            const offsetToIndicesFunction = offsetToIndices(stridesRank);\n            const copyInputDims = copyArray(inputDims, 'inputDims');\n            const copyPads = copyArray(attributes.pads, 'pads');\n            const copyKernelStrides = copyArray(kernelStrides, 'kernelStrides');\n            const copyStrides = copyArray(attributes.strides, 'strides');\n            const hasPads = attributes.pads.reduce((sum, cur) => sum + cur);\n            let padCode = '';\n            if (hasPads) {\n              padCode = `\n            if (x[j] >= inputDims[j] || x[j] < 0) {\n              pad++;\n              isPad = true;\n              break;\n            }\n          }\n          if (!isPad) {\n            ${op1}\n          }`;\n            } else {\n              padCode = `\n          }\n          ${op1}\n        `;\n            }\n            const poolingCode = `\n        ${offsetToIndicesFunction}\n        float process(int indices[${rank}]) {\n          int x[${rank}];\n          copyVec(indices, x);\n          int offset[${stridesRank}];\n          int pads[${padsRank}];\n          int inputDims[${rank}];\n          int kernelStrides[${stridesRank}];\n          int strides[${stridesRank}];\n          ${copyPads}\n          ${copyInputDims}\n          ${copyStrides}\n          ${copyKernelStrides}\n\n          float value = ${start};\n          int pad = 0;\n          bool isPad = false;\n          for (int i = 0; i < ${kernelSize}; i++) {\n            offsetToIndices(i, kernelStrides, offset);\n            isPad = false;\n            for (int j = ${rank} - ${stridesRank}; j < ${rank}; j++) {\n              x[j] = indices[j] * strides[j - ${rank} + ${stridesRank}]\n                + offset[j - ${rank} + ${stridesRank}] - pads[j - 2];\n              ${padCode}\n          }\n          ${op2}\n\n          return value;\n        }\n      `;\n            return poolingCode;\n          }\n        };\n\nconst copyArray = (array: readonly number[], arrayName: string): string => {\n  let block = '';\n  for (let i = 0; i < array.length; i++) {\n    block += `\n      ${arrayName}[${i}] = ${array[i]};\n    `;\n  }\n  return block;\n};\n\nconst offsetToIndices = (rank: number): string => `\n  void offsetToIndices(int offset, int[${rank}] strides, out int[${rank}] indices) {\n    if (${rank} == 0) {\n      return;\n    }\n    for (int i = 0; i < ${rank} - 1; ++i) {\n      indices[i] = offset / strides[i];\n      offset -= indices[i] * strides[i];\n    }\n    indices[${rank} - 1] = offset;\n  }`;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport interface ReduceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly keepDims: boolean;\n}\n\n// return [init ops, reduce ops, final ops]\ntype ReduceOp = (inputs: Tensor[], axes: number[]) => string[];\n\nconst reduce =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string,\n     reduceOp: ReduceOp): Tensor[] => {\n      validateInputs(inputs);\n\n      const reduceProgramMetadata = {\n        name,\n        inputNames: ['A'],\n        inputTypes: [TextureType.unpacked],\n      };\n\n      const output = inferenceHandler.run(\n          {\n            ...reduceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () =>\n                createReduceProgramInfo(inferenceHandler, inputs, attributes, name, reduceOp, reduceProgramMetadata)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseReduceAttributes: OperatorInitialization<ReduceAttributes> = (node: Graph.Node): ReduceAttributes => {\n  const axes = node.attributes.getInts('axes', []);\n  const keepDims = node.attributes.getInt('keepdims', 1) === 1;\n  return createAttributeWithCacheKey({axes, keepDims});\n};\n\nconst createReduceProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes, name: string, reduceOp: ReduceOp,\n     reduceProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const outputShape: number[] = [];\n      const iRank = inputs[0].dims.length || 1;\n\n      const idxCopy = [];  // copy output indexes to input indexes\n\n      const axes = ShapeUtil.normalizeAxes(attributes.axes, inputs[0].dims.length);\n      const ops = reduceOp(inputs, axes);\n      let reduceOps = ops[1];\n\n      for (let k = 0; k < inputs[0].dims.length; k++) {\n        // if this axis is reduced\n        if (axes.indexOf(k) >= 0 || axes.length === 0) {\n          if (attributes.keepDims) {\n            outputShape.push(1);\n          }  // else { remove the axis from outputShape; }\n\n          // loop over the d-th axis\n          reduceOps = `\n          for(int j${k} = 0; j${k} < ${inputs[0].dims[k]}; j${k}++) {\n            inputIdx[${k}] = j${k};\n            ${reduceOps}\n          }`;\n        } else {\n          idxCopy.push(`inputIdx[${k}] = outputIdx[${outputShape.length}];`);\n\n          outputShape.push(inputs[0].dims[k]);\n        }\n      }\n\n      const oRank = outputShape.length || 1;\n\n      const shaderSource = `\n      float process(int outputIdx[${oRank}]) {\n        float value;                 // final result\n        int inputIdx[${iRank}];      // addressing input data\n        ${idxCopy.join('\\n')}\n        ${ops[0]}       // init ops for reduce max/min\n        ${reduceOps}\n        ${ops[2]}       // final computation for reduce mean\n        return value;\n      }`;\n\n      return {\n        ...reduceProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Reduce op requires 1 input.');\n  }\n\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const reduceSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceSum', reduceOp);\n    };\n\nexport const reduceMean: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        let size = 1.0;\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            size *= inputs[0].dims[k];\n          }\n        }\n\n        return ['value = 0.0;', 'value += _A(inputIdx);', `value /= ${size}.;`];  // ensure real number with `.`\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMean', reduceOp);\n    };\n\nexport const reduceMax: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = max(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMax', reduceOp);\n    };\n\nexport const reduceMin: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (inputs: Tensor[], axes: number[]): string[] => {\n        const idxZero = [];\n        for (let k = 0; k < inputs[0].dims.length; k++) {\n          if (axes.indexOf(k) >= 0 || axes.length === 0) {\n            idxZero.push(`inputIdx[${k}] = 0;`);  // first element\n          }\n        }\n\n        return [`${idxZero.join('\\n')}\\nvalue = _A(inputIdx);`, 'value = min(value, _A(inputIdx));', ''];\n      };\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceMin', reduceOp);\n    };\n\nexport const reduceProd: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 1.0;', 'value *= _A(inputIdx);', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceProd', reduceOp);\n    };\n\nexport const reduceLogSum: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['value = 0.0;', 'value += _A(inputIdx);', 'value = log(value);'];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSum', reduceOp);\n    };\n\nexport const reduceLogSumSquare: OperatorImplementation<ReduceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: ReduceAttributes): Tensor[] => {\n      const reduceOp: ReduceOp = (): string[] => ['float t; value = 0.0;', 't = _A(inputIdx); value += t * t;', ''];\n      return reduce(inferenceHandler, inputs, attributes, 'ReduceLogSumSquare', reduceOp);\n    };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nimport {unpackFromChannel} from './packing-utils';\n\nconst createPackedReshape3DProgramMetadata = (outputShape3D: readonly number[]) =>\n    ({name: 'Reshape (packed)', inputTypes: [TextureType.packed], inputNames: ['A'], cacheHint: `${outputShape3D}`});\n\nconst createPackedReshape3DProgramInfo =\n    (handler: WebGLInferenceHandler, input3D: Tensor, metadata: ProgramMetadata, outputShape3D: readonly number[]):\n        ProgramInfo => {\n          const inputShape3D = input3D.dims as [number, number, number];\n          const squeezedOutputShape = outputShape3D as [number, number, number];\n\n          let mainLoop = '';\n          for (let i = 0; i < 4; i++) {\n            let outputCoords = '';\n            switch (i) {\n              case 0:\n                outputCoords = 'outputCoords = rc;';\n                break;\n              case 1:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z);';\n                break;\n              case 2:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y, rc.z+1);';\n                break;\n              case 3:\n                outputCoords = 'outputCoords = ivec3(rc.x, rc.y+1, rc.z+1);';\n                break;\n              default:\n                throw new Error();\n            }\n\n            mainLoop += `\n        ${outputCoords}\n        ${i > 0 ? 'if(outputCoords.y < rows && outputCoords.z < cols){' : ''}\n          int flattenedIndex = getFlattenedIndex(outputCoords);\n\n          ivec3 inputRC = inputCoordsFromReshapedOutCoords(flattenedIndex);\n          vec2 innerDims = vec2(float(inputRC.y),float(inputRC.z));\n\n          result[${i}] = getChannel(getA(inputRC.x, inputRC.y, inputRC.z), innerDims);\n\n        ${i > 0 ? '}' : ''}\n      `;\n          }\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n\n          const shaderSource = `\n      ${getReshapedInputCoords(inputShape3D)}\n      ${getFlattenedIndexFrom3D(squeezedOutputShape)}\n      ${unpackFromChannel()}\n\n      void main() {\n        ivec3 rc = getOutputCoords();\n\n        vec4 result = vec4(0.0);\n\n        ivec3 outputCoords;\n        int rows = ${squeezedOutputShape[2]};\n        int cols = ${squeezedOutputShape[1]};\n\n        ${mainLoop}\n        ${glsl.output} = result;\n      }\n    `;\n\n          return {\n            ...metadata,\n            output: {dims: squeezedOutputShape, type: input3D.type, textureType: TextureType.packed},\n            shaderSource,\n            hasMain: true\n          };\n        };\n\nexport const createPackedReshape3DProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input3D: Tensor, outputShape3D: readonly number[]): ProgramInfoLoader => {\n      const metadata = createPackedReshape3DProgramMetadata(outputShape3D);\n      return {...metadata, get: () => createPackedReshape3DProgramInfo(handler, input3D, metadata, outputShape3D)};\n    };\n\nexport function processDims3D(shape: ArrayLike<number>): [number, number, number] {\n  if (shape.length === 0) {\n    return [1, 1, 1];\n  }\n  // TODO: squeeze other shapes to 2D case\n  let batch = 1;\n  for (let i = 0; i < shape.length - 2; ++i) {\n    batch *= shape[i];\n  }\n  return [batch, shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\n\n// For packed reshape, we need to re-arrange texel data for output shape.\n// Our pack is designed to pack a 2x2 tile in last h and w dimension, so\n// for the reshaped new tensor, we just need to re-arrange the last h and\n// w dimension. For any shape that is not in 3D, i.e. [batch, W, H], we\n// first convert it to 3D by collapsing other dimension to batch dim, then\n// process with the last two dimensions.\n// Note: we only need the shape tensor to calculate output shape, so the\n// content in shape tensor is never uploaded to GPU. It is always kept in CPU.\n// TODO: optimize the algorithm -- in some cases, if the last two dims are\n// the same between input shape and output shape, the packed reshape can be\n// treated as no-op.\nexport function isReshapeCheap(dims: readonly number[], reshapedDims: readonly number[]) {\n  let isCheapReshape = false;\n  if (dims.length === 0 || reshapedDims.length === 0) {  // scalar\n    isCheapReshape = true;\n  } else if (dims.length < 2 || reshapedDims.length < 2) {  // 1D\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1];\n  } else {  // 2D +\n    isCheapReshape = dims[dims.length - 1] === reshapedDims[reshapedDims.length - 1] &&\n        dims[dims.length - 2] === reshapedDims[reshapedDims.length - 2];\n  }\n\n  return isCheapReshape;\n}\n\nfunction getReshapedInputCoords(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n  const coords = ['b', 'r', 'c'];\n  const index = 'index';\n  const coordsFromIndexSnippet = strides\n                                     .map((stride, i) => {\n                                       const line1 = `int ${coords[i]} = ${index} / ${stride}`;\n                                       const line2 = i === strides.length - 1 ?\n                                           `int ${coords[i + 1]} = ${index} - ${coords[i]} * ${stride}` :\n                                           `index -= ${coords[i]} * ${stride}`;\n                                       return `${line1}; ${line2};`;\n                                     })\n                                     .join('');\n\n  return `\n    ivec3 inputCoordsFromReshapedOutCoords(int index) {\n      ${coordsFromIndexSnippet}\n      return ivec3(b, r, c);\n    }\n  `;\n}\n\nfunction getFlattenedIndexFrom3D(shape: [number, number, number]): string {\n  const strides = ShapeUtil.computeStrides(shape);\n\n  return `\n  int getFlattenedIndex(ivec3 coords) {\n    // reverse y, z order\n    return coords.x * ${strides[0]} + coords.z * ${strides[1]} + coords.y;\n  }\n`;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const reshape = (handler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  const reshapedDims = ShapeUtil.calculateReshapedDims(inputs[0].dims, inputs[1].integerData);\n  if (handler.session.pack) {\n    return [handler.reshapePacked(inputs[0], reshapedDims)];\n  } else {\n    return [handler.reshapeUnpacked(inputs[0], reshapedDims)];\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\n\nimport {unpackFromChannel} from './packing-utils';\nimport {parseUpsampleAttributes, scalesValidation, UpsampleAttributes, validateInputs} from './upsample';\n\nconst resizeProgramMetadata = {\n  name: 'Resize',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const resize: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...resizeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createPackedResizeProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseResizeAttributesV10: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 10);\n\nexport const parseResizeAttributesV11: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 11);\n\nconst createPackedResizeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [scales, outputShape] = prepareInputs(inputs, attributes);\n\n      const isSame =\n          scales.every((s: number) => s === 1) && attributes.coordinateTransformMode !== 'tf_crop_and_resize';\n      if (isSame) {\n        return {\n          ...resizeProgramMetadata,\n          output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n          hasMain: true,\n          shaderSource: `void main() {\n                    vec4 v = ${glsl.texture2D}(X, TexCoords);\n                    ${glsl.output} = v;\n                }`\n        };\n      }\n\n      const dim = outputShape.length;\n      if (dim < 2) {\n        throw new Error(`output dimension should be at least 2, but got ${dim}`);\n      }\n\n      const outputHeight = outputShape[dim - 2];\n      const outputWidth = outputShape[dim - 1];\n\n      const inputShape = inputs[0].dims;\n      if (dim !== inputShape.length) {\n        throw new Error(`output dimension should match input ${inputShape.length}, but got ${dim}`);\n      }\n      const inputHeight = inputShape[dim - 2];\n      const inputWidth = inputShape[dim - 1];\n\n      const scalesHeight = scales[dim - 2];\n      const scalesWidth = scales[dim - 1];\n\n      let getSourceFracIndex = '';\n\n      if (attributes.mode !== 'linear') {\n        // TODO: support other modes\n        throw new Error(`resize (packed) does not support mode: '${attributes.mode}'`);\n      }\n      switch (attributes.coordinateTransformMode) {\n        case 'asymmetric':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return vec4(coords) / scaleWHWH;\n                    }\n                `;\n          break;\n        case 'half_pixel':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        return (vec4(coords) + 0.5) / scaleWHWH - 0.5;\n                    }\n                `;\n          break;\n        case 'align_corners':\n          getSourceFracIndex = `\n                    vec4 getSourceFracIndex(ivec4 coords) {\n                        vec4 resized = vec4(${outputWidth}.0 - 1.0, ${outputHeight}.0 - 1.0, ${outputWidth}.0 - 1.0,\n                            ${outputHeight}.0 - 1.0);\n                        vec4 original = vec4(${inputWidth}.0 - 1.0, ${inputHeight}.0 - 1.0, ${inputWidth}.0 - 1.0,\n                            ${inputHeight}.0 - 1.0);\n                        vec4 new_scale = original / resized;\n                        return vec4(coords) * new_scale;\n                    }\n                `;\n          break;\n        default:\n          // TODO:supporting other coordinateTransformModes\n          throw new Error(`resize (packed) does not support coordinateTransformMode: \\\n                                '${attributes.coordinateTransformMode}'`);\n      }\n\n      const coordsDataType = getCoordsDataType(dim);\n      const unpackChannel = unpackFromChannel();\n      const shaderSource = `\n            const vec2 inputWH = vec2(${inputHeight}.0, ${inputWidth}.0);\n            const vec4 scaleWHWH = vec4(${scalesHeight}.0, ${scalesWidth}.0, ${scalesHeight}.0, ${scalesWidth}.0);\n            ${unpackChannel}\n            ${getSourceFracIndex}\n            float getAValue(int x10, int r, int c, int d) {\n                return getChannel(getA(x10, r, c, d), vec2(c, d));\n            }\n            void main() {\n                ${coordsDataType} rc = getOutputCoords();\n\n                int batch = rc[0];\n                int depth = rc[1];\n\n                // retrieve the 4 coordinates that is used in the 4 packed output values.\n                ivec4 coords = ivec4(rc.wz, rc.w + 1, rc.z + 1);\n\n                // calculate the source index in fraction\n                vec4 sourceFrac = getSourceFracIndex(coords);\n\n                // get the lower and upper bound of the 4 values that will be packed into one texel.\n                ivec4 x00 = ivec4(max(sourceFrac.xy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xy)));\n                ivec4 x01 = ivec4(max(sourceFrac.xw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.xw)));\n                ivec4 x10 = ivec4(max(sourceFrac.zy, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zy)));\n                ivec4 x11 = ivec4(max(sourceFrac.zw, vec2(0.0)), min(inputWH - 1.0, ceil(sourceFrac.zw)));\n\n                bool hasNextRow = rc.w < ${outputHeight - 1};\n                bool hasNextCol = rc.z < ${outputWidth - 1};\n\n                // pack x00, x01, x10, x11's top-left corner into one vec4 structure\n                vec4 topLeft = vec4(\n                    getAValue(batch, depth, x00.x, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's top-right corner into one vec4 structure\n                vec4 topRight = vec4(\n                    getAValue(batch, depth, x00.x, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.x, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.x, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.x, x11.w) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-left corner into one vec4 structure\n                vec4 bottomLeft = vec4(\n                    getAValue(batch, depth, x00.z, x00.y),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.y) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.y) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.y) : 0.0);\n\n                // pack x00, x01, x10, x11's bottom-right corner into one vec4 structure\n                vec4 bottomRight = vec4(\n                    getAValue(batch, depth, x00.z, x00.w),\n                    hasNextCol ? getAValue(batch, depth, x01.z, x01.w) : 0.0,\n                    hasNextRow ? getAValue(batch, depth, x10.z, x10.w) : 0.0,\n                    (hasNextRow && hasNextCol) ? getAValue(batch, depth, x11.z, x11.w) : 0.0);\n\n                // calculate the interpolation fraction on u and v direction\n                vec4 frac = vec4(sourceFrac) - floor(sourceFrac);\n                vec4 clampFrac = clamp(frac, vec4(0.0), vec4(1.0));\n\n                vec4 top = mix(topLeft, topRight, clampFrac.ywyw);\n                vec4 bottom = mix(bottomLeft, bottomRight, clampFrac.ywyw);\n                vec4 newValue = mix(top, bottom, clampFrac.xxzz);\n\n                ${glsl.output} = vec4(newValue);\n            }\n        `;\n      return {\n        ...resizeProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.packed},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\n\nconst prepareInputs = (inputs: Tensor[], attributes: UpsampleAttributes): [readonly number[], readonly number[]] => {\n  const x = inputs[0];\n  const xDims = x.dims;\n\n  let scales = attributes.scales;\n  let outputSizes: number[]|undefined;\n  if (scales.length === 0) {\n    const scalesTensor = inputs[attributes.scalesInputIdx];\n    if (scalesTensor && scalesTensor.size !== 0) {\n      if (inputs[attributes.sizesInputIdx]) {\n        throw new Error('Only one of scales or sizes must be provided as input.');\n      }\n      scales = parseScalesData(scalesTensor, attributes.mode, attributes.isResize);\n    } else {\n      const sizesTensor = inputs[attributes.sizesInputIdx];\n      if (!sizesTensor || sizesTensor.size === 0) {\n        throw new Error('Either scales or sizes MUST be provided as input.');\n      }\n\n      outputSizes = Array.from(sizesTensor.integerData);\n      scales = parseScalesDataFromOutputSize(outputSizes, xDims, attributes.mode, attributes.isResize);\n    }\n  } else {\n    if (inputs[attributes.sizesInputIdx]) {\n      throw new Error('Only one of scales or sizes must be provided as input.');\n    }\n  }\n\n  const yDims = outputSizes || (xDims.map((dim, i) => Math.floor(dim * scales[i])));\n\n  return [scales, yDims];\n};\n\nconst parseScalesData = (scale: Tensor, mode: string, isResize: boolean): number[] => {\n  const scales = Array.from(scale.floatData);\n  scalesValidation(scales, mode, isResize);\n  return scales;\n};\n\nconst parseScalesDataFromOutputSize =\n    (yDims: readonly number[], xDims: readonly number[], mode: string, isResize: boolean): number[] => {\n      const length = xDims.length;\n      const scales = new Array<number>(length);\n\n      for (let i = 0, end = length; i < end; i++) {\n        if (xDims[i] === 0) {\n          if (yDims[i] !== 0) {\n            throw new Error('Input dim is zero but required output dim is non-zero.');\n          }\n          scales[i] = 1;\n        } else {\n          scales[i] = yDims[i] / xDims[i];\n        }\n      }\n      scalesValidation(scales, mode, isResize);\n      return scales;\n    };\n\n// roi data is not used yet. but leave here for future usage.\n// const getRoi = (inputs: Tensor[], attributes: UpsampleAttributes) : number[] => {\n//     let roi: number[] = [];\n//     if (attributes.needRoiInput) {\n//         if (attributes.roiInputIdx <= 0) {\n//             throw new Error('Invalid roi input index.');\n//         }\n//         const roiTensor = inputs[attributes.roiInputIdx];\n//         roi = roiTensor.size > 0 ? Array.from(roiTensor.floatData) : [];\n//     } else {\n//         roi = new Array(inputs[0].dims.length * 2).fill(0);\n//     }\n//     return roi;\n// };","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const shape = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n  return [new Tensor([inputs[0].dims.length], 'int32', undefined, undefined, new Int32Array(inputs[0].dims))];\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Shape requires 1 input.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {NUMBER_TYPES, OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SliceAttributes extends AttributeWithCacheKey {\n  readonly axes: number[];\n  readonly ends: number[];\n  readonly starts: number[];\n}\n\nconst sliceProgramMetadata = {\n  name: 'Slice',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const slice: OperatorImplementation<SliceAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SliceAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...sliceProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseSliceAttributes: OperatorInitialization<SliceAttributes> = (node: Graph.Node): SliceAttributes => {\n  const starts = node.attributes.getInts('starts');\n  const ends = node.attributes.getInts('ends');\n  const axes = node.attributes.getInts('axes', []);\n  return createAttributeWithCacheKey({starts, ends, axes});\n};\n\nconst createSliceProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SliceAttributes): ProgramInfo => {\n      const axes = (attributes.axes.length === 0) ? input.dims.slice(0).map((val, i) => i) : attributes.axes;\n      const normalizedAxes = ShapeUtil.normalizeAxes(axes, input.dims.length);\n      const starts = attributes.starts.map((start, i) => {\n        if (start > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(start, input.dims[normalizedAxes[i]]);\n      });\n      const ends = attributes.ends.map((end, i) => {\n        if (end > input.dims[normalizedAxes[i]] - 1) {\n          return input.dims[normalizedAxes[i]];\n        }\n        return ShapeUtil.normalizeAxis(end, input.dims[normalizedAxes[i]]);\n      });\n\n      const outputShape = input.dims.slice();\n\n      const sliceOps: string[] = [];\n      for (let i = 0; i < normalizedAxes.length; i++) {\n        outputShape[normalizedAxes[i]] = ends[i] - starts[i];\n        if (starts[i] > 0) {\n          sliceOps.push(`outputIdx[${normalizedAxes[i]}] += ${starts[i]};`);\n        }  // else { sliceOps.push(`outputIdx[${normalizedAxes[i]}] += 0;`); }\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        ${sliceOps.join('\\n      ')}\n        return _A(outputIdx);\n      }`;\n      return {\n        ...sliceProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Slice requires 1 input.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n};\n\nexport const sliceV10 = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputsV10(inputs);\n  const attributes = generateSliceAttributesFromInputs(inferenceHandler, inputs);\n  const output = inferenceHandler.run(\n      {\n        ...sliceProgramMetadata,\n        cacheHint: attributes.cacheKey,\n        get: () => createSliceProgramInfo(inferenceHandler, inputs[0], attributes)\n      },\n      [inputs[0]]);\n  return [output];\n};\n\nconst generateSliceAttributesFromInputs =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): SliceAttributes => {\n      if (!inferenceHandler.session.isInitializer(inputs[1].dataId) ||\n          !inferenceHandler.session.isInitializer(inputs[2].dataId) ||\n          (inputs.length >= 4 && !inferenceHandler.session.isInitializer(inputs[3].dataId)) ||\n          (inputs.length >= 5 && !inferenceHandler.session.isInitializer(inputs[4].dataId))) {\n        throw new Error('dynamic slice attributes are not allowed');\n      }\n\n      if (inputs.length >= 5 && inputs[4].integerData.some((i: number) => i !== 1)) {\n        throw new Error('currently non-1 steps is not supported for Slice');\n      }\n\n      const starts = Array.from(inputs[1].integerData);\n      const ends = Array.from(inputs[2].integerData);\n      const axes = inputs.length >= 4 ? Array.from(inputs[3].integerData) : [];\n      const cacheKey = `${axes};${starts};${ends}`;\n      return {starts, ends, axes, cacheKey};\n    };\n\nconst validateInputsV10 = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length < 3 || inputs.length > 5) {\n    throw new Error('Invalid input number.');\n  }\n  if (inputs[1].type !== 'int32' || inputs[1].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[2].type !== 'int32' || inputs[2].dims.length !== 1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 4 && (inputs[3].type !== 'int32' || inputs[3].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs.length >= 5 && (inputs[4].type !== 'int32' || inputs[4].dims.length !== 1)) {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SoftmaxAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n}\n\nconst softmaxComputeMaxProgramMetadata = {\n  name: 'SoftmaxComputeMax',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nconst softmaxComputeScaleProgramMetadata = {\n  name: 'SoftmaxComputeScale',\n  inputNames: ['A', 'Max'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked],\n};\n\nconst softmaxProgramMetadata = {\n  name: 'SoftMax',\n  inputNames: ['A', 'Max', 'Norm'],\n  inputTypes: [TextureType.unpacked, TextureType.unpacked, TextureType.unpacked],\n};\n\nexport const softmax: OperatorImplementation<SoftmaxAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SoftmaxAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const inputShape = inputs[0].dims.slice();\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputShape.length);\n      const N = ShapeUtil.sizeToDimension(inputShape, axis);\n      const D = ShapeUtil.sizeFromDimension(inputShape, axis);\n\n      const computeMaxProgramInfo = createComputeMaxProgramInfo(inferenceHandler, inputs[0], N, D, [N]);\n      const max = inferenceHandler.run(\n          {...softmaxComputeMaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeMaxProgramInfo},\n          inputs);\n\n      const computeScaleProgramInfo =\n          createComputScaleProgramInfo(inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, [N]);\n      const scale = inferenceHandler.run(\n          {...softmaxComputeScaleProgramMetadata, cacheHint: attributes.cacheKey, get: () => computeScaleProgramInfo},\n          [inputs[0], max]);\n\n      const softMaxProgramInfo = createSoftMaxProgramInfo(\n          inferenceHandler, inputs[0], N, D, computeMaxProgramInfo.output.dims, computeScaleProgramInfo.output.dims);\n      const output = inferenceHandler.run(\n          {...softmaxProgramMetadata, cacheHint: attributes.cacheKey, get: () => softMaxProgramInfo},\n          [inputs[0], max, scale]);\n      return [output];\n    };\n\nexport const parseSoftmaxAttributes: OperatorInitialization<SoftmaxAttributes> =\n    (node: Graph.Node): SoftmaxAttributes => createAttributeWithCacheKey({axis: node.attributes.getInt('axis', 1)});\n\n/**\n * Create a texture that contains the maximum value of each of the 'N' rows\n */\nconst createComputeMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number, outputShape: number[]):\n        ProgramInfo => {\n          const [textureWidth, textureHeight] =\n              inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n          const rank = outputShape.length;\n\n          if (N < 1 || D < 1) {\n            throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n          }\n\n          if (outputShape.length !== 1) {\n            throw new Error('Dimensionality of the output should be 1');\n          }\n\n          if (outputShape[0] !== N) {\n            throw new Error('Shape of the output should be equal to logical row count');\n          }\n\n          const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n          const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float max = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset, ${textureWidth},\n        ${textureHeight} )));\n        for(int i=1; i<${D}; ++i)\n        {\n          float current = getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight})));\n          if(current > max)\n          max = current;\n        }\n\n        return max;\n      }`;\n          return {\n            ...softmaxComputeMaxProgramMetadata,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\n/**\n * Create a texture that contains the normalization factor for each of the 'N' rows\n */\nconst createComputScaleProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], outputShape: number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = outputShape.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (outputShape.length !== 1) {\n        throw new Error('Dimensionality of the output should be 1');\n      }\n\n      if (outputShape[0] !== N) {\n        throw new Error('Shape of the output should be equal to logical row count');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n        int logical_row_start_offset = indices[0] * ${D};\n\n        float norm_factor = 0.0;\n        float max = _Max(indices);\n        for(int i=0; i<${D}; ++i)\n        {\n          norm_factor += exp(getColorAsFloat(${glsl.texture2D}(A, offsetToCoords(logical_row_start_offset + i,\n            ${textureWidth}, ${textureHeight}))) - max);\n        }\n\n        return norm_factor;\n      }`;\n      return {\n        ...softmaxComputeScaleProgramMetadata,\n        output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst createSoftMaxProgramInfo =\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, N: number, D: number,\n     maxElementPerLogicalRow: readonly number[], normalizationPerLogicalRow: readonly number[]): ProgramInfo => {\n      const [textureWidth, textureHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(input.dims, TextureType.unpacked);\n      const rank = input.dims.length;\n\n      if (N < 1 || D < 1) {\n        throw new Error('Logical row count N and feature count D must be greater than or equal to 1');\n      }\n\n      if (maxElementPerLogicalRow.length !== 1 || normalizationPerLogicalRow.length !== 1) {\n        throw new Error('Dimensionality of the intermediate results should be 1');\n      }\n\n      if (maxElementPerLogicalRow[0] !== N || normalizationPerLogicalRow[0] !== N) {\n        throw new Error('Shape of the intermediate results should be equal to logical row count');\n      }\n\n      const shaderSource = `\n      float process(int[${rank}] indices) {\n\n      // get offset of current logical tensor index from the 2-D texture coordinates (TexCoords)\n      int offset = coordsToOffset(TexCoords, ${textureWidth}, ${textureHeight});\n\n      //determine the logical row for this index\n      int logical_row_index[1];\n      logical_row_index[0] = offset / ${D};\n\n      float norm_factor = _Norm(logical_row_index);\n\n      // avoid possible division by 0\n      // if norm_facor is 0, all elements are zero\n      // if so, return 0\n      if(norm_factor == 0.0)\n        return 0.0;\n\n      return exp(_A(indices) - _Max(logical_row_index)) / norm_factor;\n    }`;\n      return {\n        ...softmaxProgramMetadata,\n        output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Softmax requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil, SplitUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface SplitAttributes extends AttributeWithCacheKey {\n  readonly axis: number;\n  readonly split: number[];\n  readonly numOutputs: number;\n}\n\nconst splitProgramMetadata = {\n  name: 'Split',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const split: OperatorImplementation<SplitAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: SplitAttributes): Tensor[] => {\n      validateInputs(inputs);\n\n      const axis = ShapeUtil.normalizeAxis(attributes.axis, inputs[0].dims.length);\n      const count = getProgramCount(inferenceHandler, inputs, axis, attributes);\n      const output: Tensor[] = [];\n      for (let i = 0; i < count; ++i) {\n        output.push(inferenceHandler.run(\n            {\n              ...splitProgramMetadata,\n              cacheHint: `${attributes.cacheKey};${i}`,\n              get: () => createSplitProgramInfo(inferenceHandler, inputs[0], attributes, axis, i)\n            },\n            inputs));\n      }\n\n      return output;\n    };\n\nexport const parseSplitAttributes: OperatorInitialization<SplitAttributes> = (node: Graph.Node): SplitAttributes => {\n  const axis = node.attributes.getInt('axis', 0);\n  const split = node.attributes.getInts('split', []);\n  const numOutputs = node.outputs.length;\n  return createAttributeWithCacheKey({axis, split, numOutputs});\n};\n\nconst getProgramCount =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axis: number, attributes: SplitAttributes): number => {\n      const [, offsets] = SplitUtil.splitShape(inputs[0].dims, axis, attributes.split, attributes.numOutputs);\n      return offsets.length;\n    };\n\nconst createSplitProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, attributes: SplitAttributes, axis: number, index: number):\n        ProgramInfo => {\n          const [shapes, offsets] = SplitUtil.splitShape(input.dims, axis, attributes.split, attributes.numOutputs);\n          const offset = offsets[index];\n          const outputShape = shapes[index];\n          const rank = outputShape.length;\n          const shaderSource = `\n      float process(int indices[${rank}]) {\n        indices[${axis}] += ${offset};\n        return _A(indices);\n      }\n    `;\n          return {\n            ...splitProgramMetadata,\n            cacheHint: `${attributes.cacheKey}:${index}`,\n            output: {dims: outputShape, type: input.type, textureType: TextureType.unpacked},\n            shaderSource\n          };\n        };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Split requires one input.');\n  }\n\n  if (inputs[0].type !== 'int8' && inputs[0].type !== 'uint8' && inputs[0].type !== 'int16' &&\n      inputs[0].type !== 'uint16' && inputs[0].type !== 'int32' && inputs[0].type !== 'uint32' &&\n      inputs[0].type !== 'float32' && inputs[0].type !== 'float64' && inputs[0].type !== 'bool') {\n    throw new Error('Invalid input type.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const squeeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.squeezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseSqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Squeeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const sum = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const sumProgramMetadata = {\n    name: 'Sum',\n    inputNames: inputs.map((v, i) => `X${i}`),\n    inputTypes: new Array(inputs.length).fill(TextureType.unpacked)\n  };\n\n  const output = inferenceHandler.run(\n      {...sumProgramMetadata, get: () => createSumProgramInfo(inferenceHandler, inputs, sumProgramMetadata)}, inputs);\n  return [output];\n};\n\nconst createSumProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], sumProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const outputShape = inputs[0].dims.slice();\n      const sumLine = inputs.map((v, i) => `${glsl.texture2D}(X${i},TexCoords)`).join(' + ');\n      const shaderSource = `\n      void main() {\n        vec4 result = ${sumLine};\n        ${glsl.output} = result;\n      }\n    `;\n      return {\n        ...sumProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        hasMain: true,\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length === 0) {\n    throw new Error('Sum requires inputs.');\n  }\n\n  const length = inputs[0].dims.length;\n  for (let i = 1; i < inputs.length; i++) {\n    if (length !== inputs[i].dims.length) {\n      throw new Error('Input shapes are mismatched.');\n    }\n\n    for (let j = 0; j < length; j++) {\n      if (inputs[0].dims[j] !== inputs[i].dims[j]) {\n        throw new Error('Input shapes are not matched.');\n      }\n    }\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('Invalid input type.');\n  }\n  for (let i = 1; i < inputs.length; i++) {\n    if (inputs[0].type !== inputs[i].type) {\n      throw new Error('Input types are not matched.');\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {NUMBER_TYPES} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramMetadata, TextureType} from '../types';\n\nexport const tile = (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[]): Tensor[] => {\n  validateInputs(inputs);\n\n  const tileProgramMetadata = {\n    name: 'Tile',\n    inputNames: ['A'],\n    inputTypes: [TextureType.unpacked],\n  };\n\n  const output = inferenceHandler.run(\n      {...tileProgramMetadata, get: () => createTileProgramInfo(inferenceHandler, inputs, tileProgramMetadata)},\n      inputs);\n  return [output];\n};\n\nconst createTileProgramInfo =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], tileProgramMetadata: ProgramMetadata): ProgramInfo => {\n      const inputShape = inputs[0].dims.slice();\n      const outputShape = new Array(inputShape.length);\n\n      const tileOps: string[] = [];\n      for (let i = 0; i < inputShape.length; i++) {\n        outputShape[i] = inputShape[i] * inputs[1].numberData[i];\n        tileOps.push(`inputIdx[${i}] = int(mod(float(outputIdx[${i}]), ${inputShape[i]}.));`);\n      }\n\n      const rank = outputShape.length;\n      const shaderSource = `\n      float process(int outputIdx[${rank}]) {\n        int inputIdx[${rank}];\n        ${tileOps.join('\\n')}\n        return _A(inputIdx);\n      }\n    `;\n      return {\n        ...tileProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 2) {\n    throw new Error('Tile requires 2 input.');\n  }\n  if (inputs[1].dims.length !== 1) {\n    throw new Error('The second input shape must 1 dimension.');\n  }\n  if (inputs[1].dims[0] !== inputs[0].dims.length) {\n    throw new Error('Invalid input shape.');\n  }\n  if (NUMBER_TYPES.indexOf(inputs[0].type) === -1) {\n    throw new Error('Invalid input type.');\n  }\n  if (inputs[1].type !== 'int32' && inputs[1].type !== 'int16') {\n    throw new Error('Invalid repeat type.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface TransposeAttributes extends AttributeWithCacheKey {\n  readonly perm: number[];\n}\n\nconst transposeProgramMetadata = {\n  name: 'Transpose',\n  inputNames: ['A'],\n  inputTypes: [TextureType.unpacked]\n};\n\nexport const transpose: OperatorImplementation<TransposeAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: TransposeAttributes): Tensor[] => {\n      validateInputs(inputs);\n      const output = inferenceHandler.run(\n          {\n            ...transposeProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createTransposeProgramInfo(inferenceHandler, inputs[0], attributes.perm)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseTransposeAttributes: OperatorInitialization<TransposeAttributes> =\n    (node: Graph.Node): TransposeAttributes => createAttributeWithCacheKey({perm: node.attributes.getInts('perm', [])});\n\nconst createTransposeProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, input: Tensor, perm: number[]): ProgramInfo => {\n      const inputShape = input.dims;\n      perm = getAdjustedPerm(inputShape, perm);\n      const unpackedOutputShape = getOutputShape(inputShape, perm);\n      const rank = inputShape.length;\n      // A dims=[${inputs[0].dims.toString()}]\n      // out Dims=[${unpackedOutputShape.toString()}]\n      // based on perm=[${perm.toString()}]\n      const shaderSource = `\n      ${getPermFunctionBody('perm', perm, rank)}\n      float process(int indices[${rank}]) {\n        int a[${rank}];\n        perm(a, indices);\n        return _A(a);\n      }`;\n      return {\n        ...transposeProgramMetadata,\n        output: {dims: unpackedOutputShape, type: input.type, textureType: TextureType.unpacked},\n        shaderSource\n      };\n    };\n\nconst getAdjustedPerm = (inputShape: readonly number[], perm: number[]): number[] => {\n  if (perm && perm.length !== inputShape.length) {\n    perm = [...(inputShape.keys())].reverse();\n  }\n  return perm;\n};\n\nconst getOutputShape = (inputShape: readonly number[], perm: number[]): readonly number[] => {\n  perm = getAdjustedPerm(inputShape, perm);\n  return ShapeUtil.sortBasedOnPerm(inputShape, perm);\n};\n\nconst getPermFunctionBody = (name: string, perm: number[], rank: number): string => {\n  const reverseFunc = [];\n  reverseFunc.push(`void ${name}(out int a[${rank}], int src[${rank}]) {`);\n  for (let i = 0; i < rank; ++i) {\n    reverseFunc.push(`\\ta[${perm[i]}]=src[${i}];`);\n  }\n  reverseFunc.push('\\t}');\n  return reverseFunc.join('\\n');\n};\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Transpose requires 1 input.');\n  }\n\n  if (inputs[0].type !== 'float32' && inputs[0].type !== 'float64') {\n    throw new Error('input should be float tensor');\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {TextureData, TextureType} from '../types';\n\nexport const encodeAsUint8 = (inferenceHandler: WebGLInferenceHandler, input: TextureData): TextureData => {\n  const outputShape = input.shape;\n  const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n  /**\n   * https://github.com/tensorflow/tfjs-core/blob/master/src/kernels/webgl/encode_float_gpu.ts\n   */\n  const shaderSource = `\n    const float FLOAT_MAX = 1.70141184e38;\n    const float FLOAT_MIN = 1.17549435e-38;\n\n    bool isNaN(float val) {\n      return (val < 1.0 || 0.0 < val || val == 0.0) ? false : true;\n    }\n\n    highp vec4 encodeAsUint8(highp float v) {\n      if (isNaN(v)) {\n        return vec4(255, 255, 255, 255);\n      }\n\n      highp float av = abs(v);\n\n      if(av < FLOAT_MIN) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n      } else if(v > FLOAT_MAX) {\n        return vec4(0.0, 0.0, 128.0, 127.0) / 255.0;\n      } else if(v < -FLOAT_MAX) {\n        return vec4(0.0, 0.0,  128.0, 255.0) / 255.0;\n      }\n\n      highp vec4 c = vec4(0,0,0,0);\n\n      highp float e = floor(log2(av));\n      highp float m = exp2(fract(log2(av))) - 1.0;\n\n      c[2] = floor(128.0 * m);\n      m -= c[2] / 128.0;\n      c[1] = floor(32768.0 * m);\n      m -= c[1] / 32768.0;\n      c[0] = floor(8388608.0 * m);\n\n      highp float ebias = e + 127.0;\n      c[3] = floor(ebias / 2.0);\n      ebias -= c[3] * 2.0;\n      c[2] += floor(ebias) * 128.0;\n\n      c[3] += 128.0 * step(0.0, -v);\n\n      return c / 255.0;\n    }\n\n    void main() {\n      float value = ${glsl.texture2D}(X,TexCoords).r;\n      ${glsl.output} = encodeAsUint8(value);\n    }`;\n  const programInfo = {\n    name: 'Uint8Encode',\n    inputTypes: [TextureType.unpacked],\n    inputNames: ['X'],\n    output: {dims: outputShape, type: input.tensor.type, textureType: TextureType.downloadUint8AsFloat},\n    shaderSource,\n    hasMain: true\n  };\n  return inferenceHandler.executeProgram(programInfo, [input.tensor]);\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {Tensor} from '../../../tensor';\nimport {FunctionType, GlslValueFunction} from '../glsl-definitions';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, ProgramMetadata, TextureType} from '../types';\n\nexport function glslAbs(): GlslValueFunction {\n  return glslBuiltinUnary('abs');\n}\nexport function glslAcos(): GlslValueFunction {\n  return glslBuiltinUnary('acos');\n}\nexport function glslAsin(): GlslValueFunction {\n  return glslBuiltinUnary('asin');\n}\nexport function glslAtan(): GlslValueFunction {\n  return glslBuiltinUnary('atan');\n}\nexport function glslCeil(): GlslValueFunction {\n  return glslBuiltinUnary('ceil');\n}\nexport function glslCos(): GlslValueFunction {\n  return glslBuiltinUnary('cos');\n}\nexport function glslElu(alpha: number): GlslValueFunction {\n  const name = 'elu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a >= 0.0 ? a: (exp(a) - 1.0) * alpha;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslExp(): GlslValueFunction {\n  return glslBuiltinUnary('exp');\n}\nexport function glslFloor(): GlslValueFunction {\n  return glslBuiltinUnary('floor');\n}\nexport function glslClip(min: number, max: number): GlslValueFunction {\n  const name = 'clip';\n  const body = `\n  const float min = float(${min});\n  const float max = float(${max});\n\n  float ${name}_(float a) {\n    return clamp(a, min, max);\n  }\n  vec4 ${name}_(vec4 v) {\n    return clamp(v, min, max);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslIdentity(): GlslValueFunction {\n  const name = 'indentity';\n  const body = `\n  float ${name}_(float a) {\n    return a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLeakyRelu(alpha: number): GlslValueFunction {\n  const name = 'leakyRelu';\n  const body = `\n  const float alpha = float(${alpha});\n\n  float ${name}_(float a) {\n    return a < 0.0 ? a * alpha : a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(${name}_(v.x), ${name}_(v.y), ${name}_(v.z), ${name}_(v.w));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslLog(): GlslValueFunction {\n  return glslBuiltinUnary('log');\n}\nexport function glslNeg(): GlslValueFunction {\n  const name = 'neg';\n  const body = `\n  float ${name}_(float a) {\n    return -a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return -v;\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslNot(): GlslValueFunction {\n  const name = 'not';\n  const body = `\n  float ${name}_(float a) {\n    return float( ! bool(a) );\n  }\n  bool ${name}_(bool a) {\n    return !a;\n  }\n  vec4 ${name}_(vec4 v) {\n    return vec4(!bool(v.x), !bool(v.y), !bool(v.z), !bool(v.w));\n  }\n  bvec4 ${name}_(bvec4 v) {\n    return bvec4(!v.x, !v.y, !v.z, !v.w);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSin(): GlslValueFunction {\n  return glslBuiltinUnary('sin');\n}\nexport function glslRelu(): GlslValueFunction {\n  const name = 'relu';\n  const body = `\n  float ${name}_(float a) {\n    return max( a, 0.0 );\n  }\n  vec4 ${name}_(vec4 v) {\n    return max( v, 0.0 );\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSigmoid(): GlslValueFunction {\n  const name = 'sigmoid';\n  const body = `\n  float ${name}_(float a) {\n    return 1.0 / (1.0 + exp(-a));\n  }\n  vec4 ${name}_(vec4 v) {\n    return 1.0 / (1.0 + exp(-v));\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nexport function glslSqrt(): GlslValueFunction {\n  return glslBuiltinUnary('sqrt');\n}\nexport function glslTan(): GlslValueFunction {\n  return glslBuiltinUnary('tan');\n}\nexport function glslTanh(): GlslValueFunction {\n  const name = 'tanh';\n  const body = `\n  float ${name}_(float a) {\n    a = clamp(a, -10., 10.);\n    a = exp(2.*a);\n    return (a - 1.) / (a + 1.);\n  }\n  vec4 ${name}_(vec4 v) {\n    v = clamp(v, -10., 10.);\n    v = exp(2.*v);\n    return (v - 1.) / (v + 1.);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\nfunction glslBuiltinUnary(name: string): GlslValueFunction {\n  const body = `\n  float ${name}_(float a) {\n    return ${name}(a);\n  }\n  vec4 ${name}_(vec4 v) {\n    return ${name}(v);\n  }\n  `;\n  return {body, name, type: FunctionType.ValueBased};\n}\n\n/////\n/////\n/////\n\nconst createElementwiseProgramInfo =\n    (handler: WebGLInferenceHandler, metadata: ProgramMetadata, input: Tensor, glslFunc: GlslValueFunction):\n        ProgramInfo => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const glsl = getGlsl(handler.session.backend.glContext.version);\n          return {\n            ...metadata,\n            output: {dims: input.dims, type: input.type, textureType},\n            shaderSource: `\n     ${glslFunc.body}\n     void main() {\n       vec4 v = ${glsl.texture2D}(A, TexCoords);\n       v = ${glslFunc.name}_(v);\n       ${glsl.output} = v;\n     }\n     `,\n            hasMain: true\n          };\n        };\n\nconst createElementwiseProgramInfoLoader =\n    (handler: WebGLInferenceHandler, input: Tensor, glslFunc: GlslValueFunction, cacheKey?: string):\n        ProgramInfoLoader => {\n          const textureType = handler.session.pack ? TextureType.packed : TextureType.unpacked;\n          const metadata = {name: glslFunc.name, inputTypes: [textureType], inputNames: ['A'], cacheHint: cacheKey};\n          return {...metadata, get: () => createElementwiseProgramInfo(handler, metadata, input, glslFunc)};\n        };\n\nexport const abs = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAbs()), inputs)];\n\nexport const acos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAcos()), inputs)];\n\nexport const asin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAsin()), inputs)];\n\nexport const atan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslAtan()), inputs)];\n\nexport interface ClipAttributes extends AttributeWithCacheKey {\n  readonly min: number;\n  readonly max: number;\n}\n\nexport const clip =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: ClipAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(\n            handler, inputs[0], glslClip(attributes.min, attributes.max), attributes.cacheKey),\n        inputs)];\n\nexport const parseClipAttributes = (node: Graph.Node): ClipAttributes => createAttributeWithCacheKey({\n  min: node.attributes.getFloat('min', -3.4028234663852886e+38),\n  max: node.attributes.getFloat('max', 3.4028234663852886e+38)\n});\n\nexport const ceil = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCeil()), inputs)];\n\nexport const cos = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslCos()), inputs)];\n\nexport interface EluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const elu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: EluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslElu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseEluAttributes = (node: Graph.Node): EluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 1.0)});\n\nexport const exp = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslExp()), inputs)];\n\nexport const floor = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslFloor()), inputs)];\n\nexport const identity = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslIdentity()), inputs)];\n\nexport interface LeakyReluAttributes extends AttributeWithCacheKey {\n  readonly alpha: number;\n}\n\nexport const leakyRelu =\n    (handler: WebGLInferenceHandler, inputs: Tensor[], attributes: LeakyReluAttributes): Tensor[] => [handler.run(\n        createElementwiseProgramInfoLoader(handler, inputs[0], glslLeakyRelu(attributes.alpha), attributes.cacheKey),\n        inputs)];\n\nexport const parseLeakyReluAttributes = (node: Graph.Node): LeakyReluAttributes =>\n    createAttributeWithCacheKey({alpha: node.attributes.getFloat('alpha', 0.01)});\n\nexport const log = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslLog()), inputs)];\n\nexport const neg = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNeg()), inputs)];\n\nexport const not = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslNot()), inputs)];\n\nexport const relu = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslRelu()), inputs)];\n\nexport const sigmoid = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSigmoid()), inputs)];\n\nexport const sin = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSin()), inputs)];\n\nexport const sqrt = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslSqrt()), inputs)];\n\nexport const tan = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTan()), inputs)];\n\nexport const tanh = (handler: WebGLInferenceHandler, inputs: Tensor[]):\n    Tensor[] => [handler.run(createElementwiseProgramInfoLoader(handler, inputs[0], glslTanh()), inputs)];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, ProgramInfoLoader, TextureType} from '../types';\nimport {getCoordsDataType} from '../utils';\nimport {getChannels, unpackFromChannel} from './packing-utils';\n\nconst unpackProgramMetadata = {\n  name: 'unpack',\n  inputNames: ['A'],\n  inputTypes: [TextureType.packed]\n};\n\nexport const createUnpackProgramInfo = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfo => {\n  const rank = input.dims.length;\n\n  const channels = getChannels('rc', rank);\n  const innerDims = channels.slice(-2);\n  const coordsDataType = getCoordsDataType(rank);\n  const unpackChannel = unpackFromChannel();\n  const isScalar = (input.dims.length === 0);\n  const sourceCoords = isScalar ? '' : getSourceCoords(rank, channels);\n  const coords = rank <= 1 ? 'rc' : `vec2(${innerDims.join(',')})`;\n  const glsl = getGlsl(handler.session.backend.glContext.version);\n  const shaderSource = `\n    ${unpackChannel}\n    void main() {\n      ${coordsDataType} rc = getOutputCoords();\n\n       // Sample the texture with the coords to get the rgba channel value.\n       vec4 packedInput = getA(${sourceCoords});\n\n       ${glsl.output} = vec4(getChannel(packedInput, ${coords}), 0, 0, 0);\n     }\n   `;\n\n  return {\n    ...unpackProgramMetadata,\n    hasMain: true,\n    output: {dims: input.dims, type: input.type, textureType: TextureType.unpacked},\n    shaderSource\n  };\n};\n\nexport const createUnpackProgramInfoLoader = (handler: WebGLInferenceHandler, input: Tensor): ProgramInfoLoader =>\n    ({...unpackProgramMetadata, get: () => createUnpackProgramInfo(handler, input)});\n\nfunction getSourceCoords(rank: number, dims: string[]): string {\n  if (rank === 1) {\n    return 'rc';\n  }\n\n  let coords = '';\n  for (let i = 0; i < rank; i++) {\n    coords += dims[i];\n    if (i < rank - 1) {\n      coords += ',';\n    }\n  }\n  return coords;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {ShapeUtil} from '../../../util';\nimport {WebGLInferenceHandler} from '../inference-handler';\n\nexport const unsqueeze: OperatorImplementation<number[]> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], axes: number[]): Tensor[] => {\n      validateInputs(inputs);\n      const outputShape = ShapeUtil.unsqueezeShape(inputs[0].dims, axes);\n      const output = inferenceHandler.reshapeUnpacked(inputs[0], outputShape);\n      return [output];\n    };\n\nexport const parseUnsqueezeAttributes: OperatorInitialization<number[]> = (node: Graph.Node): number[] =>\n    node.attributes.getInts('axes');\n\nconst validateInputs = (inputs: Tensor[]): void => {\n  if (!inputs || inputs.length !== 1) {\n    throw new Error('Unsqueeze requires 1 input.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('invalid input tensor types.');\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {AttributeWithCacheKey, createAttributeWithCacheKey} from '../../../attribute-with-cache-key';\nimport {Graph} from '../../../graph';\nimport {OperatorImplementation, OperatorInitialization} from '../../../operators';\nimport {Tensor} from '../../../tensor';\nimport {getGlsl} from '../glsl-source';\nimport {WebGLInferenceHandler} from '../inference-handler';\nimport {ProgramInfo, TextureType} from '../types';\n\nexport interface UpsampleAttributes extends AttributeWithCacheKey {\n  readonly opset: number;\n  readonly isResize: boolean;\n  readonly mode: string;\n  readonly scales: number[];\n  readonly extrapolationValue: number;\n  readonly coordinateTransformMode: string;\n  readonly useExtrapolation: boolean;\n  readonly needRoiInput: boolean;\n  readonly nearestMode: string;\n  readonly cubicCoefficientA: number;\n  readonly excludeOutside: boolean;\n  readonly useNearest2xOptimization: boolean;\n  readonly roiInputIdx: number;\n  readonly scalesInputIdx: number;\n  readonly sizesInputIdx: number;\n}\n\nconst upsampleProgramMetadata = {\n  name: 'Upsample',\n  inputNames: ['X'],\n  inputTypes: [TextureType.unpacked],\n};\n\nexport const upsample: OperatorImplementation<UpsampleAttributes> =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): Tensor[] => {\n      validateInputs(inputs, attributes);\n      const output = inferenceHandler.run(\n          {\n            ...upsampleProgramMetadata,\n            cacheHint: attributes.cacheKey,\n            get: () => createUpsampleProgramInfo(inferenceHandler, inputs, attributes)\n          },\n          inputs);\n      return [output];\n    };\n\nexport const parseUpsampleAttributesV7: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 7);\n\nexport const parseUpsampleAttributesV9: OperatorInitialization<UpsampleAttributes> =\n    (node: Graph.Node): UpsampleAttributes => parseUpsampleAttributes(node, 9);\n\nexport const parseUpsampleAttributes = (node: Graph.Node, opset: number): UpsampleAttributes => {\n  const isResize = (opset >= 10);\n\n  // processing node attributes\n  const mode = node.attributes.getString('mode', 'nearest');\n  if (mode !== 'nearest' && mode !== 'linear' && (opset < 11 || mode !== 'cubic')) {\n    throw new Error(`unrecognized mode: ${mode}`);\n  }\n\n  let scales: number[] = [];\n  if (opset < 9) {\n    scales = node.attributes.getFloats('scales');\n    scalesValidation(scales, mode, isResize);\n  }\n\n  const extrapolationValue = node.attributes.getFloat('extrapolation_value', 0.0);\n\n  const coordinateTransformMode =\n      opset > 10 ? node.attributes.getString('coordinate_transformation_mode', 'half_pixel') : 'asymmetric';\n  if ([\n        'asymmetric', 'pytorch_half_pixel', 'tf_half_pixel_for_nn', 'align_corners', 'tf_crop_and_resize', 'half_pixel'\n      ].indexOf(coordinateTransformMode) === -1) {\n    throw new Error(`coordinate_transform_mode '${coordinateTransformMode}' is not supported`);\n  }\n  const needRoiInput = (coordinateTransformMode === 'tf_crop_and_resize');\n  const useExtrapolation = needRoiInput;\n\n  const nearestMode =\n      (mode === 'nearest' && opset >= 11) ? node.attributes.getString('nearest_mode', 'round_prefer_floor') : '';\n  if (['round_prefer_floor', 'round_prefer_ceil', 'floor', 'ceil', ''].indexOf(nearestMode) === -1) {\n    throw new Error(`nearest_mode '${nearestMode}' is not supported`);\n  }\n\n  const cubicCoefficientA = node.attributes.getFloat('cubic_coeff_a', -0.75);\n  const excludeOutside = node.attributes.getInt('exclude_outside', 0) !== 0;\n  if (excludeOutside && mode !== 'cubic') {\n    throw new Error('exclude_outside can be set to 1 only when mode is CUBIC.');\n  }\n\n  const useNearest2xOptimization =\n      (opset < 11) ? true : (mode === 'nearest' && coordinateTransformMode === 'asymmetric' && nearestMode === 'floor');\n\n  let roiInputIdx = 0;\n  let scalesInputIdx = 0;\n  let sizesInputIdx = 0;\n\n  if (opset > 10) {\n    roiInputIdx = 1;\n    scalesInputIdx = 2;\n    sizesInputIdx = 3;\n  } else if (opset === 9) {\n    scalesInputIdx = 1;\n  }\n\n  return createAttributeWithCacheKey({\n    opset,\n    isResize,\n    mode,\n    scales,\n    extrapolationValue,\n    coordinateTransformMode,\n    useExtrapolation,\n    needRoiInput,\n    nearestMode,\n    cubicCoefficientA,\n    excludeOutside,\n    useNearest2xOptimization,\n    roiInputIdx,\n    scalesInputIdx,\n    sizesInputIdx\n  });\n};\n\nconst createUpsampleProgramInfo =\n    (inferenceHandler: WebGLInferenceHandler, inputs: Tensor[], attributes: UpsampleAttributes): ProgramInfo => {\n      const glsl = getGlsl(inferenceHandler.session.backend.glContext.version);\n      const [inputWidth, inputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(inputs[0].dims, TextureType.unpacked);\n\n      const outputShape = inputs[0].dims.map((dim, i) => Math.floor(dim * attributes.scales[i]));\n      const [outputWidth, outputHeight] =\n          inferenceHandler.calculateTextureWidthAndHeight(outputShape, TextureType.unpacked);\n      const dim = outputShape.length;\n\n      const outputPitches = new Array<number>(dim);\n      const inputPitches = new Array<number>(dim);\n      let precalculatedPitches = `\n      int output_pitches[${dim}];\n      int input_pitches[${dim}];\n      `;\n      for (let d = dim - 1; d >= 0; d--) {\n        outputPitches[d] = (d === dim - 1) ? 1 : outputPitches[d + 1] * outputShape[d + 1];\n        inputPitches[d] = (d === dim - 1) ? 1 : inputPitches[d + 1] * inputs[0].dims[d + 1];\n\n        precalculatedPitches += `\n        output_pitches[${d}] = ${outputPitches[d]};\n        input_pitches[${d}] = ${inputPitches[d]};\n        `;\n      }\n      const getInputFloatFunction = `\n      float getInputFloat(int index) {\n        vec2 coords = offsetToCoords(index, ${inputWidth}, ${inputHeight});\n        float value = getColorAsFloat(${glsl.texture2D}(X, coords));\n        return value;\n      }\n      `;\n\n      const shaderSource = attributes.mode === 'nearest' ?\n          // nearest\n          `\n    ${getInputFloatFunction}\n    float process(int indices[${dim}]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int d, m;\n      for (int dim = 0; dim < ${dim}; ++dim) {\n        d = output_index / output_pitches[dim];\n        m = output_index - d * output_pitches[dim];\n        output_index = m;\n\n        if (scales[dim] != 1 && d > 0) {\n          int d2 = d / scales[dim];\n          m = d - d2 * scales[dim];\n          d = d2;\n        }\n        input_index += input_pitches[dim] * d;\n      }\n\n      return getInputFloat(input_index);\n    }` :\n          dim === 4 ?\n          // bilinear 4D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[4]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1, index_of_dim2, index_of_dim3;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m / output_pitches[1];\n      m = m - index_of_dim1 * output_pitches[1];\n      index_of_dim2 = m / output_pitches[2];\n      m = m - index_of_dim2 * output_pitches[2];\n      index_of_dim3 = m;\n\n      int index_of_input_dim2, index_of_input_dim3, x_offset, y_offset;\n      index_of_input_dim2 = index_of_dim2 / scales[2];\n      y_offset = index_of_dim2 - index_of_input_dim2 * scales[2];\n      index_of_input_dim3 = index_of_dim3 / scales[3];\n      x_offset = index_of_dim3 - index_of_input_dim3 * scales[3];\n\n      input_index = index_of_dim0 * input_pitches[0] +\n            index_of_dim1 * input_pitches[1] +\n            index_of_input_dim2 * input_pitches[2] +\n            index_of_input_dim3;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim2 = false;\n      if (index_of_input_dim2 == (${inputs[0].dims[2]} - 1)) {\n        // It's the end in dimension 2\n        x01 = x00;\n        end_of_dim2 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[2]);\n      }\n\n      if (index_of_input_dim3 == (input_pitches[2] - 1)) {\n        // It's the end in dimension 3\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim2 ? x10 : getInputFloat(input_index + input_pitches[2] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[2]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[2]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[3]);\n    }` :\n              // bilinear 2D\n              `\n    ${getInputFloatFunction}\n    float process(int indices[2]) {\n      int input_index = 0;\n      int output_index = coordsToOffset(TexCoords, ${outputWidth}, ${outputHeight});\n\n      ${precalculatedPitches}\n\n      int m;\n      int index_of_dim0, index_of_dim1;\n      index_of_dim0 = output_index / output_pitches[0];\n      m = output_index - index_of_dim0 * output_pitches[0];\n      index_of_dim1 = m;\n\n      int index_of_input_dim0, index_of_input_dim1, x_offset, y_offset;\n      index_of_input_dim0 = index_of_dim0 / scales[0];\n      y_offset = index_of_dim0 - index_of_input_dim0 * scales[0];\n      index_of_input_dim1 = index_of_dim1 / scales[1];\n      x_offset = index_of_dim1 - index_of_input_dim1 * scales[1];\n\n      input_index = index_of_input_dim0 * input_pitches[0] + index_of_input_dim1;\n\n      float x00 = getInputFloat(input_index);\n      float x10, x01, x11;\n\n      bool end_of_dim0 = false;\n      if (index_of_input_dim0 == (${inputs[0].dims[0]} - 1)) {\n        // It's the end in dimension 0\n        x01 = x00;\n        end_of_dim0 = true;\n      } else {\n        x01 = getInputFloat(input_index + input_pitches[0]);\n      }\n\n      if (index_of_input_dim1 == (input_pitches[0] - 1)) {\n        // It's the end in dimension 1\n        x10 = x00;\n        x11 = x01;\n      }\n      else {\n        x10 = getInputFloat(input_index + 1);\n        x11 = end_of_dim0 ? x10 : getInputFloat(input_index + input_pitches[0] + 1);\n      }\n\n      float y0 = x00 + float(y_offset) * (x01 - x00) / float(scales[0]);\n      float y1 = x10 + float(y_offset) * (x11 - x10) / float(scales[0]);\n      return y0 + float(x_offset) * (y1 - y0) / float(scales[1]);\n    }`;\n      return {\n        ...upsampleProgramMetadata,\n        output: {dims: outputShape, type: inputs[0].type, textureType: TextureType.unpacked},\n        shaderSource,\n        variables: [{\n          name: 'scales',\n          type: 'int',\n          arrayLength: attributes.scales.length,\n          data: attributes.scales.map(x => Math.ceil(x))\n        }]\n      };\n    };\n\nexport const validateInputs = (inputs: Tensor[], attribute: UpsampleAttributes): void => {\n  if (!inputs || (attribute.opset < 9 && inputs.length !== 1) ||\n      (attribute.opset >= 9 && attribute.opset < 11 && inputs.length !== 2) ||\n      (attribute.opset >= 11 && inputs.length !== 3 && inputs.length !== 4)) {\n    throw new Error('invalid inputs.');\n  }\n\n  if (attribute.scales.length > 0 && inputs[0].dims.length !== attribute.scales.length) {\n    throw new Error('Invalid input shape.');\n  }\n\n  if (inputs[0].type === 'string') {\n    throw new Error('Invalid input tensor types.');\n  }\n};\n\nexport const scalesValidation = (scales: number[], mode: string, isResize: boolean): void => {\n  if (!isResize) {\n    for (const scale of scales) {\n      if (scale < 1) {\n        throw new Error('Scale value should be greater than or equal to 1.');\n      }\n    }\n  } else {\n    for (const scale of scales) {\n      if (scale <= 0) {\n        throw new Error('Scale value should be greater than 0.');\n      }\n    }\n  }\n  if (mode === 'linear' || mode === 'cubic') {\n    if (scales.length !== 2 && (scales.length !== 4 || scales[0] !== 1 || scales[1] !== 1)) {\n      throw new Error(`'Linear' mode and 'Cubic' mode only support 2-D inputs ('Bilinear', 'Bicubic') \\\n        or 4-D inputs with the corresponding outermost 2 scale values being 1 \\\n        in the ${isResize ? 'Resize' : 'Upsample'} opeartor.`);\n    }\n  }\n};","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\nimport {Logger, Profiler} from '../../instrument';\n\nimport {GlslPreprocessor} from './glsl-preprocessor';\nimport {getVertexShaderSource} from './glsl-source';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {Artifact, ProgramInfo, ProgramVariable, TextureData, TextureLayout, VariableInfo} from './types';\nimport {WebGLContext} from './webgl-context';\n\n/**\n * ProgramManager is the main class behind running computations\n * It builds ProgramInfo's into Artifacts\n * It compiles given ProgramInfo's into WebGL Prorams (cached as Artifacts)\n * Uses the artifact to run the computation by calling Draw on\n * the WebGL drawing buffer\n * ProgramManager automatically maps (binds) input variables to their\n * corresponding Location's in the binary program\n */\nexport class ProgramManager {\n  repo: Map<unknown, Artifact>;  // this should be per-session object\n  vertexShader: WebGLShader;\n  attributesBound: boolean;\n\n  constructor(\n      public profiler: Readonly<Profiler>, public glContext: WebGLContext,\n      public textureLayoutStrategy: TextureLayoutStrategy) {\n    this.repo = new Map();\n    this.attributesBound = false;\n  }\n  getArtifact(key: unknown): Artifact|undefined {\n    return this.repo.get(key);\n  }\n  setArtifact(key: unknown, artifact: Artifact): void {\n    this.repo.set(key, artifact);\n  }\n  run(buildArtifact: Artifact, inputs: TextureData[], output: TextureData): void {\n    this.profiler.event('op', `ProgramManager.run ${buildArtifact.programInfo.name ?? 'unknown kernel'}`, () => {\n      const gl = this.glContext.gl;\n      const program = buildArtifact.program;\n      gl.useProgram(program);\n      try {\n        this.bindOutput(output);\n        if (!this.attributesBound) {\n          this.bindAttributes(buildArtifact.attribLocations);\n        }\n        this.bindUniforms(buildArtifact.uniformLocations, buildArtifact.programInfo.variables ?? [], inputs);\n      } catch (err) {\n        Logger.error('ProgramManager', buildArtifact.programInfo.shaderSource);\n        throw err;\n      }\n      this.profiler.event('backend', 'GlContext.draw()', () => {\n        this.glContext.draw();\n      });\n    }, this.glContext);\n  }\n  dispose(): void {\n    if (this.vertexShader) {\n      this.glContext.deleteShader(this.vertexShader);\n    }\n    this.repo.forEach(a => this.glContext.deleteProgram(a.program));\n  }\n  build(programInfo: ProgramInfo, inputTextureLayouts: TextureLayout[], outputTextureLayout: TextureLayout): Artifact {\n    return this.profiler.event('backend', 'ProgramManager.build', () => {\n      const preprocessor = new GlslPreprocessor(this.glContext, programInfo, inputTextureLayouts, outputTextureLayout);\n      const fragScript = preprocessor.preprocess();\n      const program = this.compile(fragScript);\n      const artifact = {\n        programInfo,\n        program,\n        uniformLocations: this.getUniformLocations(\n            program, preprocessor.context.programInfo.inputNames, preprocessor.context.programInfo.variables),\n        attribLocations: this.getAttribLocations(program)\n      };\n      return artifact;\n    });\n  }\n  protected compile(fragShaderScript: string): WebGLProgram {\n    if (!this.vertexShader) {\n      Logger.verbose('ProrgramManager', 'Compiling and caching Vertex shader for the first time');\n      const vertexShaderScript = getVertexShaderSource(this.glContext.version);\n      this.vertexShader = this.glContext.compileShader(vertexShaderScript, this.glContext.gl.VERTEX_SHADER);\n    }\n    if (env.debug) {\n      Logger.verbose('ProrgramManager', `FragShader:\n${fragShaderScript}\n`);\n    }\n    const fragShader = this.glContext.compileShader(fragShaderScript, this.glContext.gl.FRAGMENT_SHADER);\n    const program = this.glContext.createProgram(this.vertexShader, fragShader);\n    this.glContext.deleteShader(fragShader);\n    return program;\n  }\n  bindOutput(td: TextureData): void {\n    const width = td.width;\n    const height = td.height;\n    Logger.verbose(\n        'ProrgramManager',\n        `Binding output texture to Framebuffer: w/h=${width}/${height}, shape=${td.shape}, type=${td.tensor.type}`);\n    this.glContext.attachFramebuffer(td.texture, width, height);\n  }\n  bindAttributes(attribLocations: Artifact.AttribLocations): void {\n    const positionHandle = attribLocations.position;\n    const textureCoordHandle = attribLocations.textureCoord;\n    this.glContext.setVertexAttributes(positionHandle, textureCoordHandle);\n    this.attributesBound = true;\n  }\n  bindUniforms(uniformLocations: Artifact.UniformLocations, variables: ProgramVariable[], textures: TextureData[]):\n      void {\n    const gl = this.glContext.gl;\n    let texturePosition = 0;\n    for (const {name, type, location, arrayLength} of uniformLocations) {\n      const value = variables.find(v => v.name === name)?.data;\n      if (type !== 'sampler2D' && !value) {\n        throw new Error(`variable '${name}' does not have data defined in program info`);\n      }\n      switch (type) {\n        case 'sampler2D':\n          this.bindTexture(textures[texturePosition], location, texturePosition);\n          texturePosition++;\n          break;\n        case 'float':\n          if (arrayLength) {\n            gl.uniform1fv(location, value as number[]);\n          } else {\n            gl.uniform1f(location, value as number);\n          }\n          break;\n        case 'int':\n          if (arrayLength) {\n            gl.uniform1iv(location, value as number[]);\n          } else {\n            gl.uniform1i(location, value as number);\n          }\n          break;\n        default:\n          throw new Error(`Uniform not implemented: ${type}`);\n      }\n    }\n  }\n  bindTexture(td: TextureData, uniformHandle: WebGLUniformLocation, position: number): void {\n    this.glContext.bindTextureToUniform(td.texture, position, uniformHandle);\n  }\n  getAttribLocations(program: WebGLProgram): Artifact.AttribLocations {\n    return {\n      position: this.getAttribLocation(program, 'position'),\n      textureCoord: this.getAttribLocation(program, 'textureCoord')\n    };\n  }\n  getUniformLocations(program: WebGLProgram, samplers?: string[], variables?: VariableInfo[]):\n      Artifact.UniformLocations {\n    const uniformLocations: Artifact.UniformLocations = [];\n    if (samplers) {\n      for (const sampler of samplers) {\n        uniformLocations.push({name: sampler, type: 'sampler2D', location: this.getUniformLocation(program, sampler)});\n      }\n    }\n    if (variables) {\n      for (const variable of variables) {\n        uniformLocations.push({...variable, location: this.getUniformLocation(program, variable.name)});\n      }\n    }\n    return uniformLocations;\n  }\n  getUniformLocation(program: WebGLProgram, name: string): WebGLUniformLocation {\n    const gl = this.glContext.gl;\n    const reference = gl.getUniformLocation(program, name);\n    if (reference === null) {\n      throw new Error(`Uniform ${name} not found.`);\n    }\n    return reference;\n  }\n  getAttribLocation(program: WebGLProgram, name: string): number {\n    const gl = this.glContext.gl;\n    const attributeLocation: number = gl.getAttribLocation(program, name);\n    return attributeLocation;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from '../../backend';\nimport {Graph} from '../../graph';\nimport {Logger} from '../../instrument';\nimport {Operator} from '../../operators';\nimport {OpSet, resolveOperator} from '../../opset';\nimport {Session} from '../../session';\nimport {Tensor} from '../../tensor';\nimport {WebGLBackend} from '../backend-webgl';\n\nimport {WebGLInferenceHandler} from './inference-handler';\nimport {WEBGL_OP_RESOLVE_RULES} from './op-resolve-rules';\nimport {ProgramManager} from './program-manager';\nimport {PreferLogicalStrategy, TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureManager} from './texture-manager';\nimport {TextureData} from './types';\n\nexport class WebGLSessionHandler implements SessionHandler {\n  programManager: ProgramManager;\n  textureManager: TextureManager;\n  layoutStrategy: TextureLayoutStrategy;\n  packedTextureDataCache: Map<Tensor.Id, TextureData>;\n  unpackedTextureDataCache: Map<Tensor.Id, TextureData>;\n  pack2unpackMap: Map<Tensor.Id, Tensor.Id>;\n  unpack2packMap: Map<Tensor.Id, Tensor.Id>;\n  initializers: Set<Tensor.Id>;\n  pack?: boolean;\n\n  constructor(public readonly backend: WebGLBackend, public readonly context: Session.Context) {\n    this.layoutStrategy = new PreferLogicalStrategy(backend.glContext.maxTextureSize);\n    this.programManager = new ProgramManager(this.context.profiler, backend.glContext, this.layoutStrategy);\n    this.textureManager = new TextureManager(\n        backend.glContext, this.layoutStrategy, this.context.profiler,\n        {reuseTextures: backend.textureCacheMode === 'full'});\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache = new Map();\n    this.pack = backend.pack;\n    this.pack2unpackMap = new Map();\n    this.unpack2packMap = new Map();\n  }\n\n  createInferenceHandler() {\n    return new WebGLInferenceHandler(this);\n  }\n  onGraphInitialized(graph: Graph): void {\n    const initializers = graph.getValues().filter(v => v.from === -1 && v.tensor).map(v => v.tensor!.dataId);\n    this.initializers = new Set(initializers);\n  }\n  isInitializer(tensorId: Tensor.Id): boolean {\n    return this.initializers ? this.initializers.has(tensorId) : false;\n  }\n  addInitializer(tensorId: Tensor.Id): void {\n    this.initializers.add(tensorId);\n  }\n  getTextureData(tensorId: Tensor.Id, isPacked: boolean): TextureData|undefined {\n    if (isPacked) {\n      return this.packedTextureDataCache.get(tensorId);\n    } else {\n      return this.unpackedTextureDataCache.get(tensorId);\n    }\n  }\n  setTextureData(tensorId: Tensor.Id, textureData: TextureData, isPacked = false): void {\n    Logger.verbose('WebGLSessionHandler', 'Storing Texture data in cache');\n    if (isPacked) {\n      this.packedTextureDataCache.set(tensorId, textureData);\n    } else {\n      this.unpackedTextureDataCache.set(tensorId, textureData);\n    }\n  }\n  dispose(): void {\n    this.programManager.dispose();\n    this.textureManager.clearActiveTextures();\n    this.packedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.packedTextureDataCache = new Map();\n    this.unpackedTextureDataCache.forEach(td => this.textureManager.releaseTexture(td, true));\n    this.unpackedTextureDataCache = new Map();\n  }\n  resolve(node: Graph.Node, opsets: readonly OpSet[], graph: Graph): Operator {\n    const op = resolveOperator(node, opsets, WEBGL_OP_RESOLVE_RULES);\n    return {impl: op.opImpl, context: op.opInit ? op.opInit(node, graph) : node};\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nexport declare namespace Encoder {\n  export interface DataTypeMap {\n    float: Float32Array;\n    byte: Uint8Array;\n    int: Uint32Array;\n  }\n  export type DataType = keyof DataTypeMap;\n  type DataArrayType = DataTypeMap[DataType];\n\n  /* eslint-disable @typescript-eslint/naming-convention */\n  export const enum Usage {\n    Default = 0,\n    UploadOnly,\n    Download4BytesAsFloat32,\n  }\n}\n\n/**\n * Abstraction for mapping data types to texture texlets\n * Encoding means how a Float32 is mapped to 1 or 4 channels for each texlet\n * Decoding means how a texlet's channels are mapped to a resulting Float32\n */\nexport interface DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType;\n  allocate(size: number): Encoder.DataArrayType;\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Encoder.DataArrayType;\n}\n/**\n * WebGL2 data encoder\n * Uses R32F as the format for texlet\n */\nexport class RedFloat32DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGL2RenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.R32F;\n      this.format = gl.RED;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA32F;\n      this.format = gl.RGBA;\n      this.textureType = gl.FLOAT;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Encoder.DataArrayType, textureSize: number): Encoder.DataArrayType {\n    let result: Float32Array;\n    let source: Float32Array;\n    if (src.constructor !== Float32Array) {\n      Logger.warning('Encoder', 'data was not of type Float32; creating new Float32Array');\n      source = new Float32Array(src);\n    }\n    if (textureSize * this.channelSize > src.length) {\n      Logger.warning('Encoder', 'Source data too small. Allocating larger array');\n      source = src as Float32Array;\n      result = this.allocate(textureSize * this.channelSize) as Float32Array;\n      source.forEach((v, i) => result[i] = v);\n    } else {\n      source = src as Float32Array;\n      result = source;\n    }\n    return result;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n/**\n * Data encoder for WebGL 1 with support for floating point texture\n */\nexport class RGBAFloatDataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize: number;\n  constructor(gl: WebGLRenderingContext, channels = 1, textureType?: number) {\n    if (channels !== 1 && channels !== 4) {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n    this.internalFormat = gl.RGBA;\n    this.format = gl.RGBA;\n    this.channelSize = channels;\n    this.textureType = textureType || gl.FLOAT;\n  }\n  encode(src: Float32Array, textureSize: number): Encoder.DataArrayType {\n    let dest = src;\n    if (this.channelSize === 1) {\n      Logger.verbose('Encoder', 'Exploding into a larger array');\n      dest = this.allocate(textureSize) as Float32Array;\n      src.forEach((v, i) => dest[i * 4] = v);\n    }\n    return dest;\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Float32Array(size * 4);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Float32Array {\n    if (this.channelSize === 1) {\n      const filteredData = (buffer as Float32Array).filter((value, index) => index % 4 === 0).subarray(0, dataSize);\n      return filteredData;\n    }\n    return buffer.subarray(0, dataSize) as Float32Array;\n  }\n}\n\nexport class Uint8DataEncoder implements DataEncoder {\n  internalFormat: number;\n  format: number;\n  textureType: number;\n  channelSize = 4;\n  constructor(gl: WebGLRenderingContext, channels = 1) {\n    if (channels === 1) {\n      this.internalFormat = gl.ALPHA;\n      this.format = gl.ALPHA;  // not tested\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else if (channels === 4) {\n      this.internalFormat = gl.RGBA;\n      this.format = gl.RGBA;\n      this.textureType = gl.UNSIGNED_BYTE;\n      this.channelSize = channels;\n    } else {\n      throw new Error(`Invalid number of channels: ${channels}`);\n    }\n  }\n  encode(src: Uint8Array, _textureSize: number): Encoder.DataArrayType {\n    return new Uint8Array(src.buffer, src.byteOffset, src.byteLength);\n  }\n  allocate(size: number): Encoder.DataArrayType {\n    return new Uint8Array(size * this.channelSize);\n  }\n  decode(buffer: Encoder.DataArrayType, dataSize: number): Uint8Array {\n    if (buffer instanceof Uint8Array) {\n      return buffer.subarray(0, dataSize);\n    }\n    throw new Error(`Invalid array type: ${buffer.constructor}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\nimport {assert} from '../../util';\n/** Layout preferences */\nexport interface WidthHeightPrefs {\n  breakAxis?: number;\n  isPacked?: boolean;\n  reverseWH?: boolean;\n}\n/**\n * TextureLayoutStrategy is an abstraction for different plans\n * for mapping n-dimensional arrays to 2D textures (and back)\n */\nexport interface TextureLayoutStrategy {\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number];\n}\n\n/**\n * This strategy try to find the minimal max(W,H) that fulfills (W * H == totalSize)\n */\nexport class AlwaysKeepOriginalSizeStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    // scalar tensor\n    if (shape.length === 0) {\n      return [1, 1];\n    }\n    const maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    const totalSize = shape.reduce((a, b) => a * b);\n\n    let width = Math.floor(Math.sqrt(totalSize));\n\n    for (; width < maxTextureSize && width < totalSize; width++) {\n      if (totalSize % width === 0) {\n        break;\n      }\n    }\n\n    if (width >= maxTextureSize || totalSize % width !== 0) {\n      throw new Error(`The given dimensions are outside this GPU's boundaries: ${shape}`);\n    }\n    return [width, totalSize / width];\n  }\n}\n\nexport class PreferLogicalStrategy implements TextureLayoutStrategy {\n  constructor(public maxTextureSize: number) {}\n  computeTextureWH(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const wh = this.computeTexture(shape, prefs);\n    if (prefs && prefs.isPacked) {\n      wh[0] /= 2;\n      wh[1] /= 2;\n    }\n    if (prefs && prefs.reverseWH) {\n      return [wh[1], wh[0]];\n    }\n    return wh;\n  }\n\n  computeTexture(shape: readonly number[], prefs?: WidthHeightPrefs): [number, number] {\n    const isPacked = prefs && prefs.isPacked;\n    // scalar tensor\n    if (shape.length === 0) {\n      return isPacked ? [2, 2] : [1, 1];\n    }\n    let maxTextureSize = this.maxTextureSize;\n    if (prefs && prefs.breakAxis !== undefined) {\n      // check to see if dims fit\n      const wsize = prefs.breakAxis >= shape.length ? 1 : shape.slice(prefs.breakAxis).reduce((a, b) => a * b);\n      const hsize = prefs.breakAxis <= 0 ? 1 : shape.slice(0, prefs.breakAxis).reduce((a, b) => a * b);\n      if (wsize > maxTextureSize || hsize > maxTextureSize) {\n        // ignore preferences\n        // continue with default layout\n        Logger.verbose(\n            'TextureLayout',\n            `Given width/height preferences were unattainable: shape:${shape}, breakAxis:${prefs.breakAxis}`);\n      } else {\n        return [wsize, hsize];\n      }\n    }\n    let logShape = shape.slice(0);\n    if (isPacked) {\n      maxTextureSize = maxTextureSize * 2;\n\n      // This logic ensures we accurately count the number of packed texels needed\n      // to accommodate the tensor. We can only pack values in the same texel if\n      // they are from adjacent pairs of rows/cols within the same batch. So if a\n      // tensor has 3 rows, we pretend it has 4 rows in order to account for the\n      // fact that the texels containing the third row are half empty.\n      logShape = logShape.map(\n          (d, i) => i >= logShape.length - 2 ? (logShape[i] % 2 === 0 ? logShape[i] : logShape[i] + 1) : logShape[i]);\n\n      // Packed texture height is at least 2 (the channel height of a single\n      // texel).\n      if (logShape.length === 1) {\n        logShape = [2, logShape[0]];\n      }\n    }\n\n    // If logical shape is 2, we don't squeeze, since we want to match physical.\n    if (logShape.length !== 2) {\n      const squeezeResult = squeezeShape(logShape);\n      logShape = squeezeResult.newShape;\n    }\n\n    const size = sizeFromShape(logShape);\n    if (logShape.length <= 1 && size <= maxTextureSize) {\n      return [1, size];\n    } else if (logShape.length === 2 && logShape[0] <= maxTextureSize && logShape[1] <= maxTextureSize) {\n      return logShape as [number, number];\n    } else if (logShape.length === 3 && logShape[0] * logShape[1] <= maxTextureSize && logShape[2] <= maxTextureSize) {\n      return [logShape[0] * logShape[1], logShape[2]];\n    } else if (logShape.length === 3 && logShape[0] <= maxTextureSize && logShape[1] * logShape[2] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2]];\n    } else if (\n        logShape.length === 4 && logShape[0] * logShape[1] * logShape[2] <= maxTextureSize &&\n        logShape[3] <= maxTextureSize) {\n      return [logShape[0] * logShape[1] * logShape[2], logShape[3]];\n    } else if (\n        logShape.length === 4 && logShape[0] <= maxTextureSize &&\n        logShape[1] * logShape[2] * logShape[3] <= maxTextureSize) {\n      return [logShape[0], logShape[1] * logShape[2] * logShape[3]];\n    } else {\n      if (isPacked) {\n        // For packed textures size equals the number of channels required to\n        // accommodate the texture data. However in order to squarify such that\n        // inner dimensions stay even, we rewrite size to equal the number of\n        // texels. Then in the return statement we rehydrate the squarified\n        // dimensions to channel units.\n        return sizeToSquarishShape(size / 4).map(d => d * 2) as [number, number];\n      }\n      return sizeToSquarishShape(size);\n    }\n  }\n}\n\nexport function squeezeShape(shape: number[], axis?: number[]): {newShape: number[]; keptDims: number[]} {\n  const newShape: number[] = [];\n  const keptDims: number[] = [];\n  const isEmptyArray = axis != null && Array.isArray(axis) && axis.length === 0;\n  const axes = (axis == null || isEmptyArray) ? null : parseAxisParam(axis, shape).sort();\n  let j = 0;\n  for (let i = 0; i < shape.length; ++i) {\n    if (axes != null) {\n      if (axes[j] === i && shape[i] !== 1) {\n        throw new Error(`Can't squeeze axis ${i} since its dim '${shape[i]}' is not 1`);\n      }\n      if ((axes[j] == null || axes[j] > i) && shape[i] === 1) {\n        newShape.push(shape[i]);\n        keptDims.push(i);\n      }\n      if (axes[j] <= i) {\n        j++;\n      }\n    }\n    if (shape[i] !== 1) {\n      newShape.push(shape[i]);\n      keptDims.push(i);\n    }\n  }\n  return {newShape, keptDims};\n}\n\nexport function parseAxisParam(axis: number|number[], shape: number[]): number[] {\n  const rank = shape.length;\n\n  // Normalize input\n  axis = axis == null ? shape.map((s, i) => i) : ([] as number[]).concat(axis);\n\n  // Check for valid range\n  assert(\n      axis.every(ax => ax >= -rank && ax < rank),\n      () => `All values in axis param must be in range [-${rank}, ${rank}) but ` +\n          `got axis ${axis}`);\n\n  // Check for only integers\n  assert(\n      axis.every(isInt),\n      () => 'All values in axis param must be integers but ' +\n          `got axis ${axis}`);\n\n  // Handle negative axis.\n  return axis.map(a => a < 0 ? rank + a : a);\n}\nexport function isInt(a: number): boolean {\n  return a % 1 === 0;\n}\nexport function sizeFromShape(shape: number[]): number {\n  if (shape.length === 0) {\n    // Scalar.\n    return 1;\n  }\n  let size = shape[0];\n  for (let i = 1; i < shape.length; i++) {\n    size *= shape[i];\n  }\n  return size;\n}\nexport function getRowsCols(shape: number[]): [number, number] {\n  if (shape.length === 0) {\n    throw Error('Cannot get rows and columns of an empty shape array.');\n  }\n\n  return [shape.length > 1 ? shape[shape.length - 2] : 1, shape[shape.length - 1]];\n}\nexport function sizeToSquarishShape(size: number): [number, number] {\n  const width = Math.ceil(Math.sqrt(size));\n  return [width, Math.ceil(size / width)];\n}\nexport function getBatchDim(shape: number[], dimsToSkip = 2): number {\n  return sizeFromShape(shape.slice(0, shape.length - dimsToSkip));\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {ShapeUtil} from '../../util';\nimport {TextureLayoutStrategy, WidthHeightPrefs} from './texture-layout-strategy';\nimport {TextureLayout, TextureType} from './types';\n\nexport const createTextureLayoutFromTextureType =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[],\n     textureType: TextureType): TextureLayout => {\n      const channel = (textureType === TextureType.unpacked || textureType === TextureType.unpackedReversed) ? 1 : 4;\n      const isPacked = textureType === TextureType.packed;\n      const reverseWH = (textureType === TextureType.unpackedReversed || textureType === TextureType.packed);\n      const breakAxis = textureType === TextureType.packedLastDimension ? shape.length - 1 : undefined;\n      const unpackedShape = textureType === TextureType.packedLastDimension ?\n          shape.map((d, i) => i === shape.length - 1 ? d * 4 : d) :\n          undefined;\n      return createTextureLayoutFromShape(\n          textureLayoutStrategy, shape, channel, unpackedShape, {isPacked, reverseWH, breakAxis});\n    };\n\nexport const calculateTextureWidthAndHeight =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], textureType: TextureType):\n        [number, number] => {\n          const layout = createTextureLayoutFromTextureType(textureLayoutStrategy, shape, textureType);\n          return [layout.width, layout.height];\n        };\n\n/**\n * Create a TextureLayout object from shape.\n */\nexport const createTextureLayoutFromShape =\n    (textureLayoutStrategy: TextureLayoutStrategy, shape: readonly number[], channels: 1|4 = 1,\n     unpackedShape?: readonly number[], prefs?: WidthHeightPrefs): TextureLayout => {\n      const isPacked = !!(prefs && prefs.isPacked);\n      const [width, height] = textureLayoutStrategy.computeTextureWH(isPacked ? unpackedShape || shape : shape, prefs);\n      const rank = shape.length;\n      let inferredDims = shape.slice(0);\n      if (rank === 0) {\n        inferredDims = [1];\n      }\n      if (channels === 1) {\n        // unpackedShape will take `shape` and not `inferredDims` so as to create a scalar Tensor if need be\n        unpackedShape = shape;\n      } else if (isPacked) {\n        if (channels !== 4) {\n          throw new Error('a packed texture must be 4-channel');\n        }\n        unpackedShape = shape;\n        if (rank > 0) {\n          inferredDims[rank - 1] = Math.ceil(inferredDims[rank - 1] / 2);\n        }\n        if (rank > 1) {\n          inferredDims[rank - 2] = Math.ceil(inferredDims[rank - 2] / 2);\n        }\n      } else if (!unpackedShape) {\n        throw new Error('Unpacked shape is needed when using channels > 1');\n      }\n      return {\n        width,\n        height,\n        channels,\n        isPacked,\n        shape: inferredDims,\n        strides: ShapeUtil.computeStrides(inferredDims),\n        unpackedShape,\n        reversedWH: (prefs && prefs.reverseWH)\n      };\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger, Profiler} from '../../instrument';\nimport {Tensor} from '../../tensor';\n\nimport {Encoder} from './texture-data-encoder';\nimport {TextureLayoutStrategy} from './texture-layout-strategy';\nimport {TextureData, TextureLayout} from './types';\nimport {WebGLContext} from './webgl-context';\n\nexport interface TextureManagerConfig {\n  reuseTextures?: boolean;\n}\n\n/**\n * TextureManager is the mainly responsible for caching Textures\n * Textures are cached in 2 levels:\n *   1. the texures which are associated with a dataId (from Tensor)\n *    Caching these is crucial to performance. These are In-use Textures\n *   2. textures which are not in use by any current ProgramInfo/Tensor\n *     These are called Free Textures\n * TextureManager is also used to help creating textures. For this it\n * uses WebGLContext and TextureLayoutStrategy\n */\nexport class TextureManager {\n  private readonly inUseTextures: Map<string, WebGLTexture[]>;\n  private readonly idleTextures: Map<string, WebGLTexture[]>;\n  private readonly textureLookup: Map<WebGLTexture, string>;\n  private readonly pendingRead: Map<Tensor.Id, Array<(arr: Tensor.NumberType) => void>> = new Map();\n\n  constructor(\n      public glContext: WebGLContext, public layoutStrategy: TextureLayoutStrategy, public profiler: Readonly<Profiler>,\n      private config: TextureManagerConfig) {\n    if (config.reuseTextures) {\n      this.inUseTextures = new Map();\n      this.idleTextures = new Map();\n      this.textureLookup = new Map();\n    }\n  }\n  createTextureFromLayout(\n      dataType: Tensor.DataType, layout: TextureLayout, data?: Tensor.NumberType, usage?: Encoder.Usage) {\n    const textureDataType = this.toEncoderType(dataType);\n\n    const encoder = this.glContext.getEncoder(textureDataType, layout.channels || 1, usage);\n    if (layout.isPacked && usage === Encoder.Usage.UploadOnly) {\n      throw new Error('not implemented');\n    }\n    const width = layout.width;\n    const height = layout.height;\n\n    let key: string|undefined;\n    let inUseTextures: WebGLTexture[]|undefined;\n    if (this.config.reuseTextures) {\n      key = `${width}x${height}_${encoder.format}_${encoder.internalFormat}_${encoder.textureType}`;\n      inUseTextures = this.inUseTextures.get(key);\n      if (!inUseTextures) {\n        inUseTextures = [];\n        this.inUseTextures.set(key, inUseTextures);\n      }\n\n      const idleTextures = this.idleTextures.get(key);\n      if (idleTextures && idleTextures.length > 0) {\n        const texture = idleTextures.pop()!;\n        inUseTextures.push(texture);\n        if (usage === Encoder.Usage.UploadOnly) {\n          this.glContext.updateTexture(texture, width, height, encoder, this.toTextureData(dataType, data)!);\n        }\n        return texture;\n      }\n    }\n\n    Logger.verbose('TextureManager', `Creating new texture of size ${layout.width}x${layout.height}`);\n    const texture = this.glContext.allocateTexture(width, height, encoder, this.toTextureData(dataType, data));\n\n    if (this.config.reuseTextures) {\n      inUseTextures!.push(texture);\n      this.textureLookup.set(texture, key!);\n    }\n    return texture;\n  }\n  readTexture(td: TextureData, dataType: Tensor.DataType, channels?: number): Tensor.NumberType {\n    if (!channels) {\n      channels = 1;\n    }\n    return this.profiler.event('backend', 'TextureManager.readTexture', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      return this.toTensorData(dataType, data);\n    });\n  }\n  async readTextureAsync(td: TextureData, dataType: Tensor.DataType, channels?: number): Promise<Tensor.NumberType> {\n    const dataId = td.tensor.dataId;\n    if (!channels) {\n      channels = 1;\n    }\n    if (this.pendingRead.has(dataId)) {\n      const subscribers = this.pendingRead.get(dataId);\n      return new Promise<Tensor.NumberType>(resolve => subscribers?.push(resolve));\n    }\n    return this.profiler.event('backend', 'TextureManager.readTextureAsync', async () => {\n      this.pendingRead.set(dataId, []);\n      const dataSize = td.shape.reduce((a, b) => a * b) * channels!;\n      // add a fence waiting for the data to be ready\n      await this.glContext.createAndWaitForFence();\n      const data = this.glContext.readTexture(\n          td.texture, td.width, td.height, dataSize, this.toEncoderType(dataType), channels!);\n      const tensorData = this.toTensorData(dataType, data);\n      const subscribers = this.pendingRead.get(dataId);\n      this.pendingRead.delete(dataId);\n      subscribers?.forEach(resolve => resolve(tensorData));\n      return tensorData;\n    });\n  }\n  readUint8TextureAsFloat(td: TextureData): Float32Array {\n    return this.profiler.event('backend', 'TextureManager.readUint8TextureAsFloat', () => {\n      const dataSize = td.shape.reduce((a, b) => a * b);\n      const data = this.glContext.readTexture(td.texture, td.width, td.height, dataSize * 4, 'byte', 4);\n      return new Float32Array(data.buffer, data.byteOffset, dataSize);\n    });\n  }\n  releaseTexture(textureData: TextureData, deleteTexture?: boolean): void {\n    let key: string|undefined;\n    if (this.config.reuseTextures) {\n      key = this.textureLookup.get(textureData.texture);\n      if (key) {\n        if (deleteTexture) {\n          this.textureLookup.delete(key);\n        }\n        const inUseTextures = this.inUseTextures.get(key);\n        if (inUseTextures) {\n          const index = inUseTextures.indexOf(textureData.texture);\n          if (index !== -1) {\n            inUseTextures.splice(index, 1);\n            let idleTextures = this.idleTextures.get(key);\n            if (!idleTextures) {\n              idleTextures = [];\n              this.idleTextures.set(key, idleTextures);\n            }\n            idleTextures.push(textureData.texture);\n          }\n        }\n      }\n    }\n\n    if (!key || deleteTexture) {\n      Logger.verbose('TextureManager', `Deleting texture of size ${textureData.width}x${textureData.height}`);\n      this.glContext.deleteTexture(textureData.texture);\n    }\n  }\n  toTensorData(dataType: Tensor.DataType, data: Encoder.DataArrayType): Tensor.NumberType {\n    switch (dataType) {\n      case 'int16':\n        return data instanceof Int16Array ? data : Int16Array.from(data);\n      case 'int32':\n        return data instanceof Int32Array ? data : Int32Array.from(data);\n      case 'int8':\n        return data instanceof Int8Array ? data : Int8Array.from(data);\n      case 'uint16':\n        return data instanceof Uint16Array ? data : Uint16Array.from(data);\n      case 'uint32':\n        return data instanceof Uint32Array ? data : Uint32Array.from(data);\n      case 'uint8':\n      case 'bool':\n        return data instanceof Uint8Array ? data : Uint8Array.from(data);\n      case 'float32':\n        return data instanceof Float32Array ? data : Float32Array.from(data);\n      case 'float64':\n        return data instanceof Float64Array ? data : Float64Array.from(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n  }\n  toTextureData(dataType: Tensor.DataType, data: Tensor.NumberType|undefined): Encoder.DataArrayType|undefined {\n    if (!data) {\n      return undefined;\n    }\n    return (data instanceof Float32Array) ? data : new Float32Array(data);\n    /*\n    switch (dataType) {\n      case 'int16':\n      case 'int32':\n      case 'uint16':\n      case 'uint32':\n        return (data.constructor === Uint32Array) ? data as Uint32Array : new Uint32Array(data);\n      case 'int8':\n      case 'uint8':\n      case 'bool':\n        return (data.constructor === Uint8Array) ? data as Uint8Array : new Uint8Array(data);\n      case 'float32':\n      case 'float64':\n        return (data.constructor === Float32Array) ? data as Float32Array : new Float32Array(data);\n      default:\n        throw new Error(`TensorData type ${dataType} is not supported`);\n    }\n    */\n  }\n  toEncoderType(_dataType: Tensor.DataType): Encoder.DataType {\n    return 'float';\n    // switch (dataType) {\n    //   case 'int16':\n    //   case 'int32':\n    //   case 'uint16':\n    //   case 'uint32':\n    //     return 'int';\n    //   case 'uint8':\n    //   case 'bool':\n    //     return 'byte';\n    //   case 'float32':\n    //   case 'float64':\n    //     return 'float';\n    //   default:\n    //     throw new Error(`TensorData type ${dataType} is not supported`);\n    // }\n  }\n  clearActiveTextures(): void {\n    this.glContext.clearActiveTextures();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Tensor} from '../../tensor';\n\n/**\n * Layout info is used for mapping n-dimensional array to 2D textures\n * The layout is created by the TextureLayoutStrategy based on\n * the Tensor's dimensions and strides\n */\nexport interface TextureLayout {\n  width: number;\n  height: number;\n  /**\n   * specify the number of value that encoded in a single pixel\n   */\n  channels: 1|2|3|4;\n  /**\n   * whether in packed mode or not\n   */\n  isPacked?: boolean;\n  /**\n   * the normalized shape\n   */\n  shape: readonly number[];\n  /**\n   * the stride of each dimensions, calculated according to shape\n   */\n  strides: readonly number[];\n  /**\n   * the original shape(dims) of the corresponding tensor\n   */\n  unpackedShape: readonly number[];\n\n  reversedWH?: boolean;\n}\nexport interface TextureData extends TextureLayout {\n  tensor: Tensor;\n  texture: WebGLTexture;\n}\n\nexport enum TextureType {\n  unpacked,              // <-- normal unpacked texture\n  unpackedReversed,      // <-- unpacked texture used in old ONNX.js implementation (deprecated)\n  packed,                // <-- normal packed texture\n  downloadUint8AsFloat,  // <-- ONLY used in texture downloading for iOS devices\n  packedLastDimension    // <-- ONLY used in old ONNX.js Conv implementation for input W (deprecated)\n}\n\nexport interface TensorInfo {\n  id?: Tensor.Id;\n  dims: readonly number[];\n  type: Tensor.DataType;\n  textureType: TextureType;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * A set of metadata of a shader program.\n */\nexport interface ProgramMetadata {\n  /**\n   * the name of the program. used for debugging and profiling\n   */\n  name: string;\n  /**\n   * texture types for each input\n   */\n  inputTypes: TextureType[];\n  /**\n   * names of each input\n   */\n  inputNames: string[];\n  /**\n   * an optional string as a cache hint in the artifact cache\n   */\n  cacheHint?: string;\n}\n\n/**\n * A ProgramInfoLoader allows\n */\nexport interface ProgramInfoLoader extends ProgramMetadata {\n  /**\n   * a function to get the program info\n   */\n  get(): ProgramInfo;\n}\n\n/**\n * A set of data that represent a shader program\n */\nexport interface ProgramInfo extends ProgramMetadata {\n  /**\n   * information of uniform variables\n   */\n  variables?: ProgramVariable[];\n  /**\n   * tensor info for output\n   */\n  output: TensorInfo;\n  /**\n   * the shader's processing source code\n   */\n  shaderSource: string;\n  /**\n   * whether the shader source contains a customized main function implementation\n   */\n  hasMain?: boolean;\n}\n\nexport interface VariableInfo {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface ProgramVariable {\n  type: 'float'|'int';\n  name: string;\n  arrayLength?: number;\n  data: number|number[];\n}\n\n/**\n * Information of uniforms that shader uses\n */\nexport interface UniformInfo {\n  type: 'sampler2D'|VariableInfo['type'];\n  name: string;\n  arrayLength?: number;\n}\n\nexport interface UniformLocation extends UniformInfo {\n  location: WebGLUniformLocation;\n}\n\n/**\n * Artifact is the result of compilation\n * It does not contain input of output data\n * However anything that could be run as a \"program\"\n */\nexport interface Artifact {\n  programInfo: ProgramInfo;\n  program: WebGLProgram;\n  uniformLocations: UniformLocation[];\n  attribLocations: {position: number; textureCoord: number};\n}\nexport declare namespace Artifact {\n  type UniformLocations = Artifact['uniformLocations'];\n  type AttribLocations = Artifact['attribLocations'];\n}\n\nexport interface UniformData {\n  [name: string]: number|number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {assert} from '../../util';\n/**\n * Given a non RGBA shape calculate the R version\n * It is assumed that the dimensions are multiples of given channels\n * NOTE: it is always the last dim that gets packed.\n * @param unpackedShape original shape to create a packed version from\n */\nexport function getPackedShape(unpackedShape: readonly number[]): readonly number[] {\n  const len = unpackedShape.length;\n  return unpackedShape.slice(0, len - 1).concat(unpackedShape[len - 1] / 4);\n}\n\nexport async function repeatedTry(\n    checkFn: () => boolean, delayFn = (_counter: number) => 0, maxCounter?: number): Promise<void> {\n  return new Promise<void>((resolve, reject) => {\n    let tryCount = 0;\n\n    const tryFn = () => {\n      if (checkFn()) {\n        resolve();\n        return;\n      }\n\n      tryCount++;\n\n      const nextBackoff = delayFn(tryCount);\n\n      if (maxCounter != null && tryCount >= maxCounter) {\n        reject();\n        return;\n      }\n      setTimeout(tryFn, nextBackoff);\n    };\n\n    tryFn();\n  });\n}\n\n/**\n * Generates the function name from an input sampler name.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerName(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1);\n}\n\n/**\n * Generates the function name from an input sampler name at output coordinates.\n * @param samplerName Name of the sampler.\n */\nexport function generateShaderFuncNameFromInputSamplerNameAtOutCoords(samplerName: string): string {\n  assert(typeof samplerName !== 'undefined' && samplerName.length !== 0, () => 'empty string found for sampler name');\n  return 'get' + samplerName.charAt(0).toUpperCase() + samplerName.slice(1) + 'AtOutCoords';\n}\n\n/** Returns a new input shape (a copy) that has a squeezed logical shape. */\nexport function squeezeInputShape(inputShape: readonly number[], squeezedShape: number[]): number[] {\n  // Deep copy.\n  let newInputShape: number[] = JSON.parse(JSON.stringify(inputShape));\n  newInputShape = squeezedShape;\n  return newInputShape;\n}\n\n/** Returns a list of squeezed parameters for shader functions */\nexport function getSqueezedParams(params: string[], keptDims: number[]): string {\n  return keptDims.map(d => params[d]).join(', ');\n}\n\n/** Returns the data type for different ranks. */\nexport function getCoordsDataType(rank: number): string {\n  if (rank <= 1) {\n    return 'int';\n  } else if (rank === 2) {\n    return 'ivec2';\n  } else if (rank === 3) {\n    return 'ivec3';\n  } else if (rank === 4) {\n    return 'ivec4';\n  } else if (rank === 5) {\n    return 'ivec5';\n  } else if (rank === 6) {\n    return 'ivec6';\n  } else {\n    throw Error(`GPU for rank ${rank} is not yet supported`);\n  }\n}\n\nexport function getGlChannels(rank = 6): string[] {\n  return ['x', 'y', 'z', 'w', 'u', 'v'].slice(0, rank);\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Logger} from '../../instrument';\n\nimport {WebGLContext} from './webgl-context';\n\nconst cache: {[contextId: string]: WebGLContext} = {};\n\n/**\n * This factory function creates proper WebGLRenderingContext based on\n * the current browsers capabilities\n * The order is from higher/most recent versions to most basic\n */\nexport function createWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  let context: WebGLContext|undefined;\n  if ((!contextId || contextId === 'webgl2') && 'webgl2' in cache) {\n    context = cache.webgl2;\n  } else if ((!contextId || contextId === 'webgl') && 'webgl' in cache) {\n    context = cache.webgl;\n  }\n\n  context = context || createNewWebGLContext(contextId);\n  contextId = contextId || context.version === 1 ? 'webgl' : 'webgl2';\n  const gl = context.gl;\n\n  cache[contextId] = context;\n\n  if (gl.isContextLost()) {\n    delete cache[contextId];\n    return createWebGLContext(contextId);\n  }\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n  gl.disable(gl.BLEND);\n  gl.disable(gl.DITHER);\n  gl.disable(gl.POLYGON_OFFSET_FILL);\n  gl.disable(gl.SAMPLE_COVERAGE);\n  gl.enable(gl.SCISSOR_TEST);\n  gl.enable(gl.CULL_FACE);\n  gl.cullFace(gl.BACK);\n\n  return context;\n}\n\nexport function createNewWebGLContext(contextId?: 'webgl'|'webgl2'): WebGLContext {\n  const canvas = createCanvas();\n  const contextAttributes: WebGLContextAttributes = {\n    alpha: false,\n    depth: false,\n    antialias: false,\n    stencil: false,\n    preserveDrawingBuffer: false,\n    premultipliedAlpha: false,\n    failIfMajorPerformanceCaveat: false\n  };\n  let gl: WebGLRenderingContext|null;\n  const ca = contextAttributes;\n  if (!contextId || contextId === 'webgl2') {\n    gl = canvas.getContext('webgl2', ca);\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 2);\n      } catch (err) {\n        Logger.warning('GlContextFactory', `failed to create WebGLContext using contextId 'webgl2'. Error: ${err}`);\n      }\n    }\n  }\n  if (!contextId || contextId === 'webgl') {\n    gl = canvas.getContext('webgl', ca) || canvas.getContext('experimental-webgl', ca) as WebGLRenderingContext;\n    if (gl) {\n      try {\n        return new WebGLContext(gl, 1);\n      } catch (err) {\n        Logger.warning(\n            'GlContextFactory',\n            `failed to create WebGLContext using contextId 'webgl' or 'experimental-webgl'. Error: ${err}`);\n      }\n    }\n  }\n\n  throw new Error('WebGL is not supported');\n}\n\nfunction createCanvas(): HTMLCanvasElement {\n  const canvas: HTMLCanvasElement = document.createElement('canvas');\n  canvas.width = 1;\n  canvas.height = 1;\n  return canvas;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env} from 'onnxruntime-common';\n\nimport * as DataEncoders from './texture-data-encoder';\nimport {DataEncoder, Encoder} from './texture-data-encoder';\nimport {repeatedTry} from './utils';\n\nexport interface FenceContext {\n  query: WebGLSync|null;\n  isFencePassed(): boolean;\n}\n\ntype PollItem = {\n  isDoneFn: () => boolean; resolveFn: () => void;\n};\n\nexport function linearSearchLastTrue(arr: Array<() => boolean>): number {\n  let i = 0;\n  for (; i < arr.length; ++i) {\n    const isDone = arr[i]();\n    if (!isDone) {\n      break;\n    }\n  }\n  return i - 1;\n}\n\n/**\n * Abstraction and wrapper around WebGLRenderingContext and its operations\n */\nexport class WebGLContext {\n  gl: WebGLRenderingContext;\n  version: 1|2;\n\n  private vertexbuffer: WebGLBuffer;\n  private framebuffer: WebGLFramebuffer;\n\n  // WebGL flags and vital parameters\n  private isFloatTextureAttachableToFrameBuffer: boolean;\n  isFloat32DownloadSupported: boolean;\n  isRenderFloat32Supported: boolean;\n  isBlendSupported: boolean;\n  maxTextureSize: number;\n  // private maxCombinedTextureImageUnits: number;\n  private maxTextureImageUnits: number;\n  // private maxCubeMapTextureSize: number;\n  // private shadingLanguageVersion: string;\n  // private webglVendor: string;\n  // private webglVersion: string;\n\n  // WebGL2 flags and vital parameters\n  // private max3DTextureSize: number;\n  // private maxArrayTextureLayers: number;\n  // private maxColorAttachments: number;\n  // private maxDrawBuffers: number;\n\n  // WebGL extensions\n  // eslint-disable-next-line camelcase\n  textureFloatExtension: OES_texture_float|null;\n  // eslint-disable-next-line camelcase\n  textureHalfFloatExtension: OES_texture_half_float|null;\n\n  // WebGL2 extensions\n  colorBufferFloatExtension: unknown|null;\n  // eslint-disable-next-line @typescript-eslint/naming-convention\n  disjointTimerQueryWebgl2Extension: {TIME_ELAPSED_EXT: GLenum; GPU_DISJOINT_EXT: GLenum}|null;\n\n  private disposed: boolean;\n  private frameBufferBound = false;\n\n  constructor(gl: WebGLRenderingContext, version: 1|2) {\n    this.gl = gl;\n    this.version = version;\n\n    this.getExtensions();\n    this.vertexbuffer = this.createVertexbuffer();\n    this.framebuffer = this.createFramebuffer();\n    this.queryVitalParameters();\n  }\n\n  allocateTexture(width: number, height: number, encoder: DataEncoder, data?: Encoder.DataArrayType): WebGLTexture {\n    const gl = this.gl;\n    // create the texture\n    const texture = gl.createTexture();\n    // bind the texture so the following methods effect this texture.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    const buffer = data ? encoder.encode(data, width * height) : null;\n    gl.texImage2D(\n        gl.TEXTURE_2D,\n        0,  // Level of detail.\n        encoder.internalFormat, width, height,\n        0,  // Always 0 in OpenGL ES.\n        encoder.format, encoder.textureType, buffer);\n    this.checkError();\n    return texture as WebGLTexture;\n  }\n  updateTexture(\n      texture: WebGLTexture, width: number, height: number, encoder: DataEncoder, data: Encoder.DataArrayType): void {\n    const gl = this.gl;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    const buffer = encoder.encode(data, width * height);\n    gl.texSubImage2D(\n        gl.TEXTURE_2D,\n        0,  // level\n        0,  // xoffset\n        0,  // yoffset\n        width, height, encoder.format, encoder.textureType, buffer);\n    this.checkError();\n  }\n  attachFramebuffer(texture: WebGLTexture, width: number, height: number): void {\n    const gl = this.gl;\n    // Make it the target for framebuffer operations - including rendering.\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, this.framebuffer);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    this.checkError();\n    gl.viewport(0, 0, width, height);\n    gl.scissor(0, 0, width, height);\n  }\n  readTexture(\n      texture: WebGLTexture, width: number, height: number, dataSize: number, dataType: Encoder.DataType,\n      channels: number): Encoder.DataArrayType {\n    const gl = this.gl;\n    if (!channels) {\n      channels = 1;\n    }\n    if (!this.frameBufferBound) {\n      this.attachFramebuffer(texture, width, height);\n    }\n    const encoder = this.getEncoder(dataType, channels);\n    const buffer = encoder.allocate(width * height);\n    // bind texture to framebuffer\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.framebufferTexture2D(\n        gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture,\n        0);  // 0, we aren't using MIPMAPs\n    // TODO: Check if framebuffer is ready\n    gl.readPixels(0, 0, width, height, gl.RGBA, encoder.textureType, buffer);\n    this.checkError();\n    // unbind FB\n    return encoder.decode(buffer, dataSize);\n  }\n\n  isFramebufferReady(): boolean {\n    // TODO: Implement logic to check if the framebuffer is ready\n    return true;\n  }\n  getActiveTexture(): string {\n    const gl = this.gl;\n    const n = gl.getParameter(this.gl.ACTIVE_TEXTURE);\n    return `TEXTURE${(n - gl.TEXTURE0)}`;\n  }\n  getTextureBinding(): WebGLTexture {\n    return this.gl.getParameter(this.gl.TEXTURE_BINDING_2D);\n  }\n  getFramebufferBinding(): WebGLFramebuffer {\n    return this.gl.getParameter(this.gl.FRAMEBUFFER_BINDING);\n  }\n  setVertexAttributes(positionHandle: number, textureCoordHandle: number): void {\n    const gl = this.gl;\n    gl.vertexAttribPointer(positionHandle, 3, gl.FLOAT, false, 20, 0);\n    gl.enableVertexAttribArray(positionHandle);\n    if (textureCoordHandle !== -1) {\n      gl.vertexAttribPointer(textureCoordHandle, 2, gl.FLOAT, false, 20, 12);\n      gl.enableVertexAttribArray(textureCoordHandle);\n    }\n    this.checkError();\n  }\n  createProgram(\n      vertexShader: WebGLShader,\n      fragShader: WebGLShader,\n      ): WebGLProgram {\n    const gl = this.gl;\n    const program = gl.createProgram()!;\n\n    // the program consists of our shaders\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragShader);\n    gl.linkProgram(program);\n    return program;\n  }\n  compileShader(shaderSource: string, shaderType: number): WebGLShader {\n    const gl = this.gl;\n    const shader = gl.createShader(shaderType);\n    if (!shader) {\n      throw new Error(`createShader() returned null with type ${shaderType}`);\n    }\n\n    gl.shaderSource(shader, shaderSource);\n    gl.compileShader(shader);\n    if (gl.getShaderParameter(shader, gl.COMPILE_STATUS) === false) {\n      throw new Error(`Failed to compile shader: ${gl.getShaderInfoLog(shader)}\nShader source:\n${shaderSource}`);\n    }\n    return shader;\n  }\n  deleteShader(shader: WebGLShader): void {\n    this.gl.deleteShader(shader);\n  }\n  bindTextureToUniform(texture: WebGLTexture, position: number, uniformHandle: WebGLUniformLocation): void {\n    const gl = this.gl;\n    gl.activeTexture(gl.TEXTURE0 + position);\n    this.checkError();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    this.checkError();\n    gl.uniform1i(uniformHandle, position);\n    this.checkError();\n  }\n  draw(): void {\n    this.gl.drawArrays(this.gl.TRIANGLE_STRIP, 0, 4);\n    this.checkError();\n  }\n  checkError(): void {\n    if (env.debug) {\n      const gl = this.gl;\n      const error = gl.getError();\n      let label = '';\n      switch (error) {\n        case (gl.NO_ERROR):\n          return;\n        case (gl.INVALID_ENUM):\n          label = 'INVALID_ENUM';\n          break;\n        case (gl.INVALID_VALUE):\n          label = 'INVALID_VALUE';\n          break;\n        case (gl.INVALID_OPERATION):\n          label = 'INVALID_OPERATION';\n          break;\n        case (gl.INVALID_FRAMEBUFFER_OPERATION):\n          label = 'INVALID_FRAMEBUFFER_OPERATION';\n          break;\n        case (gl.OUT_OF_MEMORY):\n          label = 'OUT_OF_MEMORY';\n          break;\n        case (gl.CONTEXT_LOST_WEBGL):\n          label = 'CONTEXT_LOST_WEBGL';\n          break;\n        default:\n          label = `Unknown WebGL Error: ${error.toString(16)}`;\n      }\n      throw new Error(label);\n    }\n  }\n  deleteTexture(texture: WebGLTexture): void {\n    this.gl.deleteTexture(texture);\n  }\n  deleteProgram(program: WebGLProgram): void {\n    this.gl.deleteProgram(program);\n  }\n  getEncoder(dataType: Encoder.DataType, channels: number, usage: Encoder.Usage = Encoder.Usage.Default): DataEncoder {\n    if (this.version === 2) {\n      return new DataEncoders.RedFloat32DataEncoder(this.gl as WebGL2RenderingContext, channels);\n    }\n\n    switch (dataType) {\n      case 'float':\n        if (usage === Encoder.Usage.UploadOnly || this.isRenderFloat32Supported) {\n          return new DataEncoders.RGBAFloatDataEncoder(this.gl, channels);\n        } else {\n          return new DataEncoders.RGBAFloatDataEncoder(\n              this.gl, channels, this.textureHalfFloatExtension!.HALF_FLOAT_OES);\n        }\n      case 'int':\n        throw new Error('not implemented');\n      case 'byte':\n        return new DataEncoders.Uint8DataEncoder(this.gl, channels);\n      default:\n        throw new Error(`Invalid dataType: ${dataType}`);\n    }\n  }\n  clearActiveTextures(): void {\n    const gl = this.gl;\n    for (let unit = 0; unit < this.maxTextureImageUnits; ++unit) {\n      gl.activeTexture(gl.TEXTURE0 + unit);\n      gl.bindTexture(gl.TEXTURE_2D, null);\n    }\n  }\n  dispose(): void {\n    if (this.disposed) {\n      return;\n    }\n    const gl = this.gl;\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteFramebuffer(this.framebuffer);\n    gl.bindBuffer(gl.ARRAY_BUFFER, null);\n    gl.deleteBuffer(this.vertexbuffer);\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, null);\n    gl.finish();\n    this.disposed = true;\n  }\n\n  private createDefaultGeometry(): Float32Array {\n    // Sets of x,y,z(=0),s,t coordinates.\n    return new Float32Array([\n      -1.0, 1.0,  0.0, 0.0, 1.0,  // upper left\n      -1.0, -1.0, 0.0, 0.0, 0.0,  // lower left\n      1.0,  1.0,  0.0, 1.0, 1.0,  // upper right\n      1.0,  -1.0, 0.0, 1.0, 0.0   // lower right\n    ]);\n  }\n  private createVertexbuffer(): WebGLBuffer {\n    const gl = this.gl;\n    const buffer = gl.createBuffer();\n    if (!buffer) {\n      throw new Error('createBuffer() returned null');\n    }\n    const geometry = this.createDefaultGeometry();\n    gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ARRAY_BUFFER, geometry, gl.STATIC_DRAW);\n    this.checkError();\n    return buffer;\n  }\n  private createFramebuffer(): WebGLFramebuffer {\n    const fb = this.gl.createFramebuffer();\n    if (!fb) {\n      throw new Error('createFramebuffer returned null');\n    }\n    return fb;\n  }\n\n  private queryVitalParameters(): void {\n    const gl = this.gl;\n\n    this.isFloatTextureAttachableToFrameBuffer = this.checkFloatTextureAttachableToFrameBuffer();\n    this.isRenderFloat32Supported = this.checkRenderFloat32();\n    this.isFloat32DownloadSupported = this.checkFloat32Download();\n\n    if (this.version === 1 && !this.textureHalfFloatExtension && !this.isRenderFloat32Supported) {\n      throw new Error('both float32 and float16 TextureType are not supported');\n    }\n\n    this.isBlendSupported = !this.isRenderFloat32Supported || this.checkFloat32Blend();\n\n    // this.maxCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n    this.maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n    this.maxTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n    // this.maxCubeMapTextureSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n    // this.shadingLanguageVersion = gl.getParameter(gl.SHADING_LANGUAGE_VERSION);\n    // this.webglVendor = gl.getParameter(gl.VENDOR);\n    // this.webglVersion = gl.getParameter(gl.VERSION);\n\n    if (this.version === 2) {\n      // this.max3DTextureSize = gl.getParameter(WebGL2RenderingContext.MAX_3D_TEXTURE_SIZE);\n      // this.maxArrayTextureLayers = gl.getParameter(WebGL2RenderingContext.MAX_ARRAY_TEXTURE_LAYERS);\n      // this.maxColorAttachments = gl.getParameter(WebGL2RenderingContext.MAX_COLOR_ATTACHMENTS);\n      // this.maxDrawBuffers = gl.getParameter(WebGL2RenderingContext.MAX_DRAW_BUFFERS);\n    }\n  }\n  private getExtensions(): void {\n    if (this.version === 2) {\n      this.colorBufferFloatExtension = this.gl.getExtension('EXT_color_buffer_float');\n      this.disjointTimerQueryWebgl2Extension = this.gl.getExtension('EXT_disjoint_timer_query_webgl2');\n    } else {\n      this.textureFloatExtension = this.gl.getExtension('OES_texture_float');\n      this.textureHalfFloatExtension = this.gl.getExtension('OES_texture_half_float');\n    }\n  }\n\n  private checkFloatTextureAttachableToFrameBuffer(): boolean {\n    // test whether Float32 texture is supported:\n    // STEP.1 create a float texture\n    const gl = this.gl;\n    const texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    // eslint-disable-next-line @typescript-eslint/naming-convention\n    const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n    gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n    // STEP.2 bind a frame buffer\n    const frameBuffer = gl.createFramebuffer();\n    gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n    // STEP.3 attach texture to framebuffer\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n    // STEP.4 test whether framebuffer is complete\n    const isComplete = gl.checkFramebufferStatus(gl.FRAMEBUFFER) === gl.FRAMEBUFFER_COMPLETE;\n    gl.bindTexture(gl.TEXTURE_2D, null);\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n    gl.deleteTexture(texture);\n    gl.deleteFramebuffer(frameBuffer);\n    return isComplete;\n  }\n\n  private checkRenderFloat32(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  private checkFloat32Download(): boolean {\n    if (this.version === 2) {\n      if (!this.colorBufferFloatExtension) {\n        return false;\n      }\n    } else {\n      if (!this.textureFloatExtension) {\n        return false;\n      }\n      if (!this.gl.getExtension('WEBGL_color_buffer_float')) {\n        return false;\n      }\n    }\n    return this.isFloatTextureAttachableToFrameBuffer;\n  }\n\n  /**\n   * Check whether GL_BLEND is supported\n   */\n  private checkFloat32Blend(): boolean {\n    // it looks like currently (2019-05-08) there is no easy way to detect whether BLEND is supported\n    // https://github.com/microsoft/onnxjs/issues/145\n\n    const gl = this.gl;\n\n    let texture: WebGLTexture|null|undefined;\n    let frameBuffer: WebGLFramebuffer|null|undefined;\n    let vertexShader: WebGLShader|null|undefined;\n    let fragmentShader: WebGLShader|null|undefined;\n    let program: WebGLProgram|null|undefined;\n\n    try {\n      texture = gl.createTexture();\n      frameBuffer = gl.createFramebuffer();\n      gl.bindTexture(gl.TEXTURE_2D, texture);\n\n      // eslint-disable-next-line @typescript-eslint/naming-convention\n      const internalFormat = this.version === 2 ? (gl as unknown as {RGBA32F: number}).RGBA32F : gl.RGBA;\n      gl.texImage2D(gl.TEXTURE_2D, 0, internalFormat, 1, 1, 0, gl.RGBA, gl.FLOAT, null);\n\n      gl.bindFramebuffer(gl.FRAMEBUFFER, frameBuffer);\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n\n      gl.enable(gl.BLEND);\n\n      vertexShader = gl.createShader(gl.VERTEX_SHADER);\n      if (!vertexShader) {\n        return false;\n      }\n      gl.shaderSource(vertexShader, 'void main(){}');\n      gl.compileShader(vertexShader);\n\n      fragmentShader = gl.createShader(gl.FRAGMENT_SHADER);\n      if (!fragmentShader) {\n        return false;\n      }\n      gl.shaderSource(fragmentShader, 'precision highp float;void main(){gl_FragColor=vec4(0.5);}');\n      gl.compileShader(fragmentShader);\n\n      program = gl.createProgram();\n      if (!program) {\n        return false;\n      }\n      gl.attachShader(program, vertexShader);\n      gl.attachShader(program, fragmentShader);\n      gl.linkProgram(program);\n      gl.useProgram(program);\n\n      gl.drawArrays(gl.POINTS, 0, 1);\n      return gl.getError() === gl.NO_ERROR;\n\n    } finally {\n      gl.disable(gl.BLEND);\n\n      if (program) {\n        gl.deleteProgram(program);\n      }\n      if (vertexShader) {\n        gl.deleteShader(vertexShader);\n      }\n      if (fragmentShader) {\n        gl.deleteShader(fragmentShader);\n      }\n      if (frameBuffer) {\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\n        gl.deleteFramebuffer(frameBuffer);\n      }\n      if (texture) {\n        gl.bindTexture(gl.TEXTURE_2D, null);\n        gl.deleteTexture(texture);\n      }\n    }\n  }\n\n  beginTimer(): WebGLQuery {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      const query = gl2.createQuery() as WebGLQuery;\n      gl2.beginQuery(ext.TIME_ELAPSED_EXT, query);\n      return query;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported.');\n    }\n  }\n\n  endTimer() {\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n      gl2.endQuery(ext.TIME_ELAPSED_EXT);\n      return;\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n  }\n\n  isTimerResultAvailable(query: WebGLQuery): boolean {\n    let available = false, disjoint = false;\n    if (this.version === 2 && this.disjointTimerQueryWebgl2Extension) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      const ext = this.disjointTimerQueryWebgl2Extension;\n\n      available = gl2.getQueryParameter(query, gl2.QUERY_RESULT_AVAILABLE);\n      disjoint = gl2.getParameter(ext.GPU_DISJOINT_EXT);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n\n    return available && !disjoint;\n  }\n\n  getTimerResult(query: WebGLQuery): number {\n    let timeElapsed = 0;\n    if (this.version === 2) {\n      const gl2 = this.gl as WebGL2RenderingContext;\n      timeElapsed = gl2.getQueryParameter(query, gl2.QUERY_RESULT);\n      gl2.deleteQuery(query);\n    } else {\n      // TODO: add webgl 1 handling.\n      throw new Error('WebGL1 profiling currently not supported');\n    }\n    // return miliseconds\n    return timeElapsed / 1000000;\n  }\n\n  async waitForQueryAndGetTime(query: WebGLQuery): Promise<number> {\n    await repeatedTry(() => this.isTimerResultAvailable(query));\n    return this.getTimerResult(query);\n  }\n\n  public async createAndWaitForFence(): Promise<void> {\n    const fenceContext = this.createFence(this.gl);\n    return this.pollFence(fenceContext);\n  }\n\n  private createFence(gl: WebGLRenderingContext): FenceContext {\n    let isFencePassed: () => boolean;\n    const gl2 = gl as WebGL2RenderingContext;\n    const query = gl2.fenceSync(gl2.SYNC_GPU_COMMANDS_COMPLETE, 0);\n    gl.flush();\n    if (query === null) {\n      isFencePassed = () => true;\n    } else {\n      isFencePassed = () => {\n        const status = gl2.clientWaitSync(query, 0, 0);\n        return status === gl2.ALREADY_SIGNALED || status === gl2.CONDITION_SATISFIED;\n      };\n    }\n    return {query, isFencePassed};\n  }\n\n  async pollFence(fenceContext: FenceContext) {\n    return new Promise<void>(resolve => {\n      void this.addItemToPoll(() => fenceContext.isFencePassed(), () => resolve());\n    });\n  }\n\n  private itemsToPoll: PollItem[] = [];\n\n  pollItems(): void {\n    // Find the last query that has finished.\n    const index = linearSearchLastTrue(this.itemsToPoll.map(x => x.isDoneFn));\n    for (let i = 0; i <= index; ++i) {\n      const {resolveFn} = this.itemsToPoll[i];\n      resolveFn();\n    }\n    this.itemsToPoll = this.itemsToPoll.slice(index + 1);\n  }\n\n  private async addItemToPoll(isDoneFn: () => boolean, resolveFn: () => void) {\n    this.itemsToPoll.push({isDoneFn, resolveFn});\n    if (this.itemsToPoll.length > 1) {\n      // We already have a running loop that polls.\n      return;\n    }\n    // Start a new loop that polls.\n    await repeatedTry(() => {\n      this.pollItems();\n      // End the loop if no more items to poll.\n      return this.itemsToPoll.length === 0;\n    });\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {SessionHandler} from './backend';\nimport {Graph} from './graph';\nimport {Logger, Profiler} from './instrument';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nclass KernelOp {\n  constructor(public op: Operator, public node: Graph.Node) {}\n}\n\nexport class ExecutionPlan {\n  constructor(private graph: Graph, ops: Operator[], private profiler: Readonly<Profiler>) {\n    this.initialize(ops);\n  }\n\n  initialize(ops: Operator[]) {\n    this.profiler.event('session', 'ExecutionPlan.initialize', () => {\n      const graphNodes = this.graph.getNodes();\n      if (graphNodes.length !== ops.length) {\n        throw new Error('The size of nodes and OPs do not match.');\n      }\n\n      this._ops = ops.map((op, i) => new KernelOp(op, graphNodes[i]));\n      this.reset();\n\n      // look for starter node(s)\n      this._starter = [];\n      this._ops.forEach((op, i) => {\n        let resolved = true;\n        for (const input of op.node.inputs) {\n          if (\n              !this._values[input]                                   // not an initialized input\n              && this.graph.getInputIndices().indexOf(input) === -1  // not model input\n          ) {\n            resolved = false;\n            break;\n          }\n        }\n        if (resolved) {\n          this._starter.push(i);\n        }\n      });\n    });\n  }\n\n  reset() {\n    this._values = this.graph.getValues().map(i => i.tensor);\n  }\n\n  async execute(sessionHandler: SessionHandler, modelInputs: Tensor[]): Promise<Tensor[]> {\n    return this.profiler.event('session', 'ExecutionPlan.execute', async () => {\n      // reset mediem result\n      this.reset();\n\n      // create inference handler\n      const inferenceHandler = sessionHandler.createInferenceHandler();\n\n      // populate inputs value\n      const graphInputs = this.graph.getInputIndices();\n      if (modelInputs.length !== graphInputs.length) {\n        throw new Error(`number of input tensors don't match the number of inputs to the model: actual: ${\n            modelInputs.length} expected: ${graphInputs.length}`);\n      }\n\n      modelInputs.forEach((input, i) => {\n        const index = graphInputs[i];\n        this._values[index] = input;\n      });\n\n      // prepare running sequence\n      const sequence: number[] = this._starter.slice(0);\n\n      // execution iterations\n      const graphValues = this.graph.getValues();\n      const graphNodes = this.graph.getNodes();\n\n      let rear = 0;\n      while (rear < sequence.length) {\n        const thisOpIndex = sequence[rear++];\n        const thisOp = this._ops[thisOpIndex];\n\n        // check input\n        const inputList = thisOp.node.inputs.map(i => this._values[i]);\n        if (inputList.indexOf(undefined) !== -1) {\n          throw new Error(`unresolved input detected: op: ${thisOp.node}`);\n        }\n\n        // run\n        const inputTensors = inputList as Tensor[];\n        Logger.verbose(\n            'ExecPlan',\n            `Runing op:${thisOp.node.name} (${\n                inputTensors.map((t, i) => `'${thisOp.node.inputs[i]}': ${t.type}[${t.dims.join(',')}]`).join(', ')})`);\n\n        const outputList = await this.profiler.event(\n            'node', thisOp.node.name, async () => thisOp.op.impl(inferenceHandler, inputTensors, thisOp.op.context));\n\n        // check output\n        if (outputList.length !== thisOp.node.outputs.length) {\n          throw new Error('the size of output does not match model definition.');\n        }\n\n        // fill value\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          if (this._values[j]) {\n            throw new Error(`output [${j}] already has value: op:${thisOp.node.name}`);\n          }\n          this._values[j] = output;\n        });\n\n        // resolve downstream nodes\n        const downstreamNodes = new Set<number>();\n        outputList.forEach((output, i) => {\n          const j = thisOp.node.outputs[i];\n          for (const currentDownstreamNodeIndex of graphValues[j].to) {\n            const currentDownstreamNode = graphNodes[currentDownstreamNodeIndex];\n            let resolved = true;\n            for (const k of currentDownstreamNode.inputs) {\n              if (!this._values[k]) {\n                resolved = false;\n                break;\n              }\n            }\n            if (resolved) {\n              downstreamNodes.add(currentDownstreamNodeIndex);\n            }\n          }\n        });\n        sequence.push(...downstreamNodes);\n      }\n\n      const output: Tensor[] = [];\n      for (let i = 0; i < this.graph.getOutputIndices().length; i++) {\n        const outputIndex = this.graph.getOutputIndices()[i];\n        const outputTensor = this._values[outputIndex];\n        if (outputTensor === undefined) {\n          throw new Error(`required output [${outputIndex}] does not have value`);\n        }\n        if (outputIndex === 0) {\n          await outputTensor.getData();\n        } else {\n          // eslint-disable-next-line no-unused-expressions\n          outputTensor.data;\n        }\n        output.push(outputTensor);\n      }\n      Logger.verbose('ExecPlan', 'disposing of inferenceHandler');\n      inferenceHandler.dispose();\n      return output;\n    });\n  }\n\n  _values: Array<Tensor|undefined>;\n  _ops: KernelOp[];\n  _starter: number[];\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {onnx} from 'onnx-proto';\n\nimport {Attribute} from './attribute';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {Tensor} from './tensor';\nimport {LongUtil, ProtoUtil} from './util';\n\nexport declare namespace Graph {\n  export interface Shape {\n    readonly dims: readonly number[];\n  }\n  export interface ValueType {\n    readonly tensorType: Tensor.DataType;\n    readonly shape: Shape;\n  }\n  export interface Value {\n    // the tensor data. empty for non-initialized inputs\n    readonly tensor?: Tensor;\n\n    // index to the Node where the value comes from. -1 for initializer.\n    readonly from: number;\n\n    // indices to the Nodes where the values go to.\n    readonly to: readonly number[];\n\n    // value type specification. empty for non-input values.\n    readonly type?: ValueType;\n  }\n  export interface Node {\n    // name of the node\n    readonly name: string;\n\n    // the operator type\n    readonly opType: string;\n\n    // indices to the Values where the inputs come from.\n    readonly inputs: readonly number[];\n\n    // indices to the Values where the outpus go to.\n    readonly outputs: readonly number[];\n\n    // the attributes that used by the operator\n    readonly attributes: Attribute;\n  }\n\n  /**\n   * a Transformer is an instance that allows all possible transformation operations that applied to a graph\n   */\n  export interface Transformer {\n    removeAllIdentityNodes(): void;\n    removeAllDropoutNodes(): void;\n    fuseConvActivationNodes(): void;\n    // TODO: add generic functions to manipulate the graph\n  }\n\n  // an initializer can use transformer to transform the graph\n  export interface Initializer {\n    transformGraph(transformer: Transformer): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Graph {\n  getInputIndices(): readonly number[];\n  getInputNames(): readonly string[];\n  getOutputIndices(): readonly number[];\n  getOutputNames(): readonly string[];\n  getValues(): readonly Graph.Value[];\n  getNodes(): readonly Graph.Node[];\n}\n\n// eslint-disable-next-line @typescript-eslint/naming-convention, @typescript-eslint/no-redeclare\nexport const Graph = {\n  /**\n   * construct a graph from a graph protobuf type\n   */\n  from: (graphProto: onnx.IGraphProto|ortFbs.Graph, initializer?: Graph.Initializer) =>\n      new GraphImpl(graphProto, initializer),\n};\n\nclass Value implements Graph.Value {\n  constructor(valueInfo?: onnx.IValueInfoProto) {\n    this._from = undefined;\n    this._to = [];\n    this.tensor = undefined;\n    this.type = undefined;\n\n    if (valueInfo) {\n      this.type = ProtoUtil.tensorValueTypeFromProto(valueInfo.type!.tensorType!);\n    }\n  }\n\n  _from?: number;  // -1 represent from initializer\n  get from() {\n    return this._from!;\n  }\n  _to: number[];\n  get to() {\n    return this._to;\n  }\n  type?: Graph.ValueType;\n  tensor?: Tensor;\n}\n\nclass Node implements Graph.Node {\n  constructor(_nodeProto: onnx.INodeProto|ortFbs.Node, name?: string) {\n    if (_nodeProto instanceof onnx.NodeProto) {\n      this.name = _nodeProto.name;\n      this.opType = _nodeProto.opType;\n      this.attributes = new Attribute(_nodeProto.attribute);\n    } else if (_nodeProto instanceof ortFbs.Node) {\n      this.name = name ?? _nodeProto.name()!;\n      this.opType = _nodeProto.opType()!;\n      this.attributes = new Attribute(ProtoUtil.tensorAttributesFromORTFormat(_nodeProto));\n    }\n\n    this.inputs = [];\n    this.outputs = [];\n    this.executeNode = true;\n  }\n\n  name: string;\n  opType: string;\n  inputs: number[];\n  outputs: number[];\n  attributes: Attribute;\n  executeNode: boolean;\n}\n\nclass GraphImpl implements Graph, Graph.Transformer {\n  private _allData: Value[];\n\n  private _allInputIndices: number[];\n  private _allInputNames: string[];\n\n  private _allOutputIndices: number[];\n  private _allOutputNames: string[];\n\n  private _nodes: Node[];\n\n  constructor(graph: onnx.IGraphProto|ortFbs.Graph, graphInitializer?: Graph.Initializer) {\n    if (!graph) {\n      throw new TypeError('graph is empty');\n    }\n\n    // build the graph - will throw exceptions if something fatal is detected\n    this.buildGraph(graph);\n\n    // execute any transformation logic for the graph (if applicable)\n    this.transformGraph(graphInitializer);\n\n    // check for cycles and other inconsistencies - will throw exceptions if something fatal is detected\n    this.checkIsAcyclic();\n  }\n\n  getInputIndices(): readonly number[] {\n    return this._allInputIndices;\n  }\n\n  getInputNames(): readonly string[] {\n    return this._allInputNames;\n  }\n\n  getOutputIndices(): readonly number[] {\n    return this._allOutputIndices;\n  }\n\n  getOutputNames(): readonly string[] {\n    return this._allOutputNames;\n  }\n\n  getValues(): readonly Graph.Value[] {\n    return this._allData;\n  }\n\n  getNodes(): readonly Graph.Node[] {\n    return this._nodes;\n  }\n\n  private buildGraph(graph: onnx.IGraphProto|ortFbs.Graph) {\n    // build the graph - will throw exceptions if something fatal is detected\n    if (graph instanceof onnx.GraphProto) {\n      this.buildGraphFromOnnxFormat(graph);\n    } else if (graph instanceof ortFbs.Graph) {\n      this.buildGraphFromOrtFormat(graph);\n    } else {\n      throw new TypeError('Graph type is not supported.');\n    }\n  }\n  private buildGraphFromOnnxFormat(graph: onnx.IGraphProto) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    if (!graph.input) {\n      throw new Error('missing information in graph: input');\n    }\n    const inputValueNames = [];\n    for (const i of graph.input) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated input name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      inputValueNames.push(i.name!);\n    }\n\n    // scan all initializers\n    if (!graph.initializer) {\n      throw new Error('missing information in graph: initializer');\n    }\n    for (const i of graph.initializer) {\n      let index = dataIndices.get(i.name!);\n      if (index === undefined) {\n        const value = new Value();\n        value.type = {\n          shape: {dims: ProtoUtil.tensorDimsFromProto(i.dims!)},\n          tensorType: ProtoUtil.tensorDataTypeFromProto(i.dataType!)\n        };\n        index = this._allData.push(value) - 1;\n        dataIndices.set(i.name!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromProto(i);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    if (!graph.output) {\n      throw new Error('missing information in graph: output');\n    }\n    for (const i of graph.output) {\n      if (dataIndices.has(i.name!)) {\n        throw new Error(`duplicated output name: ${i.name}`);\n      }\n      const currentIndex = this._allData.push(new Value(i)) - 1;\n      dataIndices.set(i.name!, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(i.name!);\n    }\n\n    // scan all nodes\n    if (!graph.node) {\n      throw new Error('missing information in graph: node');\n    }\n    for (const nodeProto of graph.node) {\n      if (!nodeProto.name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          const name = `unnamed_${nodeProto.opType}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            nodeProto.name = name;\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(nodeProto.name)) {\n        throw new Error(`duplicated node name: ${nodeProto.name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto)) - 1;\n      nodesIndices.set(nodeProto.name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n      if (!nodeProto.output) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (const output of nodeProto.output) {\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType === 'Constant') {\n          if (!nodeProto.attribute || nodeProto.attribute.length !== 1 || !nodeProto.attribute[0].t) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (!nodeProto.output || nodeProto.output.length !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromProto(nodeProto.attribute[0].t);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.node[i];\n\n      if (!nodeProto.input) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (const input of nodeProto.input) {\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto.name}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n\n    return true;\n  }\n\n  private buildGraphFromOrtFormat(graph: ortFbs.Graph) {\n    const dataIndices = new Map<string, number>();\n    this._allData = [];\n\n    this._allInputIndices = [];\n    this._allInputNames = [];\n\n    this._allOutputIndices = [];\n    this._allOutputNames = [];\n\n    this._nodes = [];\n\n    const nodesIndices = new Map<string, number>();\n\n    // scan all inputs\n    const inputValueNames = [];\n    for (let i = 0; i < graph.inputsLength(); i++) {\n      const inputName = graph.inputs(i);\n      if (dataIndices.has(inputName)) {\n        throw new Error(`duplicated input name: ${inputName}`);\n      }\n      // Find the input typeInfo from nodeargs\n      for (let j = 0; j < graph.nodeArgsLength(); j++) {\n        if (graph.nodeArgs(j)?.name() === inputName) {\n          const value = new Value();\n          const valueType = graph.nodeArgs(j)?.type()?.valueType();\n          if (valueType !== ortFbs.TypeInfoValue.tensor_type) {\n            throw new Error('Unexpected value type for the nodeArg.');\n          }\n          const valueInfo = graph.nodeArgs(j)!.type()!.value(new ortFbs.TensorTypeAndShape())!;\n          const type = ProtoUtil.tensorDataTypeFromProto(valueInfo.elemType());\n          const shape = valueInfo.shape()!;\n          const dims = [];\n          for (let k = 0; k < shape.dimLength()!; k++) {\n            dims.push(LongUtil.longToNumber(shape.dim(k)!.value()!.dimValue()!));\n          }\n          value.type = {shape: {dims}, tensorType: type};\n          const currentIndex = this._allData.push(value) - 1;\n          dataIndices.set(inputName, currentIndex);\n          inputValueNames.push(inputName);\n        }\n      }\n    }\n    // check initializers\n    for (let i = 0; i < graph.initializersLength(); i++) {\n      const initializer = graph.initializers(i)!;\n      let index = dataIndices.get(initializer.name()!);\n      if (index === undefined) {\n        const value = new Value();\n        const dims = ProtoUtil.tensorDimsFromORTFormat(initializer);\n        const type = ProtoUtil.tensorDataTypeFromProto(initializer.dataType());\n        value.type = {shape: {dims}, tensorType: type};\n        index = this._allData.push(value) - 1;\n        dataIndices.set(initializer.name()!, index);\n      }\n      this._allData[index]._from = -1;\n      this._allData[index].tensor = Tensor.fromOrtTensor(initializer);\n    }\n\n    // filter out input indices\n    for (let i = 0; i < this._allData.length; i++) {\n      if (!this._allData[i].tensor) {\n        this._allInputIndices.push(i);\n        this._allInputNames.push(inputValueNames[i]);\n      }\n    }\n\n    // scan all outputs\n    for (let i = 0; i < graph.outputsLength(); i++) {\n      const outputName = graph.outputs(i);\n      if (dataIndices.has(outputName)) {\n        throw new Error(`duplicated output name: ${outputName}`);\n      }\n      const currentIndex = this._allData.push(new Value()) - 1;\n      dataIndices.set(outputName, currentIndex);\n      this._allOutputIndices.push(currentIndex);\n      this._allOutputNames.push(outputName);\n    }\n\n    // scan all nodes\n    if (!graph.nodes) {\n      throw new Error('missing information in graph: node');\n    }\n    for (let i = 0; i < graph.nodesLength(); i++) {\n      const nodeProto = graph.nodes(i);\n      let name = nodeProto!.name();\n      if (!name) {\n        // assign a name to the node if it doesn't have one\n        for (let pick = 0;; pick++) {\n          name = `unnamed_${nodeProto!.opType()}_${pick}`;\n          if (!nodesIndices.has(name)) {\n            // an unique name is found. break.\n            break;\n          }\n        }\n      }\n\n      if (nodesIndices.has(name)) {\n        throw new Error(`duplicated node name: ${name}`);\n      }\n      const currentIndex = this._nodes.push(new Node(nodeProto!, name)) - 1;\n      nodesIndices.set(name, currentIndex);\n    }\n\n    // scan node's outputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i);\n      if (nodeProto == null) {\n        throw new Error(`No node exists at index ${i}`);\n      }\n      if (nodeProto?.outputsLength() === 0) {\n        throw new Error(`missing output for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto?.outputsLength(); j++) {\n        const output = nodeProto?.outputs(j);\n        let dataIndex = dataIndices.get(output);\n        if (typeof dataIndex === 'undefined') {\n          dataIndex = this._allData.push(new Value()) - 1;\n          dataIndices.set(output, dataIndex);\n        }\n        node.outputs.push(dataIndex);\n\n        if (this._allData[dataIndex]._from !== undefined) {\n          throw new Error(`multiple nodes output to one data value: ${dataIndex}`);\n        }\n        this._allData[dataIndex]._from = i;\n\n        // for the 'Constant' operator, just create a new edge in the graph corresponding to the 'output' of the\n        // operator and ignore the node from the graph\n        if (nodeProto.opType() === 'Constant') {\n          if (nodeProto.attributesLength() !== 1 || !nodeProto.attributes(0)!.t()) {\n            throw new Error('missing attributes or missing tensor value in attributes for this Constant operator');\n          }\n          if (nodeProto.outputsLength() !== 1) {\n            throw new Error('missing output or incorrect number of outputs for this Constant operator');\n          }\n          node.outputs.pop();\n          node.executeNode = false;\n\n          this._allData[dataIndex]._from = -1;\n          this._allData[dataIndex].tensor = Tensor.fromOrtTensor(nodeProto.attributes(0)!.t()!);\n        }\n      }\n    }\n\n    // scan node's inputs\n    for (let i = 0; i < this._nodes.length; i++) {\n      const node = this._nodes[i];\n      const nodeProto = graph.nodes(i)!;\n\n      if (nodeProto.inputsLength() === 0) {\n        throw new Error(`missing input for node: ${nodeProto.name}`);\n      }\n      for (let j = 0; j < nodeProto.inputsLength()!; j++) {\n        const input = nodeProto.inputs(j)!;\n        const dataIndex = dataIndices.get(input);\n        if (typeof dataIndex === 'undefined') {\n          throw new Error(`unrecognized input '${input}' for node: ${nodeProto!.name()}`);\n        }\n        node.inputs.push(dataIndex);\n\n        this._allData[dataIndex]._to.push(i);\n      }\n    }\n  }\n\n  private checkIsAcyclic() {\n    // go through the graph and check for cycles or other fatal inconsistencies\n    const starters: Set<number> = new Set<number>();\n    this._allInputIndices.forEach(i => {\n      const data = this._allData[i];\n      data._to.forEach(j => {\n        starters.add(j);\n      });\n    });\n\n    // Iterative DFS to check for cycles\n    const nodesStack = Array.from(starters);\n    const nodesState = new Array<string>(this._nodes.length).fill('white');\n\n    while (nodesStack.length > 0) {\n      const nodeIndex = nodesStack.pop()!;\n      // this node has now been processed completely. Mark this node 'black' to denote this.\n      if (nodesState[nodeIndex] === 'gray') {\n        nodesState[nodeIndex] = 'black';\n      } else {\n        // this node is under processing stage. mark this node 'gray' to denote this.\n        nodesStack.push(nodeIndex);\n        nodesState[nodeIndex] = 'gray';\n\n        this._nodes[nodeIndex].outputs.forEach((outgoingEdgeIndex) => {\n          const data = this._allData[outgoingEdgeIndex];\n          if (typeof data.tensor !== 'undefined') {\n            throw new Error('node outputs should not be initialized');\n          }\n          if (data._from !== nodeIndex) {\n            throw new Error('from property of the Value object doesn\\'t match index of Node being processed');\n          }\n          data._to.forEach((downstreamNodeIndex) => {\n            // back edge found - cyclic\n            if (nodesState[downstreamNodeIndex] === 'gray') {\n              throw new Error('model graph is cyclic');\n            }\n            // tree edge found - continue processing by adding it to stack\n            else if (nodesState[downstreamNodeIndex] === 'white') {\n              nodesStack.push(downstreamNodeIndex);\n            }\n          });\n        });\n      }\n    }\n  }\n\n  private transformGraph(graphInitializer?: Graph.Initializer): void {\n    // apply common transform\n    this.removeAllIdentityNodes();\n    this.removeAllDropoutNodes();\n    this.fuseConvActivationNodes();\n    // apply initializer specific transform\n    if (graphInitializer) {\n      graphInitializer.transformGraph(this);\n    }\n\n    // finalize graph\n    this.finalizeGraph();\n  }\n\n  /**\n   * finalize the graph.\n   *\n   * this function should be called after all the transformation completed.\n   * this function removes all unnecessary nodes and values from the graph\n   */\n  finalizeGraph() {\n    let offset = 0;\n    // delete all nodes that are not being executed\n    for (let i = 0; i < this._nodes.length; i++) {\n      if (!this._nodes[i].executeNode) {\n        // delete this node and shift all subsequent nodes up\n        offset++;\n        // delete all output values\n        this._nodes[i].outputs.forEach(ind => {\n          this._allData[ind]._from = -2;\n        });\n        this._nodes.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        // update the value table\n        this._nodes[i].inputs.forEach(value => {\n          const ind = this._allData[value]._to.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allData[value]._to[ind] = i;\n          }\n        });\n        this._nodes[i].outputs.forEach(value => {\n          if (this._allData[value]._from && this._allData[value]._from! === i + offset) {\n            this._allData[value]._from! = i;\n          }\n        });\n      }\n    }\n    offset = 0;\n    // delete all values that are not being referenced\n    for (let i = 0; i < this._allData.length; i++) {\n      // if current value is neither linked to next node, nor an output value, remove it.\n      if (this._allData[i].from === -2 && this._allOutputIndices.indexOf(i + offset) === -1) {\n        offset++;\n        this._allData.splice(i, 1);\n        i--;\n        continue;\n      }\n      if (offset > 0) {\n        let ind = -1;\n        // if current value is neither an input value nor an initializer, find the node it's\n        // coming from and update the corresponding node output\n        if (this._allData[i].from !== undefined && this._allData[i].from !== -1) {\n          ind = this._nodes[this._allData[i].from].outputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[this._allData[i].from].outputs[ind] = i;\n          }\n        } else {\n          // if current value is an input value, update its reference in inputIndices\n          ind = this._allInputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allInputIndices[ind] = i;\n          }\n        }\n\n        // find the node that the current value is linking to and update its input reference\n        this._allData[i].to.forEach(node => {\n          ind = this._nodes[node].inputs.indexOf(i + offset);\n          if (ind !== -1) {\n            this._nodes[node].inputs[ind] = i;\n          }\n        });\n        if (this._allData[i].to.length === 0) {\n          // if current value is a graph output, update its reference in outputIndices\n          ind = this._allOutputIndices.indexOf(i + offset);\n          if (ind !== -1) {\n            this._allOutputIndices[ind] = i;\n          }\n        }\n      }\n    }\n  }\n\n  /**\n   * Delete the specifed node. Assume the node has only one input and the first output connected to other nodes\n   * @param nodeIndex The index of node to be deleted\n   */\n  private deleteNode(nodeIndex: number) {\n    const node = this._nodes[nodeIndex];\n    if (node.inputs.length > 1) {\n      throw new Error('Node deletion with multiple inputs is not supported. ');\n    }\n    if (node.outputs.length > 1) {\n      for (let i = 1; i < node.outputs.length; i++) {\n        if (this._allData[node.outputs[i]].to.length > 0) {\n          throw new Error('Node deletion with more than one output connected to other nodes is not supported. ');\n        }\n      }\n    }\n\n    // this node wil not be executed\n    node.executeNode = false;\n    const inputValueIndex = node.inputs[0];\n    const outputValueIndex = node.outputs[0];\n    const nodesConsumingOutput = this._allData[outputValueIndex].to;\n\n    // remove this node from the to property of the input Value\n    const delIndex = this._allData[inputValueIndex].to.indexOf(nodeIndex);\n    // should not happen\n    if (delIndex === -1) {\n      throw new Error('The Value object doesn\\'t have the current Node in it\\'s \\'to\\' property ');\n    }\n    this._allData[inputValueIndex].to.splice(delIndex, 1);\n\n    // clear node indices consuming this output Value\n    this._allData[outputValueIndex]._to = [];\n\n    // if the output of this node is a graph output, adjust the index appropriately\n    const index = this._allOutputIndices.indexOf(outputValueIndex);\n    if (index !== -1) {\n      this._allOutputIndices[index] = inputValueIndex;\n    }\n\n    // override the inputs for nodes consuming this node's output with the input to this node\n    if (nodesConsumingOutput && nodesConsumingOutput.length > 0) {\n      for (const nodeIndex of nodesConsumingOutput) {\n        const replaceIndex = this._nodes[nodeIndex].inputs.indexOf(outputValueIndex);\n        // should not happen\n        if (replaceIndex === -1) {\n          throw new Error('The Node object doesn\\'t have the output Value in it\\'s \\'inputs\\' property ');\n        }\n        this._nodes[nodeIndex].inputs[replaceIndex] = inputValueIndex;\n        this._allData[inputValueIndex].to.push(nodeIndex);\n      }\n    }\n  }\n\n  removeAllDropoutNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Dropout' nodes so that no time is wasted in execution\n      if (node.opType === 'Dropout') {\n        // the node should have exactly 1 input and 1 or 2 outputs\n        if (node.inputs.length !== 1) {\n          throw new Error('Dropout nodes should only contain one input. ');\n        }\n        if (node.outputs.length !== 1 && node.outputs.length !== 2) {\n          throw new Error('Dropout nodes should contain either 1 or 2 output(s)');\n        }\n        // the second output should not be referenced by any other node\n        if (node.outputs.length === 2 && this._allData[node.outputs[1]]._to.length !== 0) {\n          throw new Error('Dropout nodes\\'s second output should not be referenced by other nodes');\n        }\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  removeAllIdentityNodes() {\n    let nodeIndex = 0;\n    for (const node of this._nodes) {\n      // weed out 'Identity' nodes so that no time is wasted in execution\n      if (node.opType === 'Identity') {\n        this.deleteNode(nodeIndex);\n      }\n      nodeIndex++;\n    }\n  }\n\n  isActivation(n: Node): boolean {\n    switch (n.opType) {\n      // TODO: add other activation methods\n      case 'Relu':\n      case 'Sigmoid':\n      case 'Clip':\n        return true;\n      default:\n        return false;\n    }\n  }\n\n  fuseConvActivationNodes() {\n    for (const node of this._nodes) {\n      if (node.opType === 'Conv') {\n        const next = this._allData[node.outputs[0]]._to;\n        if (next.length === 1 && this.isActivation(this._nodes[next[0]])) {\n          const child = this._nodes[next[0]];\n          node.attributes.set('__internal_activation', 'string', (child.opType));\n          // TODO: need add support for Clip after opset 11, which has min/max as inputs\n          if (child.opType === 'Clip') {\n            node.attributes.set('__clip_min', 'float', child.attributes.getFloat('min'));\n            node.attributes.set('__clip_max', 'float', child.attributes.getFloat('max'));\n          }\n          this.deleteNode(next[0]);\n        }\n      }\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\n\nimport {WebGLContext} from './backends/webgl/webgl-context';\n\nexport declare namespace Logger {\n  export interface SeverityTypeMap {\n    verbose: 'v';\n    info: 'i';\n    warning: 'w';\n    error: 'e';\n    fatal: 'f';\n  }\n\n  export type Severity = keyof SeverityTypeMap;\n\n  export type Provider = 'none'|'console';\n\n  /**\n   * Logging config that used to control the behavior of logger\n   */\n  export interface Config {\n    /**\n     * Specify the logging provider. 'console' by default\n     */\n    provider?: Provider;\n    /**\n     * Specify the minimal logger serverity. 'warning' by default\n     */\n    minimalSeverity?: Logger.Severity;\n    /**\n     * Whether to output date time in log. true by default\n     */\n    logDateTime?: boolean;\n    /**\n     * Whether to output source information (Not yet supported). false by default\n     */\n    logSourceLocation?: boolean;\n  }\n\n  export interface CategorizedLogger {\n    verbose(content: string): void;\n    info(content: string): void;\n    warning(content: string): void;\n    error(content: string): void;\n    fatal(content: string): void;\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare\nexport interface Logger {\n  (category: string): Logger.CategorizedLogger;\n\n  verbose(content: string): void;\n  verbose(category: string, content: string): void;\n  info(content: string): void;\n  info(category: string, content: string): void;\n  warning(content: string): void;\n  warning(category: string, content: string): void;\n  error(content: string): void;\n  error(category: string, content: string): void;\n  fatal(content: string): void;\n  fatal(category: string, content: string): void;\n\n  /**\n   * Reset the logger configuration.\n   * @param config specify an optional default config\n   */\n  reset(config?: Logger.Config): void;\n  /**\n   * Set the logger's behavior on the given category\n   * @param category specify a category string. If '*' is specified, all previous configuration will be overwritten. If\n   * '' is specified, the default behavior will be updated.\n   * @param config the config object to indicate the logger's behavior\n   */\n  set(category: string, config: Logger.Config): void;\n\n  /**\n   * Set the logger's behavior from ort-common env\n   * @param env the env used to set logger. Currently only setting loglevel is supported through Env.\n   */\n  setWithEnv(env: Env): void;\n}\n\ninterface LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string): void;\n}\nclass NoOpLoggerProvider implements LoggerProvider {\n  log(_severity: Logger.Severity, _content: string, _category?: string) {\n    // do nothing\n  }\n}\nclass ConsoleLoggerProvider implements LoggerProvider {\n  log(severity: Logger.Severity, content: string, category?: string) {\n    // eslint-disable-next-line no-console\n    console.log(`${this.color(severity)} ${category ? '\\x1b[35m' + category + '\\x1b[0m ' : ''}${content}`);\n  }\n\n  private color(severity: Logger.Severity) {\n    switch (severity) {\n      case 'verbose':\n        return '\\x1b[34;40mv\\x1b[0m';\n      case 'info':\n        return '\\x1b[32mi\\x1b[0m';\n      case 'warning':\n        return '\\x1b[30;43mw\\x1b[0m';\n      case 'error':\n        return '\\x1b[31;40me\\x1b[0m';\n      case 'fatal':\n        return '\\x1b[101mf\\x1b[0m';\n      default:\n        throw new Error(`unsupported severity: ${severity}`);\n    }\n  }\n}\n\nconst SEVERITY_VALUE = {\n  verbose: 1000,\n  info: 2000,\n  warning: 4000,\n  error: 5000,\n  fatal: 6000\n};\n\nconst LOGGER_PROVIDER_MAP: {readonly [provider: string]: Readonly<LoggerProvider>} = {\n  ['none']: new NoOpLoggerProvider(),\n  ['console']: new ConsoleLoggerProvider()\n};\nconst LOGGER_DEFAULT_CONFIG = {\n  provider: 'console',\n  minimalSeverity: 'warning',\n  logDateTime: true,\n  logSourceLocation: false\n};\nlet LOGGER_CONFIG_MAP:\n    {[category: string]: Readonly<Required<Logger.Config>>} = {['']: LOGGER_DEFAULT_CONFIG as Required<Logger.Config>};\n\nfunction log(category: string): Logger.CategorizedLogger;\nfunction log(severity: Logger.Severity, content: string): void;\nfunction log(severity: Logger.Severity, category: string, content: string): void;\nfunction log(severity: Logger.Severity, arg1: string, arg2?: string): void;\nfunction log(\n    arg0: string|Logger.Severity, arg1?: string, arg2?: string|number, arg3?: number): Logger.CategorizedLogger|void {\n  if (arg1 === undefined) {\n    // log(category: string): Logger.CategorizedLogger;\n    return createCategorizedLogger(arg0);\n  } else if (arg2 === undefined) {\n    // log(severity, content);\n    logInternal(arg0 as Logger.Severity, arg1, 1);\n  } else if (typeof arg2 === 'number' && arg3 === undefined) {\n    // log(severity, content, stack)\n    logInternal(arg0 as Logger.Severity, arg1, arg2);\n  } else if (typeof arg2 === 'string' && arg3 === undefined) {\n    // log(severity, category, content)\n    logInternal(arg0 as Logger.Severity, arg2, 1, arg1);\n  } else if (typeof arg2 === 'string' && typeof arg3 === 'number') {\n    // log(severity, category, content, stack)\n    logInternal(arg0 as Logger.Severity, arg2, arg3, arg1);\n  } else {\n    throw new TypeError('input is valid');\n  }\n}\n\nfunction createCategorizedLogger(category: string): Logger.CategorizedLogger {\n  return {\n    verbose: log.verbose.bind(null, category),\n    info: log.info.bind(null, category),\n    warning: log.warning.bind(null, category),\n    error: log.error.bind(null, category),\n    fatal: log.fatal.bind(null, category)\n  };\n}\n\n// NOTE: argument 'category' is put the last parameter beacause typescript\n// doesn't allow optional argument put in front of required argument. This\n// order is different from a usual logging API.\nfunction logInternal(severity: Logger.Severity, content: string, stack: number, category?: string) {\n  const config = LOGGER_CONFIG_MAP[category || ''] || LOGGER_CONFIG_MAP[''];\n  if (SEVERITY_VALUE[severity] < SEVERITY_VALUE[config.minimalSeverity]) {\n    return;\n  }\n\n  if (config.logDateTime) {\n    content = `${new Date().toISOString()}|${content}`;\n  }\n\n  if (config.logSourceLocation) {\n    // TODO: calculate source location from 'stack'\n  }\n\n  LOGGER_PROVIDER_MAP[config.provider].log(severity, content, category);\n}\n\n// eslint-disable-next-line @typescript-eslint/no-namespace\nnamespace log {\n  export function verbose(content: string): void;\n  export function verbose(category: string, content: string): void;\n  export function verbose(arg0: string, arg1?: string) {\n    log('verbose', arg0, arg1);\n  }\n  export function info(content: string): void;\n  export function info(category: string, content: string): void;\n  export function info(arg0: string, arg1?: string) {\n    log('info', arg0, arg1);\n  }\n  export function warning(content: string): void;\n  export function warning(category: string, content: string): void;\n  export function warning(arg0: string, arg1?: string) {\n    log('warning', arg0, arg1);\n  }\n  export function error(content: string): void;\n  export function error(category: string, content: string): void;\n  export function error(arg0: string, arg1?: string) {\n    log('error', arg0, arg1);\n  }\n  export function fatal(content: string): void;\n  export function fatal(category: string, content: string): void;\n  export function fatal(arg0: string, arg1?: string) {\n    log('fatal', arg0, arg1);\n  }\n\n  export function reset(config?: Logger.Config): void {\n    LOGGER_CONFIG_MAP = {};\n    set('', config || {});\n  }\n  export function set(category: string, config: Logger.Config): void {\n    if (category === '*') {\n      reset(config);\n    } else {\n      const previousConfig = LOGGER_CONFIG_MAP[category] || LOGGER_DEFAULT_CONFIG;\n      LOGGER_CONFIG_MAP[category] = {\n        provider: config.provider || previousConfig.provider,\n        minimalSeverity: config.minimalSeverity || previousConfig.minimalSeverity,\n        logDateTime: (config.logDateTime === undefined) ? previousConfig.logDateTime : config.logDateTime,\n        logSourceLocation: (config.logSourceLocation === undefined) ? previousConfig.logSourceLocation :\n                                                                      config.logSourceLocation\n      };\n    }\n\n    // TODO: we want to support wildcard or regex?\n  }\n\n  export function setWithEnv(env: Env): void {\n    const config: Logger.Config = {};\n    if (env.logLevel) {\n      config.minimalSeverity = env.logLevel as Logger.Severity;\n    }\n    set('', config);\n  }\n}\n\n// eslint-disable-next-line @typescript-eslint/no-redeclare, @typescript-eslint/naming-convention\nexport const Logger: Logger = log;\n\nexport declare namespace Profiler {\n  export interface Config {\n    maxNumberEvents?: number;\n    flushBatchSize?: number;\n    flushIntervalInMilliseconds?: number;\n  }\n\n  export type EventCategory = 'session'|'node'|'op'|'backend';\n\n  export interface Event {\n    end(): void|Promise<void>;\n  }\n}\n// TODO\n// class WebGLEvent implements Profiler.Event {}\n\nclass Event implements Profiler.Event {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number,\n      private endCallback: (e: Event) => void|Promise<void>, public timer?: WebGLQuery, public ctx?: WebGLContext) {}\n\n  end() {\n    return this.endCallback(this);\n  }\n\n  async checkTimer(): Promise<number> {\n    if (this.ctx === undefined || this.timer === undefined) {\n      throw new Error('No webgl timer found');\n    } else {\n      this.ctx.endTimer();\n      return this.ctx.waitForQueryAndGetTime(this.timer);\n    }\n  }\n}\n\nclass EventRecord {\n  constructor(\n      public category: Profiler.EventCategory, public name: string, public startTime: number, public endTime: number) {}\n}\n\nexport class Profiler {\n  static create(config?: Profiler.Config): Profiler {\n    if (config === undefined) {\n      return new this();\n    }\n    return new this(config.maxNumberEvents, config.flushBatchSize, config.flushIntervalInMilliseconds);\n  }\n\n  private constructor(maxNumberEvents?: number, flushBatchSize?: number, flushIntervalInMilliseconds?: number) {\n    this._started = false;\n    this._maxNumberEvents = maxNumberEvents === undefined ? 10000 : maxNumberEvents;\n    this._flushBatchSize = flushBatchSize === undefined ? 10 : flushBatchSize;\n    this._flushIntervalInMilliseconds = flushIntervalInMilliseconds === undefined ? 5000 : flushIntervalInMilliseconds;\n  }\n\n  // start profiling\n  start() {\n    this._started = true;\n    this._timingEvents = [];\n    this._flushTime = now();\n    this._flushPointer = 0;\n  }\n\n  // stop profiling\n  stop() {\n    this._started = false;\n    for (; this._flushPointer < this._timingEvents.length; this._flushPointer++) {\n      this.logOneEvent(this._timingEvents[this._flushPointer]);\n    }\n  }\n\n  // create an event scope for the specific function\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T, ctx?: WebGLContext): T;\n  event<T>(category: Profiler.EventCategory, name: string, func: () => Promise<T>, ctx?: WebGLContext): Promise<T>;\n\n  event<T>(category: Profiler.EventCategory, name: string, func: () => T | Promise<T>, ctx?: WebGLContext): T\n      |Promise<T> {\n    const event = this._started ? this.begin(category, name, ctx) : undefined;\n    let isPromise = false;\n\n    const res = func();\n\n    // we consider a then-able object is a promise\n    if (res && typeof (res as Promise<T>).then === 'function') {\n      isPromise = true;\n      return new Promise<T>((resolve, reject) => {\n        (res as Promise<T>)\n            .then(\n                async value => {  // fulfilled\n                  if (event) {\n                    await event.end();\n                  }\n                  resolve(value);\n                },\n                async reason => {  // rejected\n                  if (event) {\n                    await event.end();\n                  }\n                  reject(reason);\n                });\n      });\n    }\n    if (!isPromise && event) {\n      const eventRes = event.end();\n      if (eventRes && typeof eventRes.then === 'function') {\n        return new Promise<T>((resolve, reject) => {\n          (eventRes).then(\n              () => {  // fulfilled\n                resolve(res);\n              },\n              (reason) => {  // rejected\n                reject(reason);\n              });\n        });\n      }\n    }\n    return res;\n  }\n\n  // begin an event\n  begin(category: Profiler.EventCategory, name: string, ctx?: WebGLContext): Event {\n    if (!this._started) {\n      throw new Error('profiler is not started yet');\n    }\n    if (ctx === undefined) {\n      const startTime = now();\n      this.flush(startTime);\n      return new Event(category, name, startTime, e => this.endSync(e));\n    } else {\n      const timer: WebGLQuery = ctx.beginTimer();\n      return new Event(category, name, 0, async e => this.end(e), timer, ctx);\n    }\n  }\n\n  // end the specific event\n  private async end(event: Event): Promise<void> {\n    const endTime: number = await event.checkTimer();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private endSync(event: Event): void {\n    const endTime: number = now();\n    if (this._timingEvents.length < this._maxNumberEvents) {\n      this._timingEvents.push(new EventRecord(event.category, event.name, event.startTime, endTime));\n      this.flush(endTime);\n    }\n  }\n\n  private logOneEvent(event: EventRecord) {\n    Logger.verbose(\n        `Profiler.${event.category}`,\n        `${(event.endTime - event.startTime).toFixed(2)}ms on event '${event.name}' at ${event.endTime.toFixed(2)}`);\n  }\n\n  private flush(currentTime: number) {\n    if (this._timingEvents.length - this._flushPointer >= this._flushBatchSize ||\n        currentTime - this._flushTime >= this._flushIntervalInMilliseconds) {\n      // should flush when either batch size accumlated or interval elepsed\n\n      for (const previousPointer = this._flushPointer; this._flushPointer < previousPointer + this._flushBatchSize &&\n           this._flushPointer < this._timingEvents.length;\n           this._flushPointer++) {\n        this.logOneEvent(this._timingEvents[this._flushPointer]);\n      }\n\n      this._flushTime = now();\n    }\n  }\n\n  get started() {\n    return this._started;\n  }\n  private _started = false;\n  private _timingEvents: EventRecord[];\n\n  private readonly _maxNumberEvents: number;\n\n  private readonly _flushBatchSize: number;\n  private readonly _flushIntervalInMilliseconds: number;\n\n  private _flushTime: number;\n  private _flushPointer = 0;\n}\n\n/**\n * returns a number to represent the current timestamp in a resolution as high as possible.\n */\nexport const now = (typeof performance !== 'undefined' && performance.now) ? () => performance.now() : Date.now;\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {OpSet} from './opset';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport ortFbs = onnxruntime.experimental.fbs;\nimport {LongUtil} from './util';\n\nexport class Model {\n  // empty model\n  constructor() {}\n\n  load(buf: Uint8Array, graphInitializer?: Graph.Initializer, isOrtFormat?: boolean): void {\n    if (!isOrtFormat) {\n      // isOrtFormat === false || isOrtFormat === undefined\n      try {\n        this.loadFromOnnxFormat(buf, graphInitializer);\n        return;\n      } catch (e) {\n        if (isOrtFormat !== undefined) {\n          throw e;\n        }\n      }\n    }\n\n    this.loadFromOrtFormat(buf, graphInitializer);\n  }\n\n  private loadFromOnnxFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const modelProto = onnx.ModelProto.decode(buf);\n    const irVersion = LongUtil.longToNumber(modelProto.irVersion);\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n\n    this._opsets =\n        modelProto.opsetImport.map(i => ({domain: i.domain as string, version: LongUtil.longToNumber(i.version!)}));\n\n    this._graph = Graph.from(modelProto.graph!, graphInitializer);\n  }\n\n  private loadFromOrtFormat(buf: Uint8Array, graphInitializer?: Graph.Initializer): void {\n    const fb = new flatbuffers.ByteBuffer(buf);\n    const ortModel = ortFbs.InferenceSession.getRootAsInferenceSession(fb).model()!;\n    const irVersion = LongUtil.longToNumber(ortModel.irVersion());\n    if (irVersion < 3) {\n      throw new Error('only support ONNX model with IR_VERSION>=3');\n    }\n    this._opsets = [];\n    for (let i = 0; i < ortModel.opsetImportLength(); i++) {\n      const opsetId = ortModel.opsetImport(i)!;\n      this._opsets.push({domain: opsetId?.domain() as string, version: LongUtil.longToNumber(opsetId.version()!)});\n    }\n\n    this._graph = Graph.from(ortModel.graph()!, graphInitializer);\n  }\n\n  private _graph: Graph;\n  get graph(): Graph {\n    return this._graph;\n  }\n\n  private _opsets: OpSet[];\n  get opsets(): readonly OpSet[] {\n    return this._opsets;\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceHandler} from './backend';\nimport {Graph} from './graph';\nimport {Tensor} from './tensor';\n\nexport type OperatorImplementation<T> = (inferenceHandler: InferenceHandler, inputs: Tensor[], context: T) => Tensor[];\nexport type OperatorInitialization<T> = (node: Graph.Node, graph: Graph) => T;\n\nexport interface Operator {\n  readonly impl: OperatorImplementation<unknown>;\n  readonly context: Graph.Node|unknown;\n}\n\nexport const NUMBER_TYPES: readonly Tensor.DataType[] =\n    ['float32', 'float64', 'int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const INT_TYPES: readonly Tensor.DataType[] = ['int32', 'int16', 'int8', 'uint16', 'uint32', 'uint8'];\nexport const FLOAT_TYPES: readonly Tensor.DataType[] = ['float32', 'float64'];\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Graph} from './graph';\nimport {OperatorImplementation, OperatorInitialization} from './operators';\n\nexport interface OpSet {\n  domain: string;\n  version: number;\n}\n\nexport declare namespace OpSet {\n  /**\n   * Domain of an opset, it can be an empty string(default value, represent for ai.onnx), or 'ai.onnx.ml'\n   */\n  type Domain = ''|'ai.onnx.ml';\n\n  /**\n   * A resolve rule consists of 4 or 5 items: opType, opSetDomain, versionSelector, operatorImplementation and\n   * operatorInitialization (optional)\n   */\n  type ResolveRule = [\n    string, Domain, string, OperatorImplementation<Graph.Node>\n  ]|[string, Domain, string, OperatorImplementation<unknown>, OperatorInitialization<unknown>];\n}\n\nexport function resolveOperator(node: Graph.Node, opsets: readonly OpSet[], rules: readonly OpSet.ResolveRule[]) {\n  for (const rule of rules) {\n    const opType = rule[0];\n    const domain = rule[1];\n    const versionSelector = rule[2];\n    const opImpl = rule[3];\n    const opInit = rule[4];\n\n    if (node.opType === opType) {  // operator type matches\n      for (const opset of opsets) {\n        // opset '' and 'ai.onnx' are considered the same.\n        if (opset.domain === domain || (opset.domain === 'ai.onnx' && domain === '')) {  // opset domain found\n          if (matchSelector(opset.version, versionSelector)) {\n            return {opImpl, opInit};\n          }\n        }\n      }\n    }\n  }\n\n  throw new TypeError(`cannot resolve operator '${node.opType}' with opsets: ${\n      opsets.map(set => `${set.domain || 'ai.onnx'} v${set.version}`).join(', ')}`);\n}\n\nfunction matchSelector(version: number, selector: string): boolean {\n  if (selector.endsWith('+')) {\n    // minimum version match ('7+' expects version>=7)\n    const rangeStart = Number.parseInt(selector.substring(0, selector.length - 1), 10);\n    return !isNaN(rangeStart) && rangeStart <= version;\n  } else if (selector.split('-').length === 2) {\n    // range match ('6-8' expects 6<=version<=8)\n    const pair = selector.split('-');\n    const rangeStart = Number.parseInt(pair[0], 10);\n    const rangeEnd = Number.parseInt(pair[1], 10);\n    return !isNaN(rangeStart) && !isNaN(rangeEnd) && rangeStart <= version && version <= rangeEnd;\n  } else {\n    // exact match ('7' expects version===7)\n    return Number.parseInt(selector, 10) === version;\n  }\n}\n","// automatically generated by the FlatBuffers compiler, do not modify\n/* eslint-disable */\n\nimport {flatbuffers} from 'flatbuffers';\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum AttributeType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    INT = 2,\n    STRING = 3,\n    TENSOR = 4,\n    GRAPH = 5,\n    FLOATS = 6,\n    INTS = 7,\n    STRINGS = 8,\n    TENSORS = 9,\n    GRAPHS = 10,\n    SPARSE_TENSOR = 11,\n    SPARSE_TENSORS = 12\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum DimensionValueType {UNKNOWN = 0, VALUE = 1, PARAM = 2}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TensorDataType {\n    UNDEFINED = 0,\n    FLOAT = 1,\n    UINT8 = 2,\n    INT8 = 3,\n    UINT16 = 4,\n    INT16 = 5,\n    INT32 = 6,\n    INT64 = 7,\n    STRING = 8,\n    BOOL = 9,\n    FLOAT16 = 10,\n    DOUBLE = 11,\n    UINT32 = 12,\n    UINT64 = 13,\n    COMPLEX64 = 14,\n    COMPLEX128 = 15,\n    BFLOAT16 = 16\n  }\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum NodeType {Primitive = 0, Fused = 1}\n}\n\n/**\n * @enum {number}\n */\nexport namespace onnxruntime.experimental.fbs {\n  export enum TypeInfoValue {NONE = 0, tensor_type = 1, sequence_type = 2, map_type = 3}\n}\n\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Shape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Shape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Shape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Shape= obj\n     * @returns Shape\n     */\n    static getSizePrefixedRootAsShape(bb: flatbuffers.ByteBuffer, obj?: Shape): Shape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Shape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Dimension= obj\n     * @returns onnxruntime.experimental.fbs.Dimension\n     */\n    dim(index: number, obj?: onnxruntime.experimental.fbs.Dimension): onnxruntime.experimental.fbs.Dimension|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Dimension())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    dimLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startShape(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimOffset\n     */\n    static addDim(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, dimOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createShape(builder: flatbuffers.Builder, dimOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Shape.startShape(builder);\n      Shape.addDim(builder, dimOffset);\n      return Shape.endShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Dimension {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Dimension\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Dimension {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Dimension= obj\n     * @returns Dimension\n     */\n    static getSizePrefixedRootAsDimension(bb: flatbuffers.ByteBuffer, obj?: Dimension): Dimension {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Dimension()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.DimensionValue= obj\n     * @returns onnxruntime.experimental.fbs.DimensionValue|null\n     */\n    value(obj?: onnxruntime.experimental.fbs.DimensionValue): onnxruntime.experimental.fbs.DimensionValue|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.DimensionValue())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimension(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimension(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimension(\n        builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset,\n        denotationOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Dimension.startDimension(builder);\n      Dimension.addValue(builder, valueOffset);\n      Dimension.addDenotation(builder, denotationOffset);\n      return Dimension.endDimension(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class DimensionValue {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns DimensionValue\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): DimensionValue {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param DimensionValue= obj\n     * @returns DimensionValue\n     */\n    static getSizePrefixedRootAsDimensionValue(bb: flatbuffers.ByteBuffer, obj?: DimensionValue): DimensionValue {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new DimensionValue()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.DimensionValueType\n     */\n    dimType(): onnxruntime.experimental.fbs.DimensionValueType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    dimValue(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    dimParam(): string|null;\n    dimParam(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    dimParam(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startDimensionValue(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.DimensionValueType dimType\n     */\n    static addDimType(builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType) {\n      builder.addFieldInt8(0, dimType, onnxruntime.experimental.fbs.DimensionValueType.UNKNOWN);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long dimValue\n     */\n    static addDimValue(builder: flatbuffers.Builder, dimValue: flatbuffers.Long) {\n      builder.addFieldInt64(1, dimValue, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimParamOffset\n     */\n    static addDimParam(builder: flatbuffers.Builder, dimParamOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimParamOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endDimensionValue(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createDimensionValue(\n        builder: flatbuffers.Builder, dimType: onnxruntime.experimental.fbs.DimensionValueType,\n        dimValue: flatbuffers.Long, dimParamOffset: flatbuffers.Offset): flatbuffers.Offset {\n      DimensionValue.startDimensionValue(builder);\n      DimensionValue.addDimType(builder, dimType);\n      DimensionValue.addDimValue(builder, dimValue);\n      DimensionValue.addDimParam(builder, dimParamOffset);\n      return DimensionValue.endDimensionValue(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TensorTypeAndShape {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TensorTypeAndShape\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TensorTypeAndShape {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape): TensorTypeAndShape {\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TensorTypeAndShape= obj\n     * @returns TensorTypeAndShape\n     */\n    static getSizePrefixedRootAsTensorTypeAndShape(bb: flatbuffers.ByteBuffer, obj?: TensorTypeAndShape):\n        TensorTypeAndShape {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TensorTypeAndShape()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    elemType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Shape= obj\n     * @returns onnxruntime.experimental.fbs.Shape|null\n     */\n    shape(obj?: onnxruntime.experimental.fbs.Shape): onnxruntime.experimental.fbs.Shape|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Shape())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensorTypeAndShape(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType elemType\n     */\n    static addElemType(builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, elemType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset shapeOffset\n     */\n    static addShape(builder: flatbuffers.Builder, shapeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, shapeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensorTypeAndShape(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensorTypeAndShape(\n        builder: flatbuffers.Builder, elemType: onnxruntime.experimental.fbs.TensorDataType,\n        shapeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TensorTypeAndShape.startTensorTypeAndShape(builder);\n      TensorTypeAndShape.addElemType(builder, elemType);\n      TensorTypeAndShape.addShape(builder, shapeOffset);\n      return TensorTypeAndShape.endTensorTypeAndShape(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class MapType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns MapType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): MapType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param MapType= obj\n     * @returns MapType\n     */\n    static getSizePrefixedRootAsMapType(bb: flatbuffers.ByteBuffer, obj?: MapType): MapType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new MapType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    keyType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    valueType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startMapType(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType keyType\n     */\n    static addKeyType(builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(0, keyType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueTypeOffset\n     */\n    static addValueType(builder: flatbuffers.Builder, valueTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, valueTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endMapType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createMapType(\n        builder: flatbuffers.Builder, keyType: onnxruntime.experimental.fbs.TensorDataType,\n        valueTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      MapType.startMapType(builder);\n      MapType.addKeyType(builder, keyType);\n      MapType.addValueType(builder, valueTypeOffset);\n      return MapType.endMapType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SequenceType {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SequenceType\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SequenceType {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SequenceType= obj\n     * @returns SequenceType\n     */\n    static getSizePrefixedRootAsSequenceType(bb: flatbuffers.ByteBuffer, obj?: SequenceType): SequenceType {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SequenceType()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    elemType(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSequenceType(builder: flatbuffers.Builder) {\n      builder.startObject(1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset elemTypeOffset\n     */\n    static addElemType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, elemTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSequenceType(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSequenceType(builder: flatbuffers.Builder, elemTypeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SequenceType.startSequenceType(builder);\n      SequenceType.addElemType(builder, elemTypeOffset);\n      return SequenceType.endSequenceType(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class EdgeEnd {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns EdgeEnd\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): EdgeEnd {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      return this.bb!.readUint32(this.bb_pos);\n    }\n\n    /**\n     * @returns number\n     */\n    srcArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 4);\n    }\n\n    /**\n     * @returns number\n     */\n    dstArgIndex(): number {\n      return this.bb!.readInt32(this.bb_pos + 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number node_index\n     * @param number src_arg_index\n     * @param number dst_arg_index\n     * @returns flatbuffers.Offset\n     */\n    static createEdgeEnd(\n        builder: flatbuffers.Builder, node_index: number, src_arg_index: number,\n        dst_arg_index: number): flatbuffers.Offset {\n      builder.prep(4, 12);\n      builder.writeInt32(dst_arg_index);\n      builder.writeInt32(src_arg_index);\n      builder.writeInt32(node_index);\n      return builder.offset();\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class NodeEdge {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns NodeEdge\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): NodeEdge {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param NodeEdge= obj\n     * @returns NodeEdge\n     */\n    static getSizePrefixedRootAsNodeEdge(bb: flatbuffers.ByteBuffer, obj?: NodeEdge): NodeEdge {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new NodeEdge()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    inputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.EdgeEnd= obj\n     * @returns onnxruntime.experimental.fbs.EdgeEnd\n     */\n    outputEdges(index: number, obj?: onnxruntime.experimental.fbs.EdgeEnd): onnxruntime.experimental.fbs.EdgeEnd|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.EdgeEnd())\n                          .__init(this.bb!.__vector(this.bb_pos + offset) + index * 12, this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNodeEdge(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number nodeIndex\n     */\n    static addNodeIndex(builder: flatbuffers.Builder, nodeIndex: number) {\n      builder.addFieldInt32(0, nodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputEdgesOffset\n     */\n    static addInputEdges(builder: flatbuffers.Builder, inputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, inputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputEdgesOffset\n     */\n    static addOutputEdges(builder: flatbuffers.Builder, outputEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, outputEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(12, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNodeEdge(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNodeEdge(\n        builder: flatbuffers.Builder, nodeIndex: number, inputEdgesOffset: flatbuffers.Offset,\n        outputEdgesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      NodeEdge.startNodeEdge(builder);\n      NodeEdge.addNodeIndex(builder, nodeIndex);\n      NodeEdge.addInputEdges(builder, inputEdgesOffset);\n      NodeEdge.addOutputEdges(builder, outputEdgesOffset);\n      return NodeEdge.endNodeEdge(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Node {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Node\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Node {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Node= obj\n     * @returns Node\n     */\n    static getSizePrefixedRootAsNode(bb: flatbuffers.ByteBuffer, obj?: Node): Node {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Node()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    sinceVersion(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readInt32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    index(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    opType(): string|null;\n    opType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    opType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.NodeType\n     */\n    type(): onnxruntime.experimental.fbs.NodeType {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.NodeType.Primitive;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    executionProviderType(): string|null;\n    executionProviderType(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    executionProviderType(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Attribute= obj\n     * @returns onnxruntime.experimental.fbs.Attribute\n     */\n    attributes(index: number, obj?: onnxruntime.experimental.fbs.Attribute): onnxruntime.experimental.fbs.Attribute\n        |null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Attribute())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    attributesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    inputArgCounts(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.readInt32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    inputArgCountsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Int32Array\n     */\n    inputArgCountsArray(): Int32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ?\n          new Int32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    implicitInputs(index: number): string;\n    implicitInputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    implicitInputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    implicitInputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startNode(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number sinceVersion\n     */\n    static addSinceVersion(builder: flatbuffers.Builder, sinceVersion: number) {\n      builder.addFieldInt32(3, sinceVersion, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number index\n     */\n    static addIndex(builder: flatbuffers.Builder, index: number) {\n      builder.addFieldInt32(4, index, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opTypeOffset\n     */\n    static addOpType(builder: flatbuffers.Builder, opTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, opTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.NodeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.NodeType) {\n      builder.addFieldInt32(6, type, onnxruntime.experimental.fbs.NodeType.Primitive);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset executionProviderTypeOffset\n     */\n    static addExecutionProviderType(builder: flatbuffers.Builder, executionProviderTypeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, executionProviderTypeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset attributesOffset\n     */\n    static addAttributes(builder: flatbuffers.Builder, attributesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, attributesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createAttributesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startAttributesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputArgCountsOffset\n     */\n    static addInputArgCounts(builder: flatbuffers.Builder, inputArgCountsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, inputArgCountsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputArgCountsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputArgCountsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset implicitInputsOffset\n     */\n    static addImplicitInputs(builder: flatbuffers.Builder, implicitInputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, implicitInputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createImplicitInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startImplicitInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endNode(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createNode(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, sinceVersion: number, index: number, opTypeOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.NodeType, executionProviderTypeOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset, attributesOffset: flatbuffers.Offset,\n        inputArgCountsOffset: flatbuffers.Offset, implicitInputsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Node.startNode(builder);\n      Node.addName(builder, nameOffset);\n      Node.addDocString(builder, docStringOffset);\n      Node.addDomain(builder, domainOffset);\n      Node.addSinceVersion(builder, sinceVersion);\n      Node.addIndex(builder, index);\n      Node.addOpType(builder, opTypeOffset);\n      Node.addType(builder, type);\n      Node.addExecutionProviderType(builder, executionProviderTypeOffset);\n      Node.addInputs(builder, inputsOffset);\n      Node.addOutputs(builder, outputsOffset);\n      Node.addAttributes(builder, attributesOffset);\n      Node.addInputArgCounts(builder, inputArgCountsOffset);\n      Node.addImplicitInputs(builder, implicitInputsOffset);\n      return Node.endNode(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class ValueInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns ValueInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): ValueInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param ValueInfo= obj\n     * @returns ValueInfo\n     */\n    static getSizePrefixedRootAsValueInfo(bb: flatbuffers.ByteBuffer, obj?: ValueInfo): ValueInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new ValueInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.TypeInfo= obj\n     * @returns onnxruntime.experimental.fbs.TypeInfo|null\n     */\n    type(obj?: onnxruntime.experimental.fbs.TypeInfo): onnxruntime.experimental.fbs.TypeInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.TypeInfo())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startValueInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset typeOffset\n     */\n    static addType(builder: flatbuffers.Builder, typeOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, typeOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endValueInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createValueInfo(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        typeOffset: flatbuffers.Offset): flatbuffers.Offset {\n      ValueInfo.startValueInfo(builder);\n      ValueInfo.addName(builder, nameOffset);\n      ValueInfo.addDocString(builder, docStringOffset);\n      ValueInfo.addType(builder, typeOffset);\n      return ValueInfo.endValueInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class TypeInfo {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns TypeInfo\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): TypeInfo {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param TypeInfo= obj\n     * @returns TypeInfo\n     */\n    static getSizePrefixedRootAsTypeInfo(bb: flatbuffers.ByteBuffer, obj?: TypeInfo): TypeInfo {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new TypeInfo()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    denotation(): string|null;\n    denotation(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    denotation(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TypeInfoValue\n     */\n    valueType(): onnxruntime.experimental.fbs.TypeInfoValue {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? /**  */ (this.bb!.readUint8(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TypeInfoValue.NONE;\n    }\n\n    /**\n     * @param flatbuffers.Table obj\n     * @returns ?flatbuffers.Table\n     */\n    value<T extends flatbuffers.Table>(obj: T): T|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__union(obj, this.bb_pos + offset) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTypeInfo(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset denotationOffset\n     */\n    static addDenotation(builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, denotationOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TypeInfoValue valueType\n     */\n    static addValueType(builder: flatbuffers.Builder, valueType: onnxruntime.experimental.fbs.TypeInfoValue) {\n      builder.addFieldInt8(1, valueType, onnxruntime.experimental.fbs.TypeInfoValue.NONE);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valueOffset\n     */\n    static addValue(builder: flatbuffers.Builder, valueOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, valueOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTypeInfo(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTypeInfo(\n        builder: flatbuffers.Builder, denotationOffset: flatbuffers.Offset,\n        valueType: onnxruntime.experimental.fbs.TypeInfoValue, valueOffset: flatbuffers.Offset): flatbuffers.Offset {\n      TypeInfo.startTypeInfo(builder);\n      TypeInfo.addDenotation(builder, denotationOffset);\n      TypeInfo.addValueType(builder, valueType);\n      TypeInfo.addValue(builder, valueOffset);\n      return TypeInfo.endTypeInfo(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class OperatorSetId {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns OperatorSetId\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): OperatorSetId {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param OperatorSetId= obj\n     * @returns OperatorSetId\n     */\n    static getSizePrefixedRootAsOperatorSetId(bb: flatbuffers.ByteBuffer, obj?: OperatorSetId): OperatorSetId {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new OperatorSetId()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    version(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startOperatorSetId(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long version\n     */\n    static addVersion(builder: flatbuffers.Builder, version: flatbuffers.Long) {\n      builder.addFieldInt64(1, version, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endOperatorSetId(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createOperatorSetId(\n        builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset, version: flatbuffers.Long): flatbuffers.Offset {\n      OperatorSetId.startOperatorSetId(builder);\n      OperatorSetId.addDomain(builder, domainOffset);\n      OperatorSetId.addVersion(builder, version);\n      return OperatorSetId.endOperatorSetId(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Tensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Tensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Tensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Tensor= obj\n     * @returns Tensor\n     */\n    static getSizePrefixedRootAsTensor(bb: flatbuffers.ByteBuffer, obj?: Tensor): Tensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Tensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.TensorDataType\n     */\n    dataType(): onnxruntime.experimental.fbs.TensorDataType {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.TensorDataType.UNDEFINED;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    rawData(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readUint8(this.bb!.__vector(this.bb_pos + offset) + index) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    rawDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint8Array\n     */\n    rawDataArray(): Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ?\n          new Uint8Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    stringData(index: number): string;\n    stringData(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    stringData(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringDataLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startTensor(builder: flatbuffers.Builder) {\n      builder.startObject(6);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.TensorDataType dataType\n     */\n    static addDataType(builder: flatbuffers.Builder, dataType: onnxruntime.experimental.fbs.TensorDataType) {\n      builder.addFieldInt32(3, dataType, onnxruntime.experimental.fbs.TensorDataType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset rawDataOffset\n     */\n    static addRawData(builder: flatbuffers.Builder, rawDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, rawDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createRawDataVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(1, data.length, 1);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt8(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startRawDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(1, numElems, 1);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringDataOffset\n     */\n    static addStringData(builder: flatbuffers.Builder, stringDataOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, stringDataOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringDataVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringDataVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createTensor(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset, dataType: onnxruntime.experimental.fbs.TensorDataType,\n        rawDataOffset: flatbuffers.Offset, stringDataOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Tensor.startTensor(builder);\n      Tensor.addName(builder, nameOffset);\n      Tensor.addDocString(builder, docStringOffset);\n      Tensor.addDims(builder, dimsOffset);\n      Tensor.addDataType(builder, dataType);\n      Tensor.addRawData(builder, rawDataOffset);\n      Tensor.addStringData(builder, stringDataOffset);\n      return Tensor.endTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SparseTensor {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SparseTensor\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SparseTensor {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SparseTensor= obj\n     * @returns SparseTensor\n     */\n    static getSizePrefixedRootAsSparseTensor(bb: flatbuffers.ByteBuffer, obj?: SparseTensor): SparseTensor {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SparseTensor()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    values(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    indices(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    dims(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    dimsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSparseTensor(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset valuesOffset\n     */\n    static addValues(builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, valuesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset indicesOffset\n     */\n    static addIndices(builder: flatbuffers.Builder, indicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, indicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset dimsOffset\n     */\n    static addDims(builder: flatbuffers.Builder, dimsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, dimsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createDimsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startDimsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSparseTensor(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSparseTensor(\n        builder: flatbuffers.Builder, valuesOffset: flatbuffers.Offset, indicesOffset: flatbuffers.Offset,\n        dimsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SparseTensor.startSparseTensor(builder);\n      SparseTensor.addValues(builder, valuesOffset);\n      SparseTensor.addIndices(builder, indicesOffset);\n      SparseTensor.addDims(builder, dimsOffset);\n      return SparseTensor.endSparseTensor(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Attribute {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Attribute\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Attribute {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Attribute= obj\n     * @returns Attribute\n     */\n    static getSizePrefixedRootAsAttribute(bb: flatbuffers.ByteBuffer, obj?: Attribute): Attribute {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Attribute()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    name(): string|null;\n    name(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    name(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns onnxruntime.experimental.fbs.AttributeType\n     */\n    type(): onnxruntime.experimental.fbs.AttributeType {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? /**  */ (this.bb!.readInt32(this.bb_pos + offset)) :\n                      onnxruntime.experimental.fbs.AttributeType.UNDEFINED;\n    }\n\n    /**\n     * @returns number\n     */\n    f(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readFloat32(this.bb_pos + offset) : 0.0;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    i(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    s(): string|null;\n    s(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    s(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor|null\n     */\n    t(obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    g(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    floats(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.readFloat32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    floatsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Float32Array\n     */\n    floatsArray(): Float32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ?\n          new Float32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    ints(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.readInt64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    intsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 22);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    strings(index: number): string;\n    strings(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    strings(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    stringsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 24);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    tensors(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    tensorsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 26);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph\n     */\n    graphs(index: number, obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    graphsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 28);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startAttribute(builder: flatbuffers.Builder) {\n      builder.startObject(13);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nameOffset\n     */\n    static addName(builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param onnxruntime.experimental.fbs.AttributeType type\n     */\n    static addType(builder: flatbuffers.Builder, type: onnxruntime.experimental.fbs.AttributeType) {\n      builder.addFieldInt32(2, type, onnxruntime.experimental.fbs.AttributeType.UNDEFINED);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number f\n     */\n    static addF(builder: flatbuffers.Builder, f: number) {\n      builder.addFieldFloat32(3, f, 0.0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long i\n     */\n    static addI(builder: flatbuffers.Builder, i: flatbuffers.Long) {\n      builder.addFieldInt64(4, i, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sOffset\n     */\n    static addS(builder: flatbuffers.Builder, sOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, sOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tOffset\n     */\n    static addT(builder: flatbuffers.Builder, tOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, tOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset gOffset\n     */\n    static addG(builder: flatbuffers.Builder, gOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, gOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset floatsOffset\n     */\n    static addFloats(builder: flatbuffers.Builder, floatsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, floatsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createFloatsVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addFloat32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startFloatsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset intsOffset\n     */\n    static addInts(builder: flatbuffers.Builder, intsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(9, intsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createIntsVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startIntsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset stringsOffset\n     */\n    static addStrings(builder: flatbuffers.Builder, stringsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(10, stringsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createStringsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startStringsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset tensorsOffset\n     */\n    static addTensors(builder: flatbuffers.Builder, tensorsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(11, tensorsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createTensorsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startTensorsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphsOffset\n     */\n    static addGraphs(builder: flatbuffers.Builder, graphsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(12, graphsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createGraphsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startGraphsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endAttribute(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createAttribute(\n        builder: flatbuffers.Builder, nameOffset: flatbuffers.Offset, docStringOffset: flatbuffers.Offset,\n        type: onnxruntime.experimental.fbs.AttributeType, f: number, i: flatbuffers.Long, sOffset: flatbuffers.Offset,\n        tOffset: flatbuffers.Offset, gOffset: flatbuffers.Offset, floatsOffset: flatbuffers.Offset,\n        intsOffset: flatbuffers.Offset, stringsOffset: flatbuffers.Offset, tensorsOffset: flatbuffers.Offset,\n        graphsOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Attribute.startAttribute(builder);\n      Attribute.addName(builder, nameOffset);\n      Attribute.addDocString(builder, docStringOffset);\n      Attribute.addType(builder, type);\n      Attribute.addF(builder, f);\n      Attribute.addI(builder, i);\n      Attribute.addS(builder, sOffset);\n      Attribute.addT(builder, tOffset);\n      Attribute.addG(builder, gOffset);\n      Attribute.addFloats(builder, floatsOffset);\n      Attribute.addInts(builder, intsOffset);\n      Attribute.addStrings(builder, stringsOffset);\n      Attribute.addTensors(builder, tensorsOffset);\n      Attribute.addGraphs(builder, graphsOffset);\n      return Attribute.endAttribute(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Graph {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Graph\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Graph {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Graph= obj\n     * @returns Graph\n     */\n    static getSizePrefixedRootAsGraph(bb: flatbuffers.ByteBuffer, obj?: Graph): Graph {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Graph()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Tensor= obj\n     * @returns onnxruntime.experimental.fbs.Tensor\n     */\n    initializers(index: number, obj?: onnxruntime.experimental.fbs.Tensor): onnxruntime.experimental.fbs.Tensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Tensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    initializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.ValueInfo= obj\n     * @returns onnxruntime.experimental.fbs.ValueInfo\n     */\n    nodeArgs(index: number, obj?: onnxruntime.experimental.fbs.ValueInfo): onnxruntime.experimental.fbs.ValueInfo|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.ValueInfo())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeArgsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.Node= obj\n     * @returns onnxruntime.experimental.fbs.Node\n     */\n    nodes(index: number, obj?: onnxruntime.experimental.fbs.Node): onnxruntime.experimental.fbs.Node|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Node())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    maxNodeIndex(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.readUint32(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.NodeEdge= obj\n     * @returns onnxruntime.experimental.fbs.NodeEdge\n     */\n    nodeEdges(index: number, obj?: onnxruntime.experimental.fbs.NodeEdge): onnxruntime.experimental.fbs.NodeEdge|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? (obj || new onnxruntime.experimental.fbs.NodeEdge())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeEdgesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    inputs(index: number): string;\n    inputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    inputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    inputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array\n     */\n    outputs(index: number): string;\n    outputs(index: number, optionalEncoding: flatbuffers.Encoding): string|Uint8Array;\n    outputs(index: number, optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb!.__vector(this.bb_pos + offset) + index * 4, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns number\n     */\n    outputsLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SparseTensor= obj\n     * @returns onnxruntime.experimental.fbs.SparseTensor\n     */\n    sparseInitializers(index: number, obj?: onnxruntime.experimental.fbs.SparseTensor):\n        onnxruntime.experimental.fbs.SparseTensor|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SparseTensor())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    sparseInitializersLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startGraph(builder: flatbuffers.Builder) {\n      builder.startObject(8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset initializersOffset\n     */\n    static addInitializers(builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, initializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeArgsOffset\n     */\n    static addNodeArgs(builder: flatbuffers.Builder, nodeArgsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, nodeArgsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeArgsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeArgsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodesOffset\n     */\n    static addNodes(builder: flatbuffers.Builder, nodesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, nodesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number maxNodeIndex\n     */\n    static addMaxNodeIndex(builder: flatbuffers.Builder, maxNodeIndex: number) {\n      builder.addFieldInt32(3, maxNodeIndex, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeEdgesOffset\n     */\n    static addNodeEdges(builder: flatbuffers.Builder, nodeEdgesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, nodeEdgesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeEdgesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeEdgesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset inputsOffset\n     */\n    static addInputs(builder: flatbuffers.Builder, inputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(5, inputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createInputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startInputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset outputsOffset\n     */\n    static addOutputs(builder: flatbuffers.Builder, outputsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, outputsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOutputsVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOutputsVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sparseInitializersOffset\n     */\n    static addSparseInitializers(builder: flatbuffers.Builder, sparseInitializersOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, sparseInitializersOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSparseInitializersVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSparseInitializersVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endGraph(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createGraph(\n        builder: flatbuffers.Builder, initializersOffset: flatbuffers.Offset, nodeArgsOffset: flatbuffers.Offset,\n        nodesOffset: flatbuffers.Offset, maxNodeIndex: number, nodeEdgesOffset: flatbuffers.Offset,\n        inputsOffset: flatbuffers.Offset, outputsOffset: flatbuffers.Offset,\n        sparseInitializersOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Graph.startGraph(builder);\n      Graph.addInitializers(builder, initializersOffset);\n      Graph.addNodeArgs(builder, nodeArgsOffset);\n      Graph.addNodes(builder, nodesOffset);\n      Graph.addMaxNodeIndex(builder, maxNodeIndex);\n      Graph.addNodeEdges(builder, nodeEdgesOffset);\n      Graph.addInputs(builder, inputsOffset);\n      Graph.addOutputs(builder, outputsOffset);\n      Graph.addSparseInitializers(builder, sparseInitializersOffset);\n      return Graph.endGraph(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class Model {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns Model\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): Model {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param Model= obj\n     * @returns Model\n     */\n    static getSizePrefixedRootAsModel(bb: flatbuffers.ByteBuffer, obj?: Model): Model {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new Model()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    irVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.OperatorSetId= obj\n     * @returns onnxruntime.experimental.fbs.OperatorSetId\n     */\n    opsetImport(index: number, obj?: onnxruntime.experimental.fbs.OperatorSetId):\n        onnxruntime.experimental.fbs.OperatorSetId|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.OperatorSetId())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    opsetImportLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerName(): string|null;\n    producerName(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerName(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    producerVersion(): string|null;\n    producerVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    producerVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 10);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    domain(): string|null;\n    domain(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    domain(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 12);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @returns flatbuffers.Long\n     */\n    modelVersion(): flatbuffers.Long {\n      let offset = this.bb!.__offset(this.bb_pos, 14);\n      return offset ? this.bb!.readInt64(this.bb_pos + offset) : this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    docString(): string|null;\n    docString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    docString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 16);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Graph= obj\n     * @returns onnxruntime.experimental.fbs.Graph|null\n     */\n    graph(obj?: onnxruntime.experimental.fbs.Graph): onnxruntime.experimental.fbs.Graph|null {\n      let offset = this.bb!.__offset(this.bb_pos, 18);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Graph())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphDocString(): string|null;\n    graphDocString(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphDocString(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 20);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startModel(builder: flatbuffers.Builder) {\n      builder.startObject(9);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long irVersion\n     */\n    static addIrVersion(builder: flatbuffers.Builder, irVersion: flatbuffers.Long) {\n      builder.addFieldInt64(0, irVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset opsetImportOffset\n     */\n    static addOpsetImport(builder: flatbuffers.Builder, opsetImportOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, opsetImportOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createOpsetImportVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startOpsetImportVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerNameOffset\n     */\n    static addProducerName(builder: flatbuffers.Builder, producerNameOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, producerNameOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset producerVersionOffset\n     */\n    static addProducerVersion(builder: flatbuffers.Builder, producerVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(3, producerVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset domainOffset\n     */\n    static addDomain(builder: flatbuffers.Builder, domainOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(4, domainOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Long modelVersion\n     */\n    static addModelVersion(builder: flatbuffers.Builder, modelVersion: flatbuffers.Long) {\n      builder.addFieldInt64(5, modelVersion, builder.createLong(0, 0));\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset docStringOffset\n     */\n    static addDocString(builder: flatbuffers.Builder, docStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(6, docStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphOffset\n     */\n    static addGraph(builder: flatbuffers.Builder, graphOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(7, graphOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphDocStringOffset\n     */\n    static addGraphDocString(builder: flatbuffers.Builder, graphDocStringOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(8, graphDocStringOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endModel(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createModel(\n        builder: flatbuffers.Builder, irVersion: flatbuffers.Long, opsetImportOffset: flatbuffers.Offset,\n        producerNameOffset: flatbuffers.Offset, producerVersionOffset: flatbuffers.Offset,\n        domainOffset: flatbuffers.Offset, modelVersion: flatbuffers.Long, docStringOffset: flatbuffers.Offset,\n        graphOffset: flatbuffers.Offset, graphDocStringOffset: flatbuffers.Offset): flatbuffers.Offset {\n      Model.startModel(builder);\n      Model.addIrVersion(builder, irVersion);\n      Model.addOpsetImport(builder, opsetImportOffset);\n      Model.addProducerName(builder, producerNameOffset);\n      Model.addProducerVersion(builder, producerVersionOffset);\n      Model.addDomain(builder, domainOffset);\n      Model.addModelVersion(builder, modelVersion);\n      Model.addDocString(builder, docStringOffset);\n      Model.addGraph(builder, graphOffset);\n      Model.addGraphDocString(builder, graphDocStringOffset);\n      return Model.endModel(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class KernelCreateInfos {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns KernelCreateInfos\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): KernelCreateInfos {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos): KernelCreateInfos {\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param KernelCreateInfos= obj\n     * @returns KernelCreateInfos\n     */\n    static getSizePrefixedRootAsKernelCreateInfos(bb: flatbuffers.ByteBuffer, obj?: KernelCreateInfos):\n        KernelCreateInfos {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new KernelCreateInfos()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param number index\n     * @returns number\n     */\n    nodeIndices(index: number): number|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.readUint32(this.bb!.__vector(this.bb_pos + offset) + index * 4) : 0;\n    }\n\n    /**\n     * @returns number\n     */\n    nodeIndicesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @returns Uint32Array\n     */\n    nodeIndicesArray(): Uint32Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ?\n          new Uint32Array(\n              this.bb!.bytes().buffer, this.bb!.bytes().byteOffset + this.bb!.__vector(this.bb_pos + offset),\n              this.bb!.__vector_len(this.bb_pos + offset)) :\n          null;\n    }\n\n    /**\n     * @param number index\n     * @returns flatbuffers.Long\n     */\n    kernelDefHashes(index: number): flatbuffers.Long|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.readUint64(this.bb!.__vector(this.bb_pos + offset) + index * 8) :\n                      this.bb!.createLong(0, 0);\n    }\n\n    /**\n     * @returns number\n     */\n    kernelDefHashesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startKernelCreateInfos(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset nodeIndicesOffset\n     */\n    static addNodeIndices(builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, nodeIndicesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<number> data\n     * @returns flatbuffers.Offset\n     */\n    static createNodeIndicesVector(builder: flatbuffers.Builder, data: number[]|Uint8Array): flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt32(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startNodeIndicesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelDefHashesOffset\n     */\n    static addKernelDefHashes(builder: flatbuffers.Builder, kernelDefHashesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, kernelDefHashesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Long> data\n     * @returns flatbuffers.Offset\n     */\n    static createKernelDefHashesVector(builder: flatbuffers.Builder, data: flatbuffers.Long[]): flatbuffers.Offset {\n      builder.startVector(8, data.length, 8);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addInt64(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startKernelDefHashesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(8, numElems, 8);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endKernelCreateInfos(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createKernelCreateInfos(\n        builder: flatbuffers.Builder, nodeIndicesOffset: flatbuffers.Offset,\n        kernelDefHashesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      KernelCreateInfos.startKernelCreateInfos(builder);\n      KernelCreateInfos.addNodeIndices(builder, nodeIndicesOffset);\n      KernelCreateInfos.addKernelDefHashes(builder, kernelDefHashesOffset);\n      return KernelCreateInfos.endKernelCreateInfos(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SubGraphSessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SubGraphSessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SubGraphSessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState): SubGraphSessionState {\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SubGraphSessionState= obj\n     * @returns SubGraphSessionState\n     */\n    static getSizePrefixedRootAsSubGraphSessionState(bb: flatbuffers.ByteBuffer, obj?: SubGraphSessionState):\n        SubGraphSessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SubGraphSessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    graphId(): string|null;\n    graphId(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    graphId(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSubGraphSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset graphIdOffset\n     */\n    static addGraphId(builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, graphIdOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSubGraphSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      builder.requiredField(offset, 4);  // graph_id\n      return offset;\n    }\n\n    static createSubGraphSessionState(\n        builder: flatbuffers.Builder, graphIdOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SubGraphSessionState.startSubGraphSessionState(builder);\n      SubGraphSessionState.addGraphId(builder, graphIdOffset);\n      SubGraphSessionState.addSessionState(builder, sessionStateOffset);\n      return SubGraphSessionState.endSubGraphSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class SessionState {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns SessionState\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): SessionState {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param SessionState= obj\n     * @returns SessionState\n     */\n    static getSizePrefixedRootAsSessionState(bb: flatbuffers.ByteBuffer, obj?: SessionState): SessionState {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new SessionState()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.KernelCreateInfos= obj\n     * @returns onnxruntime.experimental.fbs.KernelCreateInfos|null\n     */\n    kernels(obj?: onnxruntime.experimental.fbs.KernelCreateInfos): onnxruntime.experimental.fbs.KernelCreateInfos|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? (obj || new onnxruntime.experimental.fbs.KernelCreateInfos())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param number index\n     * @param onnxruntime.experimental.fbs.SubGraphSessionState= obj\n     * @returns onnxruntime.experimental.fbs.SubGraphSessionState\n     */\n    subGraphSessionStates(index: number, obj?: onnxruntime.experimental.fbs.SubGraphSessionState):\n        onnxruntime.experimental.fbs.SubGraphSessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SubGraphSessionState())\n                          .__init(this.bb!.__indirect(this.bb!.__vector(this.bb_pos + offset) + index * 4), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @returns number\n     */\n    subGraphSessionStatesLength(): number {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? this.bb!.__vector_len(this.bb_pos + offset) : 0;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startSessionState(builder: flatbuffers.Builder) {\n      builder.startObject(2);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset kernelsOffset\n     */\n    static addKernels(builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, kernelsOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset subGraphSessionStatesOffset\n     */\n    static addSubGraphSessionStates(builder: flatbuffers.Builder, subGraphSessionStatesOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, subGraphSessionStatesOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param Array.<flatbuffers.Offset> data\n     * @returns flatbuffers.Offset\n     */\n    static createSubGraphSessionStatesVector(builder: flatbuffers.Builder, data: flatbuffers.Offset[]):\n        flatbuffers.Offset {\n      builder.startVector(4, data.length, 4);\n      for (let i = data.length - 1; i >= 0; i--) {\n        builder.addOffset(data[i]);\n      }\n      return builder.endVector();\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param number numElems\n     */\n    static startSubGraphSessionStatesVector(builder: flatbuffers.Builder, numElems: number) {\n      builder.startVector(4, numElems, 4);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endSessionState(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    static createSessionState(\n        builder: flatbuffers.Builder, kernelsOffset: flatbuffers.Offset,\n        subGraphSessionStatesOffset: flatbuffers.Offset): flatbuffers.Offset {\n      SessionState.startSessionState(builder);\n      SessionState.addKernels(builder, kernelsOffset);\n      SessionState.addSubGraphSessionStates(builder, subGraphSessionStatesOffset);\n      return SessionState.endSessionState(builder);\n    }\n  }\n}\n/**\n * @constructor\n */\nexport namespace onnxruntime.experimental.fbs {\n  export class InferenceSession {\n    bb: flatbuffers.ByteBuffer|null = null;\n\n    bb_pos = 0;\n    /**\n     * @param number i\n     * @param flatbuffers.ByteBuffer bb\n     * @returns InferenceSession\n     */\n    __init(i: number, bb: flatbuffers.ByteBuffer): InferenceSession {\n      this.bb_pos = i;\n      this.bb = bb;\n      return this;\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @param InferenceSession= obj\n     * @returns InferenceSession\n     */\n    static getSizePrefixedRootAsInferenceSession(bb: flatbuffers.ByteBuffer, obj?: InferenceSession): InferenceSession {\n      bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);\n      return (obj || new InferenceSession()).__init(bb.readInt32(bb.position()) + bb.position(), bb);\n    }\n\n    /**\n     * @param flatbuffers.ByteBuffer bb\n     * @returns boolean\n     */\n    static bufferHasIdentifier(bb: flatbuffers.ByteBuffer): boolean {\n      return bb.__has_identifier('ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Encoding= optionalEncoding\n     * @returns string|Uint8Array|null\n     */\n    ortVersion(): string|null;\n    ortVersion(optionalEncoding: flatbuffers.Encoding): string|Uint8Array|null;\n    ortVersion(optionalEncoding?: any): string|Uint8Array|null {\n      let offset = this.bb!.__offset(this.bb_pos, 4);\n      return offset ? this.bb!.__string(this.bb_pos + offset, optionalEncoding) : null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.Model= obj\n     * @returns onnxruntime.experimental.fbs.Model|null\n     */\n    model(obj?: onnxruntime.experimental.fbs.Model): onnxruntime.experimental.fbs.Model|null {\n      let offset = this.bb!.__offset(this.bb_pos, 6);\n      return offset ? (obj || new onnxruntime.experimental.fbs.Model())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param onnxruntime.experimental.fbs.SessionState= obj\n     * @returns onnxruntime.experimental.fbs.SessionState|null\n     */\n    sessionState(obj?: onnxruntime.experimental.fbs.SessionState): onnxruntime.experimental.fbs.SessionState|null {\n      let offset = this.bb!.__offset(this.bb_pos, 8);\n      return offset ? (obj || new onnxruntime.experimental.fbs.SessionState())\n                          .__init(this.bb!.__indirect(this.bb_pos + offset), this.bb!) :\n                      null;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     */\n    static startInferenceSession(builder: flatbuffers.Builder) {\n      builder.startObject(3);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset ortVersionOffset\n     */\n    static addOrtVersion(builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(0, ortVersionOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset modelOffset\n     */\n    static addModel(builder: flatbuffers.Builder, modelOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(1, modelOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset sessionStateOffset\n     */\n    static addSessionState(builder: flatbuffers.Builder, sessionStateOffset: flatbuffers.Offset) {\n      builder.addFieldOffset(2, sessionStateOffset, 0);\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @returns flatbuffers.Offset\n     */\n    static endInferenceSession(builder: flatbuffers.Builder): flatbuffers.Offset {\n      let offset = builder.endObject();\n      return offset;\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM');\n    }\n\n    /**\n     * @param flatbuffers.Builder builder\n     * @param flatbuffers.Offset offset\n     */\n    static finishSizePrefixedInferenceSessionBuffer(builder: flatbuffers.Builder, offset: flatbuffers.Offset) {\n      builder.finish(offset, 'ORTM', true);\n    }\n\n    static createInferenceSession(\n        builder: flatbuffers.Builder, ortVersionOffset: flatbuffers.Offset, modelOffset: flatbuffers.Offset,\n        sessionStateOffset: flatbuffers.Offset): flatbuffers.Offset {\n      InferenceSession.startInferenceSession(builder);\n      InferenceSession.addOrtVersion(builder, ortVersionOffset);\n      InferenceSession.addModel(builder, modelOffset);\n      InferenceSession.addSessionState(builder, sessionStateOffset);\n      return InferenceSession.endInferenceSession(builder);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\nimport {Session} from './session';\nimport {Tensor as OnnxjsTensor} from './tensor';\n\nexport class OnnxjsSessionHandler implements SessionHandler {\n  constructor(private session: Session) {\n    this.inputNames = this.session.inputNames;\n    this.outputNames = this.session.outputNames;\n  }\n\n  async dispose(): Promise<void> {}\n  inputNames: readonly string[];\n  outputNames: readonly string[];\n  async run(\n      feeds: SessionHandler.FeedsType, _fetches: SessionHandler.FetchesType,\n      _options: InferenceSession.RunOptions): Promise<SessionHandler.ReturnType> {\n    const inputMap = new Map<string, OnnxjsTensor>();\n    for (const name in feeds) {\n      if (Object.hasOwnProperty.call(feeds, name)) {\n        const feed = feeds[name];\n        inputMap.set(\n            name,\n            new OnnxjsTensor(\n                feed.dims, feed.type as OnnxjsTensor.DataType, undefined, undefined,\n                feed.data as OnnxjsTensor.NumberType));\n      }\n    }\n    const outputMap = await this.session.run(inputMap);\n    const output: SessionHandler.ReturnType = {};\n    outputMap.forEach((tensor, name) => {\n      output[name] = new Tensor(tensor.type, tensor.data, tensor.dims);\n    });\n    return output;\n  }\n  startProfiling(): void {\n    this.session.startProfiling();\n  }\n  endProfiling(): void {\n    this.session.endProfiling();\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {readFile} from 'fs';\nimport {promisify} from 'util';\n\nimport {resolveBackend, SessionHandlerType} from './backend';\nimport {ExecutionPlan} from './execution-plan';\nimport {Graph} from './graph';\nimport {Profiler} from './instrument';\nimport {Model} from './model';\nimport {Operator} from './operators';\nimport {Tensor} from './tensor';\n\nexport declare namespace Session {\n  export interface Config {\n    backendHint?: string;\n    profiler?: Profiler.Config;\n  }\n\n  export interface Context {\n    profiler: Readonly<Profiler>;\n    graphInputTypes?: Tensor.DataType[];\n    graphInputDims?: Array<readonly number[]>;\n  }\n}\n\nexport class Session {\n  constructor(config: Session.Config = {}) {\n    this._initialized = false;\n    this.backendHint = config.backendHint;\n    this.profiler = Profiler.create(config.profiler);\n    this.context = {profiler: this.profiler, graphInputTypes: [], graphInputDims: []};\n  }\n\n  get inputNames(): readonly string[] {\n    return this._model.graph.getInputNames();\n  }\n  get outputNames(): readonly string[] {\n    return this._model.graph.getOutputNames();\n  }\n\n  startProfiling() {\n    this.profiler.start();\n  }\n\n  endProfiling() {\n    this.profiler.stop();\n  }\n\n  async loadModel(uri: string): Promise<void>;\n  async loadModel(buffer: ArrayBuffer, byteOffset?: number, length?: number): Promise<void>;\n  async loadModel(buffer: Uint8Array): Promise<void>;\n  async loadModel(arg: string|ArrayBuffer|Uint8Array, byteOffset?: number, length?: number): Promise<void> {\n    await this.profiler.event('session', 'Session.loadModel', async () => {\n      // resolve backend and session handler\n      const backend = await resolveBackend(this.backendHint);\n      this.sessionHandler = backend.createSessionHandler(this.context);\n\n      this._model = new Model();\n      if (typeof arg === 'string') {\n        const isOrtFormat = arg.endsWith('.ort');\n        if (typeof fetch === 'undefined') {\n          // node\n          const buf = await promisify(readFile)(arg);\n          this.initialize(Buffer.from(buf), isOrtFormat);\n        } else {\n          // browser\n          const response = await fetch(arg);\n          const buf = await response.arrayBuffer();\n          this.initialize(new Uint8Array(buf), isOrtFormat);\n        }\n      } else if (!ArrayBuffer.isView(arg)) {\n        // load model from ArrayBuffer\n        const arr = new Uint8Array(arg, byteOffset || 0, length || arg.byteLength);\n        this.initialize(arr);\n      } else {\n        // load model from Uint8array\n        this.initialize(arg);\n      }\n    });\n  }\n\n  private initialize(modelProtoBlob: Uint8Array, isOrtFormat?: boolean): void {\n    if (this._initialized) {\n      throw new Error('already initialized');\n    }\n\n    this.profiler.event('session', 'Session.initialize', () => {\n      // load graph\n      const graphInitializer =\n          this.sessionHandler.transformGraph ? this.sessionHandler as Graph.Initializer : undefined;\n      this._model.load(modelProtoBlob, graphInitializer, isOrtFormat);\n\n      // graph is completely initialzied at this stage , let the interested handlers know\n      if (this.sessionHandler.onGraphInitialized) {\n        this.sessionHandler.onGraphInitialized(this._model.graph);\n      }\n      // initialize each operator in the graph\n      this.initializeOps(this._model.graph);\n\n      // instantiate an ExecutionPlan object to be used by the Session object\n      this._executionPlan = new ExecutionPlan(this._model.graph, this._ops, this.profiler);\n    });\n\n    this._initialized = true;\n  }\n\n  async run(inputs: Map<string, Tensor>|Tensor[]): Promise<Map<string, Tensor>> {\n    if (!this._initialized) {\n      throw new Error('session not initialized yet');\n    }\n\n    return this.profiler.event('session', 'Session.run', async () => {\n      const inputTensors = this.normalizeAndValidateInputs(inputs);\n\n      const outputTensors = await this._executionPlan.execute(this.sessionHandler, inputTensors);\n\n      return this.createOutput(outputTensors);\n    });\n  }\n\n  private normalizeAndValidateInputs(inputs: Map<string, Tensor>|Tensor[]): Tensor[] {\n    const modelInputNames = this._model.graph.getInputNames();\n\n    // normalize inputs\n    // inputs: Tensor[]\n    if (Array.isArray(inputs)) {\n      if (inputs.length !== modelInputNames.length) {\n        throw new Error(`incorrect input array length: expected ${modelInputNames.length} but got ${inputs.length}`);\n      }\n    }\n    // convert map to array\n    // inputs: Map<string, Tensor>\n    else {\n      if (inputs.size !== modelInputNames.length) {\n        throw new Error(`incorrect input map size: expected ${modelInputNames.length} but got ${inputs.size}`);\n      }\n\n      const sortedInputs = new Array<Tensor>(inputs.size);\n      let sortedInputsIndex = 0;\n      for (let i = 0; i < modelInputNames.length; ++i) {\n        const tensor = inputs.get(modelInputNames[i]);\n        if (!tensor) {\n          throw new Error(`missing input tensor for: '${name}'`);\n        }\n        sortedInputs[sortedInputsIndex++] = tensor;\n      }\n\n      inputs = sortedInputs;\n    }\n\n    // validate dims requirements\n    // First session run - graph input data is not cached for the session\n    if (!this.context.graphInputTypes || this.context.graphInputTypes.length === 0 || !this.context.graphInputDims ||\n        this.context.graphInputDims.length === 0) {\n      const modelInputIndices = this._model.graph.getInputIndices();\n      const modelValues = this._model.graph.getValues();\n\n      const graphInputDims = new Array<readonly number[]>(modelInputIndices.length);\n\n      for (let i = 0; i < modelInputIndices.length; ++i) {\n        const graphInput = modelValues[modelInputIndices[i]];\n        graphInputDims[i] = graphInput.type!.shape.dims;\n\n        // cached for second and subsequent runs.\n        // Some parts of the framework works on the assumption that the graph and types and shapes are static\n        this.context.graphInputTypes!.push(graphInput.type!.tensorType);\n        this.context.graphInputDims!.push(inputs[i].dims);\n      }\n\n      this.validateInputTensorDims(graphInputDims, inputs, true);\n    }\n\n    // Second and subsequent session runs - graph input data is cached for the session\n    else {\n      this.validateInputTensorDims(this.context.graphInputDims, inputs, false);\n    }\n\n    // validate types requirement\n    this.validateInputTensorTypes(this.context.graphInputTypes!, inputs);\n\n    return inputs;\n  }\n\n  private validateInputTensorTypes(graphInputTypes: Tensor.DataType[], givenInputs: Tensor[]) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedType = graphInputTypes[i];\n      const actualType = givenInputs[i].type;\n      if (expectedType !== actualType) {\n        throw new Error(`input tensor[${i}] check failed: expected type '${expectedType}' but got ${actualType}`);\n      }\n    }\n  }\n\n  private validateInputTensorDims(\n      graphInputDims: Array<readonly number[]>, givenInputs: Tensor[], noneDimSupported: boolean) {\n    for (let i = 0; i < givenInputs.length; i++) {\n      const expectedDims = graphInputDims[i];\n      const actualDims = givenInputs[i].dims;\n      if (!this.compareTensorDims(expectedDims, actualDims, noneDimSupported)) {\n        throw new Error(`input tensor[${i}] check failed: expected shape '[${expectedDims.join(',')}]' but got [${\n            actualDims.join(',')}]`);\n      }\n    }\n  }\n\n  private compareTensorDims(expectedDims: readonly number[], actualDims: readonly number[], noneDimSupported: boolean):\n      boolean {\n    if (expectedDims.length !== actualDims.length) {\n      return false;\n    }\n\n    for (let i = 0; i < expectedDims.length; ++i) {\n      if (expectedDims[i] !== actualDims[i] && (!noneDimSupported || expectedDims[i] !== 0)) {\n        // data shape mis-match AND not a 'None' dimension.\n        return false;\n      }\n    }\n\n    return true;\n  }\n\n  private createOutput(outputTensors: Tensor[]): Map<string, Tensor> {\n    const modelOutputNames = this._model.graph.getOutputNames();\n    if (outputTensors.length !== modelOutputNames.length) {\n      throw new Error('expected number of outputs do not match number of generated outputs');\n    }\n\n    const output = new Map<string, Tensor>();\n    for (let i = 0; i < modelOutputNames.length; ++i) {\n      output.set(modelOutputNames[i], outputTensors[i]);\n    }\n\n    return output;\n  }\n\n  private initializeOps(graph: Graph): void {\n    const nodes = graph.getNodes();\n    this._ops = new Array(nodes.length);\n\n    for (let i = 0; i < nodes.length; i++) {\n      this._ops[i] = this.sessionHandler.resolve(nodes[i], this._model.opsets, graph);\n    }\n  }\n\n  private _model: Model;\n  private _initialized: boolean;\n\n  private _ops: Operator[];\n  private _executionPlan: ExecutionPlan;\n\n  private backendHint?: string;\n\n  private sessionHandler: SessionHandlerType;\n  private context: Session.Context;\n  private profiler: Readonly<Profiler>;\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Guid} from 'guid-typescript';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {onnxruntime} from './ort-schema/ort-generated';\n\nimport ortFbs = onnxruntime.experimental.fbs;\n\nimport {ProtoUtil, ShapeUtil} from './util';\n\nexport declare namespace Tensor {\n  export interface DataTypeMap {\n    bool: Uint8Array;\n    float32: Float32Array;\n    float64: Float64Array;\n    string: string[];\n    int8: Int8Array;\n    uint8: Uint8Array;\n    int16: Int16Array;\n    uint16: Uint16Array;\n    int32: Int32Array;\n    uint32: Uint32Array;\n  }\n\n  export type DataType = keyof DataTypeMap;\n\n  export type StringType = Tensor.DataTypeMap['string'];\n  export type BooleanType = Tensor.DataTypeMap['bool'];\n  export type IntegerType = Tensor.DataTypeMap['int8']|Tensor.DataTypeMap['uint8']|Tensor.DataTypeMap['int16']|\n                            Tensor.DataTypeMap['uint16']|Tensor.DataTypeMap['int32']|Tensor.DataTypeMap['uint32'];\n  export type FloatType = Tensor.DataTypeMap['float32']|Tensor.DataTypeMap['float64'];\n  export type NumberType = BooleanType|IntegerType|FloatType;\n\n  export type Id = Guid;\n}\n\ntype TensorData = Tensor.DataTypeMap[Tensor.DataType];\n\ntype DataProvider = (id: Tensor.Id) => TensorData;\ntype AsyncDataProvider = (id: Tensor.Id) => Promise<TensorData>;\n\nexport class Tensor {\n  /**\n   * get the underlying tensor data\n   */\n  get data(): TensorData {\n    if (this.cache === undefined) {\n      const data = this.dataProvider!(this.dataId);\n      if (data.length !== this.size) {\n        throw new Error('Length of data provided by the Data Provider is inconsistent with the dims of this Tensor.');\n      }\n      this.cache = data;\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the underlying string tensor data. Should only use when type is STRING\n   */\n  get stringData() {\n    if (this.type !== 'string') {\n      throw new TypeError('data type is not string');\n    }\n\n    return this.data as Tensor.StringType;\n  }\n\n  /**\n   * get the underlying integer tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL)\n   */\n  get integerData() {\n    switch (this.type) {\n      case 'uint8':\n      case 'int8':\n      case 'uint16':\n      case 'int16':\n      case 'int32':\n      case 'uint32':\n      case 'bool':\n        return this.data as Tensor.IntegerType;\n\n      default:\n        throw new TypeError('data type is not integer (uint8, int8, uint16, int16, int32, uint32, bool)');\n    }\n  }\n\n  /**\n   * get the underlying float tensor data. Should only use when type is one of the following: (FLOAT, DOUBLE)\n   */\n  get floatData() {\n    switch (this.type) {\n      case 'float32':\n      case 'float64':\n        return this.data as Tensor.FloatType;\n\n      default:\n        throw new TypeError('data type is not float (float32, float64)');\n    }\n  }\n\n  /**\n   * get the underlying number tensor data. Should only use when type is one of the following: (UINT8, INT8, UINT16,\n   * INT16, INT32, UINT32, BOOL, FLOAT, DOUBLE)\n   */\n  get numberData() {\n    if (this.type !== 'string') {\n      return this.data as Tensor.NumberType;\n    }\n    throw new TypeError('type cannot be non-number (string)');\n  }\n\n  /**\n   * get value of an element at the given indices\n   */\n  get(indices: readonly number[]): Tensor.DataTypeMap[Tensor.DataType][number] {\n    return this.data[ShapeUtil.indicesToOffset(indices, this.strides)];\n  }\n\n  /**\n   * set value of an element at the given indices\n   */\n  set(indices: readonly number[], value: Tensor.DataTypeMap[Tensor.DataType][number]) {\n    this.data[ShapeUtil.indicesToOffset(indices, this.strides)] = value;\n  }\n\n  /**\n   * get the underlying tensor data asynchronously\n   */\n  async getData(): Promise<TensorData> {\n    if (this.cache === undefined) {\n      this.cache = await this.asyncDataProvider!(this.dataId);\n    }\n    return this.cache;\n  }\n\n  /**\n   * get the number of elements in the tensor\n   */\n  public readonly size: number;\n\n  private _strides: readonly number[];\n  /**\n   * get the strides for each dimension\n   */\n  get strides(): readonly number[] {\n    if (!this._strides) {\n      this._strides = ShapeUtil.computeStrides(this.dims);\n    }\n    return this._strides;\n  }\n\n  constructor(\n      /**\n       * get the dimensions of the tensor\n       */\n      public readonly dims: readonly number[],\n      /**\n       * get the type of the tensor\n       */\n      public readonly type: Tensor.DataType, private dataProvider?: DataProvider,\n      private asyncDataProvider?: AsyncDataProvider, private cache?: TensorData,\n      /**\n       * get the data ID that used to map to a tensor data\n       */\n      public readonly dataId: Guid = Guid.create()) {\n    this.size = ShapeUtil.validateDimsAndCalcSize(dims);\n    const size = this.size;\n    const empty = (dataProvider === undefined && asyncDataProvider === undefined && cache === undefined);\n\n    if (cache !== undefined) {\n      if (cache.length !== size) {\n        throw new RangeError('Input dims doesn\\'t match data length.');\n      }\n    }\n\n    if (type === 'string') {\n      if (cache !== undefined && (!Array.isArray(cache) || !cache.every(i => typeof i === 'string'))) {\n        throw new TypeError('cache should be a string array');\n      }\n\n      if (empty) {\n        this.cache = new Array<string>(size);\n      }\n    } else {\n      if (cache !== undefined) {\n        const constructor = dataviewConstructor(type);\n        if (!(cache instanceof constructor)) {\n          throw new TypeError(`cache should be type ${constructor.name}`);\n        }\n      }\n\n      if (empty) {\n        const buf = new ArrayBuffer(size * sizeof(type));\n        this.cache = createView(buf, type);\n      }\n    }\n  }\n\n  /**\n   * Construct new Tensor from a ONNX Tensor object\n   * @param tensorProto the ONNX Tensor\n   */\n  static fromProto(tensorProto: onnx.ITensorProto): Tensor {\n    if (!tensorProto) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const type = ProtoUtil.tensorDataTypeFromProto(tensorProto.dataType!);\n    const dims = ProtoUtil.tensorDimsFromProto(tensorProto.dims!);\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      tensorProto.stringData!.forEach((str, i) => {\n        const buf = Buffer.from(str.buffer, str.byteOffset, str.byteLength);\n        value.data[i] = buf.toString();\n      });\n\n    } else if (\n        tensorProto.rawData && typeof tensorProto.rawData.byteLength === 'number' &&\n        tensorProto.rawData.byteLength > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource =\n          new DataView(tensorProto.rawData.buffer, tensorProto.rawData.byteOffset, tensorProto.rawData.byteLength);\n      const elementSize = sizeofProto(tensorProto.dataType!);\n      const length = tensorProto.rawData.byteLength / elementSize;\n\n      if (tensorProto.rawData.byteLength % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, tensorProto.dataType!, i * elementSize);\n        dataDest[i] = n;\n      }\n    } else {\n      // populate value from array\n      let array: Array<number|Long>;\n      switch (tensorProto.dataType) {\n        case onnx.TensorProto.DataType.FLOAT:\n          array = tensorProto.floatData!;\n          break;\n        case onnx.TensorProto.DataType.INT32:\n        case onnx.TensorProto.DataType.INT16:\n        case onnx.TensorProto.DataType.UINT16:\n        case onnx.TensorProto.DataType.INT8:\n        case onnx.TensorProto.DataType.UINT8:\n        case onnx.TensorProto.DataType.BOOL:\n          array = tensorProto.int32Data!;\n          break;\n        case onnx.TensorProto.DataType.INT64:\n          array = tensorProto.int64Data!;\n          break;\n        case onnx.TensorProto.DataType.DOUBLE:\n          array = tensorProto.doubleData!;\n          break;\n        case onnx.TensorProto.DataType.UINT32:\n        case onnx.TensorProto.DataType.UINT64:\n          array = tensorProto.uint64Data!;\n          break;\n        default:\n          // should never run here\n          throw new Error('unspecific error');\n      }\n\n      if (array === null || array === undefined) {\n        throw new Error('failed to populate data from a tensorproto value');\n      }\n\n      const data = value.data;\n      if (data.length !== array.length) {\n        throw new Error('array length mismatch');\n      }\n\n      for (let i = 0; i < array.length; i++) {\n        const element = array[i];\n        if (Long.isLong(element)) {\n          data[i] = longToNumber(element, tensorProto.dataType);\n        } else {\n          data[i] = element;\n        }\n      }\n    }\n\n    return value;\n  }\n\n  /**\n   * Construct new Tensor from raw data\n   * @param data the raw data object. Should be a string array for 'string' tensor, and the corresponding typed array\n   * for other types of tensor.\n   * @param dims the dimensions of the tensor\n   * @param type the type of the tensor\n   */\n  static fromData(data: Tensor.DataTypeMap[Tensor.DataType], dims: readonly number[], type: Tensor.DataType) {\n    return new Tensor(dims, type, undefined, undefined, data);\n  }\n\n  static fromOrtTensor(ortTensor: ortFbs.Tensor) {\n    if (!ortTensor) {\n      throw new Error('cannot construct Value from an empty tensor');\n    }\n    const dims = ProtoUtil.tensorDimsFromORTFormat(ortTensor);\n    const type = ProtoUtil.tensorDataTypeFromProto(ortTensor.dataType());\n\n    const value = new Tensor(dims, type);\n\n    if (type === 'string') {\n      // When it's STRING type, the value should always be stored in field\n      // 'stringData'\n      for (let i = 0; i < ortTensor.stringDataLength(); i++) {\n        value.data[i] = ortTensor.stringData(i);\n      }\n\n    } else if (\n        ortTensor.rawDataArray() && typeof ortTensor.rawDataLength() === 'number' && ortTensor.rawDataLength() > 0) {\n      // NOT considering segment for now (IMPORTANT)\n\n      // populate value from rawData\n      const dataDest = value.data;\n      const dataSource = new DataView(\n          ortTensor.rawDataArray()!.buffer, ortTensor.rawDataArray()!.byteOffset, ortTensor.rawDataLength());\n      const elementSize = sizeofProto(ortTensor.dataType());\n      const length = ortTensor.rawDataLength() / elementSize;\n\n      if (ortTensor.rawDataLength() % elementSize !== 0) {\n        throw new Error('invalid buffer length');\n      }\n      if (dataDest.length !== length) {\n        throw new Error('buffer length mismatch');\n      }\n\n      for (let i = 0; i < length; i++) {\n        const n = readProto(dataSource, ortTensor.dataType(), i * elementSize);\n        dataDest[i] = n;\n      }\n    }\n    return value;\n  }\n}\n\nfunction sizeof(type: Tensor.DataType): number {\n  switch (type) {\n    case 'bool':\n    case 'int8':\n    case 'uint8':\n      return 1;\n    case 'int16':\n    case 'uint16':\n      return 2;\n    case 'int32':\n    case 'uint32':\n    case 'float32':\n      return 4;\n    case 'float64':\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${type}`);\n  }\n}\n\nfunction sizeofProto(type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.UINT8:\n    case onnx.TensorProto.DataType.INT8:\n    case onnx.TensorProto.DataType.BOOL:\n      return 1;\n    case onnx.TensorProto.DataType.UINT16:\n    case onnx.TensorProto.DataType.INT16:\n      return 2;\n    case onnx.TensorProto.DataType.FLOAT:\n    case onnx.TensorProto.DataType.INT32:\n    case onnx.TensorProto.DataType.UINT32:\n      return 4;\n    case onnx.TensorProto.DataType.INT64:\n    case onnx.TensorProto.DataType.DOUBLE:\n    case onnx.TensorProto.DataType.UINT64:\n      return 8;\n    default:\n      throw new Error(`cannot calculate sizeof() on type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n\nfunction createView(dataBuffer: ArrayBuffer, type: Tensor.DataType) {\n  return new (dataviewConstructor(type))(dataBuffer);\n}\n\nfunction dataviewConstructor(type: Tensor.DataType) {\n  switch (type) {\n    case 'bool':\n    case 'uint8':\n      return Uint8Array;\n    case 'int8':\n      return Int8Array;\n    case 'int16':\n      return Int16Array;\n    case 'uint16':\n      return Uint16Array;\n    case 'int32':\n      return Int32Array;\n    case 'uint32':\n      return Uint32Array;\n    case 'float32':\n      return Float32Array;\n    case 'float64':\n      return Float64Array;\n    default:\n      // should never run to here\n      throw new Error('unspecified error');\n  }\n}\n\n// convert a long number to a 32-bit integer (cast-down)\nfunction longToNumber(i: Long, type: onnx.TensorProto.DataType|ortFbs.TensorDataType): number {\n  // INT64, UINT32, UINT64\n  if (type === onnx.TensorProto.DataType.INT64 || type === ortFbs.TensorDataType.INT64) {\n    if (i.greaterThanOrEqual(2147483648) || i.lessThan(-2147483648)) {\n      throw new TypeError('int64 is not supported');\n    }\n  } else if (\n      type === onnx.TensorProto.DataType.UINT32 || type === ortFbs.TensorDataType.UINT32 ||\n      type === onnx.TensorProto.DataType.UINT64 || type === ortFbs.TensorDataType.UINT64) {\n    if (i.greaterThanOrEqual(4294967296) || i.lessThan(0)) {\n      throw new TypeError('uint64 is not supported');\n    }\n  } else {\n    throw new TypeError(`not a LONG type: ${onnx.TensorProto.DataType[type]}`);\n  }\n\n  return i.toNumber();\n}\n\n// read one value from TensorProto\nfunction readProto(view: DataView, type: onnx.TensorProto.DataType|ortFbs.TensorDataType, byteOffset: number): number {\n  switch (type) {\n    case onnx.TensorProto.DataType.BOOL:\n    case onnx.TensorProto.DataType.UINT8:\n      return view.getUint8(byteOffset);\n    case onnx.TensorProto.DataType.INT8:\n      return view.getInt8(byteOffset);\n    case onnx.TensorProto.DataType.UINT16:\n      return view.getUint16(byteOffset, true);\n    case onnx.TensorProto.DataType.INT16:\n      return view.getInt16(byteOffset, true);\n    case onnx.TensorProto.DataType.FLOAT:\n      return view.getFloat32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT32:\n      return view.getInt32(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT32:\n      return view.getUint32(byteOffset, true);\n    case onnx.TensorProto.DataType.INT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), false), type);\n    case onnx.TensorProto.DataType.DOUBLE:\n      return view.getFloat64(byteOffset, true);\n    case onnx.TensorProto.DataType.UINT64:\n      return longToNumber(\n          Long.fromBits(view.getUint32(byteOffset, true), view.getUint32(byteOffset + 4, true), true), type);\n    default:\n      throw new Error(`cannot read from DataView for type ${onnx.TensorProto.DataType[type]}`);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {flatbuffers} from 'flatbuffers';\nimport Long from 'long';\nimport {onnx} from 'onnx-proto';\n\nimport {Graph} from './graph';\nimport {onnxruntime} from './ort-schema/ort-generated';\nimport {Tensor} from './tensor';\n\n// check the inputs shape before running an OP.\n// return true when the inputs pass the check\n// return false when the inputs do not fit the requirement\n// throw exception when fatal error or not implemented\nexport function checkInputsShape(inputs: Tensor[], ...expectedDimensions: number[]): boolean {\n  if (!inputs || inputs.length !== expectedDimensions.length) {\n    return false;\n  }\n  for (let i = 0; i < inputs.length; i++) {\n    if (!inputs[i].dims || inputs[i].dims.length !== expectedDimensions[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\n// Evaluates the given expression and asserts error message if condition is unmet.\nexport function assert(expr: boolean, msg: () => string) {\n  if (!expr) {\n    throw new Error(typeof msg === 'string' ? msg : msg());\n  }\n}\n\nexport class ArrayUtil {\n  /**\n   * Verifies if 2 input arrays contain the same elements.\n   * @param n1 Array 1\n   * @param n2 Array 2\n   * @returns Whether these 2 are equal\n   */\n  static arraysEqual(\n      n1: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array,\n      n2: readonly number[]|Int8Array|Uint8Array|Int16Array|Uint16Array|Int32Array|Uint32Array|Uint8ClampedArray|\n      Float32Array|Float64Array) {\n    if (n1.length !== n2.length) {\n      return false;\n    }\n    for (let i = 0; i < n1.length; i++) {\n      if (n1[i] !== n2[i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n}\n\nexport class MatMulUtil {\n  /**\n   * Fix the input shapes for MatMul operation if they need fixing\n   * @param dimsA The shape of tensor A. Should be an array of positive integers\n   * @param dimsB The shape of tensor B. Should be an array of positive integers\n   * @returns A tuple containing the preprocessed input shapes as required by ONNX specifications\n   */\n  static preprocessInputShapes(dimsA: readonly number[], dimsB: readonly number[]):\n      [readonly number[], readonly number[]] {\n    // If the first argument is 1-D, it is promoted to a matrix by prepending\n    // a 1 to its dimensions. After matrix multiplication the prepended 1 is\n    // removed.\n    const a = (dimsA.length === 1) ? [1, dimsA[0]] : dimsA;\n\n    // If the second argument is 1-D, it is promoted to a matrix by appending\n    // a 1 to its dimensions. After matrix multiplication the appended 1 is\n    // removed.\n    const b = (dimsB.length === 1) ? [dimsB[0], 1] : dimsB;\n\n    return [a, b];\n  }\n\n  /**\n   * Fix the output shape computed for MatMul operation if it needs fixing\n   * @param outputShape The computed outputShape. Should be an array (atleast of length 2) of positive integers.\n   * This will be mutated.\n   * @param aRank The rank of tensor A.\n   * @param bRank The rank of tensor B.\n   */\n  static postprocessOutputShape(outputShape: number[], aRank: number, bRank: number) {\n    // Remove prepended dimension if first input is 1d\n    if (aRank === 1) {\n      // outputShape = outputShape.slice(0, outputShape.length - 2).concat(outputShape.slice(outputShape.length - 1));\n      outputShape.splice(outputShape.length - 2, 1);\n    }\n    // Remove appended dimension if second input is 1d\n    if (bRank === 1) {\n      outputShape.pop();\n    }\n  }\n\n  /**\n   * Calculate the expected shape when matrix multiplication\n   * @param a The shape of tensor A. Should be a tuple of 2 positive integers\n   * @param b The shape of tensor B. Should be a tuple of 2 positive integers\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcMatMulShape(a: [number, number], b: [number, number]): [number, number]|undefined {\n    return (a[1] !== b[0]) ? undefined : [a[0], b[1]];\n  }\n}\n\nexport class BroadcastUtil {\n  /**\n   * Calculate the expected shape when broadcasting 2 tensors\n   * @param a The shape of tensor A. Should be an array of positive integers\n   * @param b The shape of tensor B. Should be an array of positive integers\n   * @param isMatMul Whether the operation is MatMul\n   * @returns The expected shape of the result, or undefined if N/A\n   */\n  static calcShape(adims: readonly number[], bdims: readonly number[], isMatMul = false): readonly number[]|undefined {\n    const arank = adims.length;\n    const brank = bdims.length;\n    if (arank === 0) {\n      return bdims;\n    }\n    if (brank === 0) {\n      return adims;\n    }\n    const crank = Math.max(adims.length, bdims.length);\n    const cdims = new Array<number>(crank);\n\n    // calculate the last 2 dimension if it is MatMul\n    if (isMatMul) {\n      if (arank < 2 || brank < 2) {\n        return undefined;\n      }\n      const cShapeMatMul =\n          MatMulUtil.calcMatMulShape([adims[arank - 2], adims[arank - 1]], [bdims[brank - 2], bdims[brank - 1]]);\n      if (cShapeMatMul === undefined) {\n        return undefined;\n      }\n      [cdims[crank - 2], cdims[crank - 1]] = cShapeMatMul;\n    }\n\n    for (let i = isMatMul ? 3 : 1; i <= crank; i++) {\n      const aLen = arank - i < 0 ? 1 : adims[arank - i];\n      const bLen = brank - i < 0 ? 1 : bdims[brank - i];\n\n      if (aLen !== bLen && aLen > 1 && bLen > 1) {\n        return undefined;\n      }\n      cdims[crank - i] = Math.max(aLen, bLen);\n    }\n\n    return cdims;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcas\n   * @returns The calculated indices that maps to the original tensor.\n   */\n  static index(broadcastedIndices: readonly number[], originalShape: readonly number[]): number[] {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same\n    // length as the broadcasted shape, and for each dimension the index should\n    // not be out of range.\n    const originalIndices = new Array(originalShape.length);\n    BroadcastUtil.fillIndex(broadcastedIndices, originalShape, originalIndices);\n    return originalIndices;\n  }\n\n  /**\n   * Given the indices of a broadcasted tensor, calculate the original indices\n   * @param broadcastedIndices The given indices of the broadcasted tensor.\n   * @param originalShape The original shape of the tensor before broadcast\n   * @param originalIndices The mapping of broadcastedIndices to the originalIndices (output parameter - will be\n   *     mutated).\n   */\n  static fillIndex(broadcastedIndices: readonly number[], originalShape: readonly number[], originalIndices: number[]) {\n    // NOTE 1: we assume the parameter broadcastedIndices is valid. ie. it should have the same length as the\n    // broadcasted shape, and for each dimension the index should not be out of range.\n    // NOTE 2: we assume the parameter originalIndices has the same length as the originalShape\n    const dimOffset = broadcastedIndices.length - originalShape.length;\n    for (let i = 0; i < originalShape.length; i++) {\n      originalIndices[i] = broadcastedIndices[dimOffset + i] % originalShape[i];\n    }\n  }\n\n  /**\n   * Perform the broadcasting operation on the specific operator\n   * @param a The input tensor A\n   * @param b The input tensor B\n   * @param op The operator lambda function\n   * @param inplace Whether to write the result back to A.\n   * @returns The result tensor, or undefined if input not broadcastable.\n   */\n  static calc(\n      a: Tensor, b: Tensor, op: (a: string|number, b: string|number) => (string | number), inplace: boolean,\n      resultType?: Tensor.DataType): Tensor|undefined {\n    const outputShape = BroadcastUtil.calcShape(a.dims, b.dims);\n\n    if (outputShape) {\n      if (inplace && !ShapeUtil.areEqual(outputShape, a.dims)) {\n        // B is not broadcastable to A, failed to calculate inplace.\n        return undefined;\n      }\n\n      const size = ShapeUtil.size(outputShape);\n      const c = inplace ? a : new Tensor(outputShape, resultType || a.type);\n\n      // both inputs are scalars\n      if (outputShape.length === 0) {\n        c.set([], op(a.get([]), b.get([])));\n      }\n\n      // atleast one input is a non-scalar\n      else {\n        const outputIndices = new Array<number>(outputShape.length);\n        const originalIndicesA = new Array(a.dims.length);\n        const originalIndicesB = new Array(b.dims.length);\n        let valA: string|number = 0;\n        let valB: string|number = 0;\n        let isAScalar = false;\n        let isBScalar = false;\n        if (a.dims.length === 0) {\n          valA = a.get([]);\n          isAScalar = true;\n        }\n        if (b.dims.length === 0) {\n          valB = b.get([]);\n          isBScalar = true;\n        }\n        let rest: number;\n        for (let i = 0; i < size; i++) {\n          // traversal indices\n          rest = i;\n          for (let j = outputShape.length - 1; j >= 0; j--) {\n            outputIndices[j] = rest % outputShape[j];\n            rest = Math.floor(rest / outputShape[j]);\n          }\n\n          if (!isAScalar) {\n            // map outputIndices (which is actually broadcasted) to the originalIndices\n            BroadcastUtil.fillIndex(outputIndices, a.dims, originalIndicesA);\n            valA = a.get(originalIndicesA);\n          }\n          if (!isBScalar) {\n            BroadcastUtil.fillIndex(outputIndices, b.dims, originalIndicesB);\n            valB = b.get(originalIndicesB);\n          }\n\n          c.set(outputIndices, op(valA, valB));\n        }\n      }\n\n      return c;\n    }\n\n    return undefined;\n  }\n\n  /**\n   * Determine if a shape is unidirectional broadcastable to another shape\n   * @param shape The input shape\n   * @param finalShape The desired shape after broadcasting\n   */\n  static isValidBroadcast(shape: readonly number[], finalShape: readonly number[]): boolean {\n    // align shape to the right\n    const inputRank = shape.length;\n    const finalRank = finalShape.length;\n    if (inputRank > finalRank) {\n      return false;\n    }\n    for (let i = 1; i <= inputRank; i++) {\n      if (shape[inputRank - i] !== 1 && shape[inputRank - i] !== finalShape[finalRank - i]) {\n        return false;\n      }\n    }\n    return true;\n  }\n\n  /**\n   * Determine the broadcasted dims in input shape based on the given output shape.\n   * Note that this function only returns the broadcasted dims.\n   * @param inputShape The input shape\n   * @param outputShape The output shape\n   * @returns The broadcasted dims in input shape.\n   */\n  static getBroadcastDims(inputShape: readonly number[], outputShape: readonly number[]): number[] {\n    const inRank = inputShape.length;\n    const dims: number[] = [];\n    for (let i = 0; i < inRank; i++) {\n      const dim = inRank - 1 - i;\n      const a = inputShape[dim] || 1;\n      const b = outputShape[outputShape.length - 1 - i] || 1;\n      if (b > 1 && a === 1) {\n        dims.unshift(dim);\n      }\n    }\n    return dims;\n  }\n}\n\n// copy array helper\n// mimics memcpy as much as possible\nexport function arrayCopyHelper(\n    target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n    blockSize: number) {\n  if (sourceIndex < 0 || sourceIndex >= source.length) {\n    throw new Error('sourceIndex out of bounds');\n  }\n  if (targetIndex < 0 || targetIndex >= target.length) {\n    throw new Error('targetIndex out of bounds');\n  }\n  if (sourceIndex + blockSize > source.length) {\n    throw new Error('source indices to be copied are outside bounds');\n  }\n  if (targetIndex + blockSize > target.length) {\n    throw new Error('target array is too small to hold result');\n  }\n\n  for (let offset = 0; offset < blockSize; offset++) {\n    target[targetIndex + offset] = source[sourceIndex + offset];\n  }\n}\n\nexport class GemmUtil {\n  // will make sure input shapes are compatible for this op\n  // and return back the shape of the output in the form of a tuple\n  // will throw exception if the input shapes are not compatible\n  static getShapeOfGemmResult(\n      leftShape: readonly number[], transLeft: boolean, rightShape: readonly number[], transRight: boolean,\n      biasShape?: readonly number[]): readonly number[] {\n    if (leftShape.length !== 2 || rightShape.length !== 2) {\n      throw new Error('shape need to be of size 2');\n    }\n\n    let M: number;\n    let K: number;\n    let N: number;\n\n    if (transLeft) {\n      M = leftShape[1];\n      K = leftShape[0];\n    } else {\n      M = leftShape[0];\n      K = leftShape[1];\n    }\n\n    let kDim = -1;\n\n    if (transRight) {\n      N = rightShape[0];\n      kDim = 1;\n    } else {\n      N = rightShape[1];\n      kDim = 0;\n    }\n\n    if (rightShape[kDim] !== K) {\n      throw new Error('dimension mismatch');\n    }\n\n    if (M <= 0 || N <= 0 || K <= 0) {\n      throw new Error('invalid shape specified');\n    }\n\n    if (biasShape && !BroadcastUtil.isValidBroadcast(biasShape, [M, N])) {\n      throw new Error('gemm: invalid bias shape for broadcast');\n    }\n\n    return [M, N, K];\n  }\n}\n\nexport class ProtoUtil {\n  static tensorDataTypeFromProto(typeProto: onnx.TensorProto.DataType|\n                                 onnxruntime.experimental.fbs.TensorDataType): Tensor.DataType {\n    switch (typeProto) {\n      case onnx.TensorProto.DataType.INT8:\n        return 'int8';\n      case onnx.TensorProto.DataType.UINT8:\n        return 'uint8';\n      case onnx.TensorProto.DataType.BOOL:\n        return 'bool';\n      case onnx.TensorProto.DataType.INT16:\n        return 'int16';\n      case onnx.TensorProto.DataType.UINT16:\n        return 'uint16';\n      case onnx.TensorProto.DataType.INT32:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT32:\n        return 'uint32';\n      case onnx.TensorProto.DataType.FLOAT:\n        return 'float32';\n      case onnx.TensorProto.DataType.DOUBLE:\n        return 'float64';\n      case onnx.TensorProto.DataType.STRING:\n        return 'string';\n\n      // For INT64/UINT64, reduce their value to 32-bits.\n      // Should throw exception when overflow\n      case onnx.TensorProto.DataType.INT64:\n        return 'int32';\n      case onnx.TensorProto.DataType.UINT64:\n        return 'uint32';\n\n      default:\n        throw new Error(`unsupported data type: ${onnx.TensorProto.DataType[typeProto]}`);\n    }\n  }\n\n  static tensorDataTypeStringToEnum(type: string): onnx.TensorProto.DataType {\n    switch (type) {\n      case 'int8':\n        return onnx.TensorProto.DataType.INT8;\n      case 'uint8':\n        return onnx.TensorProto.DataType.UINT8;\n      case 'bool':\n        return onnx.TensorProto.DataType.BOOL;\n      case 'int16':\n        return onnx.TensorProto.DataType.INT16;\n      case 'uint16':\n        return onnx.TensorProto.DataType.UINT16;\n      case 'int32':\n        return onnx.TensorProto.DataType.INT32;\n      case 'uint32':\n        return onnx.TensorProto.DataType.UINT32;\n      case 'float32':\n        return onnx.TensorProto.DataType.FLOAT;\n      case 'float64':\n        return onnx.TensorProto.DataType.DOUBLE;\n      case 'string':\n        return onnx.TensorProto.DataType.STRING;\n      case 'int64':\n        return onnx.TensorProto.DataType.INT64;\n      case 'uint64':\n        return onnx.TensorProto.DataType.UINT64;\n\n      default:\n        throw new Error(`unsupported data type: ${type}`);\n    }\n  }\n\n  static tensorDimsFromProto(dims: Array<number|Long>): number[] {\n    // get rid of Long type for dims\n    return dims.map(d => Long.isLong(d) ? d.toNumber() : d);\n  }\n\n  static tensorValueTypeFromProto(valueType: onnx.TypeProto.ITensor): Graph.ValueType {\n    return {\n      tensorType: ProtoUtil.tensorDataTypeFromProto(valueType.elemType!),\n      shape: {dims: ProtoUtil.tensorDimsFromProto(valueType.shape!.dim!.map(d => d.dimValue!))}\n    };\n  }\n\n  static tensorDimsFromORTFormat(tensor: onnxruntime.experimental.fbs.Tensor) {\n    const dims = [];\n    for (let i = 0; i < tensor.dimsLength(); i++) {\n      dims.push(LongUtil.longToNumber(tensor.dims(i)!));\n    }\n    return dims;\n  }\n\n  static tensorAttributesFromORTFormat(node: onnxruntime.experimental.fbs.Node) {\n    const attributes = [];\n    for (let i = 0; i < node.attributesLength(); i++) {\n      attributes.push(node.attributes(i)!);\n    }\n    return attributes;\n  }\n}\n\nexport class LongUtil {\n  static longToNumber(n: Long|flatbuffers.Long|number) {\n    if (Long.isLong(n)) {\n      return n.toNumber();\n    } else if (n instanceof flatbuffers.Long) {\n      return Long.fromValue({low: n.low, high: n.high, unsigned: true}).toNumber();\n    }\n    return n;\n  }\n  static isLong(n: unknown) {\n    return Long.isLong(n) || n instanceof flatbuffers.Long;\n  }\n}\n\nexport class ShapeUtil {\n  static size(dims: readonly number[]): number {\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, dims.length);\n  }\n\n  // `axis` inclusive\n  static sizeFromDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeFromDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, axis, dims.length);\n  }\n\n  // `axis` exclusive\n  static sizeToDimension(dims: readonly number[], axis: number): number {\n    if (axis < 0 || axis > dims.length) {\n      throw new Error(`invalid dimension of ${axis} for sizeToDimension as Tensor has ${dims.length} dimensions.`);\n    }\n    return ShapeUtil.getSizeFromDimensionRange(dims, 0, axis);\n  }\n\n  static getSizeFromDimensionRange(dims: readonly number[], start: number, end: number): number {\n    let size = 1;\n    for (let i = start; i < end; i++) {\n      // safety check as this method is called by multiple other methods requiring size.\n      // size cannot be 0 or negative.\n      if (dims[i] <= 0) {\n        throw new Error(\n            // eslint-disable-next-line max-len\n            'cannot get valid size from specified dimension range. Most likely the range contains 0 or negative values in them.');\n      }\n      size *= dims[i];\n    }\n    return size;\n  }\n\n  static computeStrides(dims: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [1];\n    }\n    const strides = new Array(rank);\n    strides[rank - 1] = 1;\n    strides[rank - 2] = dims[rank - 1];\n    for (let i = rank - 3; i >= 0; --i) {\n      strides[i] = strides[i + 1] * dims[i + 1];\n    }\n    return strides;\n  }\n\n  static transpose(dims: readonly number[]): readonly number[] {\n    const copy = dims.slice();\n    return copy.reverse();\n  }\n\n  static indicesToOffset(indices: readonly number[], strides: readonly number[], axis?: number): number {\n    if (axis === undefined) {\n      axis = indices.length;\n    }\n    let offset = 0;\n    for (let i = 0; i < axis; ++i) {\n      offset += strides[i] * indices[i];\n    }\n    return offset;\n  }\n\n  static offsetToIndices(offset: number, strides: readonly number[]): readonly number[] {\n    const rank = strides.length;\n    if (rank === 0) {\n      return [];\n    } else if (rank === 1) {\n      return [offset * strides[0]];\n    }\n    const indices: number[] = new Array(strides.length);\n    for (let i = 0; i < indices.length - 1; ++i) {\n      indices[i] = Math.floor(offset / strides[i]);\n      offset -= indices[i] * strides[i];\n    }\n    indices[indices.length - 1] = offset;\n    return indices;\n  }\n\n  /**\n   * normailze axis of range [-r, r) into [0, r).\n   */\n  static normalizeAxis(axis: number, tensorRank: number): number {\n    if (axis < -tensorRank && axis >= tensorRank) {\n      throw new Error('unsupported axis for this operation.');\n    }\n    return axis < 0 ? axis + tensorRank : axis;\n  }\n\n  static normalizeAxes(axes: readonly number[], tensorRank: number): number[] {\n    return axes.map(x => this.normalizeAxis(x, tensorRank));\n  }\n\n  // Increment an index into a tensor (in lexicographic\n  // ordering), wrapping around the specified upper_bound.\n  /**\n   * Increment an index into a tensor (in lexicographic ordering), wrapping around the specified upper_bound.\n   * @param index Given index to increment (Will be mutated)\n   * @param dims The dimensions of the tensor for which the given index corresponds to\n   * @param axisToIncrementOn The 1-indexed axis to increment on. If undefined, axisToIncrementOn == rank\n   */\n  static incrementIndex(index: number[], dims: readonly number[], axisToIncrementOn?: number) {\n    if (dims.length === 0 || index.length === 0) {\n      throw new Error('Index incrementing unsupported for scalar Tensor');\n    }\n    if (axisToIncrementOn === undefined) {\n      axisToIncrementOn = dims.length;\n    } else {\n      if (axisToIncrementOn <= 0 || axisToIncrementOn > dims.length) {\n        throw new Error('Incorrect axis to increment on');\n      }\n    }\n\n    for (let k = axisToIncrementOn - 1; k >= 0; --k) {\n      index[k]++;\n      if (index[k] < dims[k]) {\n        break;\n      }\n      index[k] = 0;\n    }\n  }\n\n  /**\n   * Produces a new dimensions array based on the values in the 'originalDimensions' and 'shape' array\n   * Used in Reshape\n   * @param originalDims Original Shape array\n   * @param shapeHints array containing values to compute the new dimensions\n   * For example:\n   * originalDims = [2,2] and shapeHints = [0,-1] will return [2,2]\n   * originalDims = [2,2] and shapeHints = [4] will return [4]\n   * originalDims = [2,2] and shapeHints = [5] will throw an exception\n   * https://github.com/onnx/onnx/blob/master/docs/Operators.md#Reshape\n   */\n\n  static calculateReshapedDims(originalDims: readonly number[], shapeHints: ArrayLike<number>): number[] {\n    // reshape to a Scalar Tensor\n    if (shapeHints.length === 0) {\n      if (originalDims.length === 0 || ShapeUtil.size(originalDims) === 1) {\n        return [];\n      } else {\n        throw new Error('cannot reshape to a scalar Tensor');\n      }\n    }\n\n    const nDims = shapeHints.length;\n    const reshapedDims = new Array<number>(nDims);\n    let unknownDimension = -1;\n    let newTensorSize = 1;\n    for (let i = 0; i < nDims; i++) {\n      if (shapeHints[i] < -1) {\n        throw new Error('a dimension in shape hints cannot be less than -1');\n      }\n      if (shapeHints[i] === -1) {\n        if (unknownDimension !== -1) {\n          throw new Error('at most one dimension in shape hints can be -1');\n        }\n        unknownDimension = i;\n      } else {\n        if (shapeHints[i] === 0) {\n          if (i >= originalDims.length) {\n            throw new Error('the dimension with value zero exceeds the dimension size of the input tensor');\n          }\n          reshapedDims[i] = originalDims[i];\n        } else {\n          reshapedDims[i] = shapeHints[i];\n        }\n        newTensorSize *= reshapedDims[i];\n      }\n    }\n\n    const oldTensorSize = ShapeUtil.size(originalDims);\n    if (unknownDimension !== -1) {\n      if (oldTensorSize % newTensorSize !== 0) {\n        throw new Error(`the input tensor cannot be reshaped to the requested shape. Input shape: [${\n            originalDims}] Output shape: [${shapeHints}]`);\n      }\n      reshapedDims[unknownDimension] = oldTensorSize / newTensorSize;\n    }\n    // validate sizes from originalDims and reshapedDims match\n    else {\n      if (newTensorSize !== oldTensorSize) {\n        throw new Error('reshapedDims and originalDims don\\'t have matching sizes');\n      }\n    }\n    return reshapedDims;\n  }\n\n  /**\n   * Sorts a given array based on the indices in the Perm array\n   * Used in Transpose\n   * @param a Array to be sorted such as dims or strides\n   * @param perm Perm given; if null a will be reversed\n   */\n  static sortBasedOnPerm(a: readonly number[], perm?: readonly number[]): readonly number[] {\n    if (perm) {\n      return perm.map((v) => a[v]);\n    } else {\n      return a.slice().reverse();\n    }\n  }\n\n  /**\n   * Pads a given shape according to the padding values\n   * @param dims shape of the Tensor to be padded\n   * @param pad pad values\n   */\n  static padShape(dims: readonly number[], pad: readonly number[]): readonly number[] {\n    const rank = dims.length;\n    return dims.map((v, i) => v + pad[i] + pad[i + rank]);\n  }\n\n  /**\n   * Determines if the two shapes are identical\n   * @param shape1\n   * @param shape2\n   */\n  static areEqual(shape1: readonly number[], shape2: readonly number[]): boolean {\n    if (shape1.length !== shape2.length) {\n      return false;\n    }\n    return shape1.every((v, i) => v === shape2[i]);\n  }\n\n  /**\n   * Validates if the given `dims` or `shape` is valid in ONNX.js context and returns data size\n   * @param dims - input `dims` that needs to be checked\n   */\n  static validateDimsAndCalcSize(dims: readonly number[]): number {\n    if (dims.length > 6) {\n      throw new TypeError('Only rank 0 to 6 is supported for tensor shape.');\n    }\n    let size = 1;\n    for (const n of dims) {\n      if (!Number.isInteger(n)) {\n        throw new TypeError(`Invalid shape: ${n} is not an integer`);\n      }\n      if (n < 0 || n > 2147483647) {\n        throw new TypeError(`Invalid shape: length ${n} is not allowed`);\n      }\n      size *= n;\n    }\n    return size;\n  }\n\n  /**\n   * Determines the shape of output tensor y = flatten(x, axis)\n   * @param dims - shape of input tensor\n   * @param axis - flatten axis, in the range [-r, r]\n   */\n  static flattenShape(dims: readonly number[], axis: number): readonly number[] {\n    if (axis < 0) {\n      axis += dims.length;\n    }\n    const total = dims.reduce((x, y) => x * y, 1);\n    const right = dims.slice(axis).reduce((x, y) => x * y, 1);\n    const outputDims = [total / right, right];\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = squeeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - squeeze axes\n   */\n  static squeezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>();\n\n    // sanity check\n    axes = ShapeUtil.normalizeAxes(axes, dims.length);\n\n    for (let i = 0; i < dims.length; i++) {\n      const inSqueezeList = axes.indexOf(i) >= 0;\n      if (inSqueezeList && dims[i] !== 1) {\n        throw new Error('squeeze an axis of size different than 1');\n      }\n\n      if ((axes.length === 0 && dims[i] > 1) || (axes.length > 0 && !inSqueezeList)) {\n        outputDims.push(dims[i]);\n      }\n    }\n\n    return outputDims;\n  }\n\n  /**\n   * Determines the shape of output tensor y = unsqueeze(x, axes)\n   * @param dims - shape of input tensor\n   * @param axes - unsqueeze axes\n   */\n  static unsqueezeShape(dims: readonly number[], axes: readonly number[]): readonly number[] {\n    const outputDims = new Array<number>(dims.length + axes.length);\n\n    // initialize the array elements to 0\n    outputDims.fill(0);\n\n    // set all axes indices to 1 in outputDims and check for duplicates\n    for (let i = 0; i < axes.length; i++) {\n      const axis = ShapeUtil.normalizeAxis(axes[i], dims.length);\n      if (axis >= outputDims.length) {\n        throw new Error('\\'axes\\' has an out of range axis');\n      }\n      if (outputDims[axis] !== 0) {\n        throw new Error('\\'axes\\' has a duplicate axis');\n      }\n\n      outputDims[axis] = 1;\n    }\n\n    // fill in the zero entries of outputDims with the input tensor's shape\n    let inputDimsIterator = 0;\n    for (let i = 0; i < outputDims.length; i++) {\n      if (outputDims[i] === 0) {\n        outputDims[i] = dims[inputDimsIterator++];\n      }\n    }\n\n    // sanity check assertion. 'inputDimsIterator'\n    // should be equal to the length of 'dims'\n    if (inputDimsIterator !== dims.length) {\n      throw new Error('the unsqueezed dimension could not be established');\n    }\n\n    return outputDims;\n  }\n}\n\n// bunch of helper methods that do a variety of math operations\nexport class MathUtil {\n  // y = (x*x) + y\n  static sqr(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += Math.pow(source[sourceIndex + offset], 2);\n    }\n  }\n\n  // y = ax + y\n  static axpy(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, alpha: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] += (alpha * source[sourceIndex + offset]);\n    }\n  }\n\n  // y = pow(x, b)\n  static powx(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number, b: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = Math.pow(source[sourceIndex + offset], b);\n    }\n  }\n\n  // y = x * y\n  static mul(\n      target: number[]|Tensor.NumberType, source: number[]|Tensor.NumberType, targetIndex: number, sourceIndex: number,\n      blockSize: number) {\n    if (sourceIndex < 0 || sourceIndex >= source.length) {\n      throw new Error('sourceIndex out of bounds');\n    }\n    if (targetIndex < 0 || targetIndex >= target.length) {\n      throw new Error('targetIndex out of bounds');\n    }\n    if (sourceIndex + blockSize > source.length) {\n      throw new Error('source indices to be copied are outside bounds');\n    }\n    if (targetIndex + blockSize > target.length) {\n      throw new Error('target array is too small to hold result');\n    }\n\n    for (let offset = 0; offset < blockSize; offset++) {\n      target[targetIndex + offset] = (source[sourceIndex + offset] * target[targetIndex + offset]);\n    }\n  }\n}\n\nexport class SplitUtil {\n  /**\n   * Calculates new Shapes from existing one and the splits given along the axis provides\n   * @param dims Shape of the Tensor to be splitted into two or more Shapes\n   * @param axis The dimension along which the Tensor will be split\n   * @param splits Offsets for the start of each split\n   */\n  static splitShape(dims: readonly number[], axis: number, split: number[], numOutputs?: number):\n      [number[][], number[]] {\n    if (split.length === 0) {\n      if (!numOutputs) {\n        throw new Error('need to know number of outputs when the \\'split\\' attribute is not specified');\n      }\n      SplitUtil.determineSplit(dims[axis], numOutputs, split);\n    }\n\n    const shapes: number[][] = [];\n    const offsets = [0];\n    for (let i = 0; i < split.length; ++i) {\n      if (i !== 0) {\n        offsets.push(offsets[i - 1] + split[i - 1]);\n      }\n      const shape = dims.slice();\n      shape[axis] = split[i];\n      shapes.push(shape);\n    }\n    return [shapes, offsets];\n  }\n\n  static determineSplit(numElementsAlongAxis: number, numOutputs: number, split: number[]) {\n    // If 'split' is not specified by the user, we need to partition the number of elements equally among the outputs\n    if (numElementsAlongAxis % numOutputs !== 0) {\n      throw new Error('cannot split tensor to equal sized parts');\n    }\n    for (let i = 0; i < numOutputs; ++i) {\n      split.push(numElementsAlongAxis / numOutputs);\n    }\n  }\n}\n\nexport class ReduceUtil {\n  /**\n   * Perform reduce operations on the specific operator\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduce(\n      a: Tensor, axes: number[], keepdims: boolean, op1: (b: number) => number,\n      op2: (a: number, b: number) => number): Tensor {\n    const dims = a.dims.slice(0);\n    // if axes is not set, perform reduce on all axes\n    if (axes.length === 0) {\n      dims.forEach((d, ind) => axes.push(ind));\n    }\n    // get a temporary broadcastable output shape\n    const outputDims = ReduceUtil.calcReduceShape(dims, axes, true);\n\n    // loop through the output and calculate result one by one\n    const size = ShapeUtil.size(outputDims);\n    const y = new Tensor(outputDims, a.type);\n    const strides = ShapeUtil.computeStrides(outputDims);\n    const inputStrides = ShapeUtil.computeStrides(dims);\n    const indicesY = new Array(dims.length);\n    for (let i = 0; i < size; i++) {\n      const indices = ShapeUtil.offsetToIndices(i, strides);\n      // map index\n      BroadcastUtil.fillIndex(indices, dims, indicesY);\n      y.set(\n          indices,\n          ReduceUtil.calcReduceByAxis(\n              a.numberData, axes, dims, 0, ShapeUtil.indicesToOffset(indicesY, inputStrides), op1, op2));\n    }\n\n    if (keepdims) {\n      return y;\n    } else {\n      // keepdims == 0, calculate the expected shape\n      return new Tensor(\n          ReduceUtil.calcReduceShape(dims, axes, keepdims), y.type, undefined, undefined, y.data, y.dataId);\n    }\n  }\n\n  /**\n   * Perform reduce operations on the specific operator on specific axes\n   * @param a Input tensor data\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param dims The input dimension.\n   * @param curAxisInd Index in axes specifying the current dimension along\n   *      which the tensor will be reduced\n   * @param pos The current index of element to perform operation\n   * @param op1 The operation to be performed on each element in the tensor\n   * @param op2 The operation to be performed between elements in the tensor\n   */\n  static calcReduceByAxis(\n      input: Tensor.NumberType, axes: number[], dims: number[], curAxisInd: number, pos: number,\n      op1: (b: number) => number, op2: (a: number, b: number) => number): number {\n    let res = 0;\n    if (curAxisInd >= axes.length) {\n      return op1(input[pos]);\n    }\n    const axis = axes[curAxisInd];\n    const step = axis >= dims.length ? 1 : ShapeUtil.size(dims.slice(axis + 1));\n    for (let i = 0; i < dims[axis]; i++) {\n      res = i === 0 ? ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2) :\n                      op2(res, ReduceUtil.calcReduceByAxis(input, axes, dims, curAxisInd + 1, pos, op1, op2));\n      pos += step;\n    }\n    return res;\n  }\n\n  /**\n   * Calculate the expected shape of a reduce operation\n   * @param dims The input tensor dimension\n   * @param axes The dimensions along which the Tensor will be reduced\n   * @param keepdims If set to true, the axes which are reduced are left in the\n   *    result as dimensions with size one.\n   */\n  static calcReduceShape(dims: readonly number[], axes: readonly number[], keepDims: boolean): number[] {\n    const outputDims = dims.slice();\n    for (let i = 0; i < axes.length; i++) {\n      if (keepDims) {\n        outputDims[axes[i]] = 1;\n      } else {\n        outputDims[axes[i]] = 0;\n      }\n    }\n    return outputDims.filter(dim => dim !== 0);\n  }\n}\n\nexport class PoolConvUtil {\n  /**\n   * Adjust the kernel, strides, pads to correct rank. Set to default value if not present\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param strides Stride along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   */\n  static adjustPoolAttributes(\n      isGlobalOperator: boolean, inputDims: readonly number[], kernelShape: number[], strides: number[],\n      pads: number[]) {\n    if (!isGlobalOperator && kernelShape.length !== inputDims.length - 2) {\n      throw new Error('length of specified kernel shapes should be 2 less than length of input dimensions');\n    }\n\n    if (isGlobalOperator) {\n      // adjust kernel shape to cover the input dims\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        if (dim >= kernelShape.length) {\n          kernelShape.push(inputDims[dim + 2]);\n        } else {\n          kernelShape[dim] = inputDims[dim + 2];\n        }\n      }\n    }\n\n    // adjust strides length to match kernel shape length\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (dim < strides.length) {\n        if (strides[dim] < 0) {\n          throw new Error('strides should be greater than or equal to 1');\n        }\n      } else {\n        strides.push(1);\n      }\n    }\n\n    // adjust pads length to match 2 * kernel shape length\n    for (let dim = 0; dim < kernelShape.length * 2; dim++) {\n      if (dim < pads.length) {\n        if (pads[dim] < 0) {\n          throw new Error('pad should be greater than or equal to 1');\n        }\n      } else {\n        pads.push(0);\n      }\n    }\n\n    // sanity checks for values in kernel shapes and pads\n    for (let dim = 0; dim < kernelShape.length; dim++) {\n      if (kernelShape[dim] <= 0) {\n        throw new Error('kernel shapes need to be greater than 0');\n      }\n\n      if (pads[dim] >= kernelShape[dim] || pads[dim + kernelShape.length] >= kernelShape[dim]) {\n        throw new Error('pads should be smaller than kernel');\n      }\n    }\n  }\n\n  // adjust pad values based on 'autoPad' attribute\n  static adjustPadsBasedOnAutoPad(\n      inputDims: readonly number[], strides: readonly number[], dilations: readonly number[],\n      kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (!autoPad) {\n      return;\n    }\n\n    if (pads.length !== 2 * (inputDims.length - 2)) {\n      throw new Error('length of pads should be twice the length of data dimensions');\n    }\n\n    if (strides.length !== (inputDims.length - 2)) {\n      throw new Error('length of strides should be the length of data dimensions');\n    }\n\n    if (kernelShape.length !== (inputDims.length - 2)) {\n      throw new Error('length of kernel shapes should be the length of data dimensions');\n    }\n\n    for (let dim = 0; dim < inputDims.length - 2; dim++) {\n      PoolConvUtil.adjustPadAndReturnShape(\n          inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n          autoPad);\n    }\n  }\n\n  /**\n   * Calculate the output shape for Pool ops based on input attributes. (Should be used only for Pool ops)\n   * @param isGlobalOperator If true, perform global pooling.\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computePoolOutputShape(\n      isGlobalOperator: boolean, inputDims: readonly number[], strides: number[], kernelShape: number[], pads: number[],\n      autoPad?: string): number[] {\n    if (inputDims.length <= 0) {\n      throw new Error('input shape must be of size greater than 0');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], inputDims[1]];\n\n    // TODO: support dilations for pool operators\n    const dilations = new Array<number>(kernelShape.length).fill(1);\n\n    PoolConvUtil.computeShapeHelper(\n        isGlobalOperator, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  /**\n   * Calculate the output shape for Conv op based on input attributes. (Should be used only for Conv op)\n   * @param inputDims The input tensor dimension. (inputs[0].dims)\n   * @param filterDims The filter tensor dimension. (inputs[1].dims)\n   * @param strides Stride along each axis.\n   * @param kernelShape The size of the kernel along each axis.\n   * @param pads Padding for the beginning and ending along each axis.\n   * @param autoPad DEPRECATED attribute supported for legacy models. Specifies how to implicitly calculate pads in each\n   *     dimension. Can take values NOTSET, SAME_UPPER, SAME_LOWER, or VALID.\n   */\n  static computeConvOutputShape(\n      inputDims: readonly number[], filterDims: readonly number[], strides: number[], dilations: number[],\n      kernelShape: number[], pads: number[], autoPad?: string): number[] {\n    if (inputDims.length <= 0 || filterDims.length <= 0) {\n      throw new Error('invalid input tensor dims or invalid filter tensor dims');\n    }\n\n    // Add batch size and number of channels of output\n    const outputDims = [inputDims[0], filterDims[0]];\n\n    PoolConvUtil.computeShapeHelper(false, inputDims, outputDims, strides, dilations, kernelShape, pads, autoPad);\n    return outputDims;\n  }\n\n  // will compute output shapes for data dimensions ONLY (i.e.) no batch size and channels\n  // called by computePoolOutputShape() and computeConvOutputShape()\n  // adjust pads based on 'autoPad' attribute prior to shape computation\n  private static computeShapeHelper(\n      isGlobalOperator: boolean, inputDims: readonly number[], outputDims: number[], strides: readonly number[],\n      dilations: readonly number[], kernelShape: readonly number[], pads: number[], autoPad?: string) {\n    if (isGlobalOperator) {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(1);\n      }\n    } else {\n      for (let dim = 0; dim < inputDims.length - 2; dim++) {\n        outputDims.push(PoolConvUtil.adjustPadAndReturnShape(\n            inputDims[dim + 2], strides[dim], dilations[dim], kernelShape[dim], pads, dim, dim + inputDims.length - 2,\n            autoPad));\n      }\n    }\n  }\n\n  // helper for computeShapeHelper() and adjustPadsBasedOnAutoPad()\n  // adjusts pad value for given 'autoPad' string and computes output shape along a particular dimension\n  private static adjustPadAndReturnShape(\n      inSize: number, stride: number, dilation: number, kernel: number, pads: number[], padHeadIndex: number,\n      padTailIndex: number, autoPad?: string): number {\n    const dkernel = dilation * (kernel - 1) + 1;\n    if (autoPad && autoPad !== 'NOTSET') {\n      switch (autoPad) {\n        case 'VALID':\n          pads[padHeadIndex] = 0;\n          pads[padTailIndex] = 0;\n          return Math.floor(((inSize - dkernel) / stride) + 1);\n        case 'SAME_LOWER':\n        case 'SAME_UPPER':\n          if (dilation !== 1) {\n            throw new Error('Dilation not supported for SAME_UPPER or SAME_LOWER');\n          } else {\n            const legacyTargetSize = (inSize + stride - 1) / stride;\n            const padNeeded = (legacyTargetSize - 1) * stride + kernel - inSize;\n            pads[padHeadIndex] =\n                (autoPad === 'SAME_LOWER') ? Math.floor((padNeeded + 1) / 2) : Math.floor(padNeeded / 2);\n            pads[padTailIndex] = padNeeded - pads[padHeadIndex];\n            return Math.floor(((inSize + padNeeded - kernel) / stride) + 1);\n          }\n        default:\n          throw new Error('Unsupported AutoPad type');\n      }\n    } else {\n      return Math.floor(((inSize + pads[padHeadIndex] + pads[padTailIndex] - dkernel) / stride) + 1);\n    }\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\ninterface ExtraOptionsHandler {\n  (name: string, value: string): void;\n}\n\nexport const iterateExtraOptions =\n    (options: Record<string, unknown>, prefix: string, seen: WeakSet<Record<string, unknown>>,\n     handler: ExtraOptionsHandler): void => {\n      if (typeof options == 'object' && options !== null) {\n        if (seen.has(options)) {\n          throw new Error('Circular reference in options');\n        } else {\n          seen.add(options);\n        }\n      }\n\n      Object.entries(options).forEach(([key, value]) => {\n        const name = (prefix) ? prefix + key : key;\n        if (typeof value === 'object') {\n          iterateExtraOptions(value as Record<string, unknown>, name + '.', seen, handler);\n        } else if (typeof value === 'string' || typeof value === 'number') {\n          handler(name, value.toString());\n        } else if (typeof value === 'boolean') {\n          handler(name, (value) ? '1' : '0');\n        } else {\n          throw new Error(`Can't handle extra config type: ${typeof value}`);\n        }\n      });\n    };\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession} from 'onnxruntime-common';\nimport {OrtWasmMessage, SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport * as core from './wasm-core-impl';\nimport {initializeWebAssembly} from './wasm-factory';\n\nconst isProxy = (): boolean => !!env.wasm.proxy && typeof document !== 'undefined';\nlet proxyWorker: Worker|undefined;\nlet initializing = false;\nlet initialized = false;\nlet aborted = false;\n\n// resolve; reject\ntype PromiseCallbacks<T = void> = [(result: T) => void, (reason: unknown) => void];\n\nlet initWasmCallbacks: PromiseCallbacks;\nlet initOrtCallbacks: PromiseCallbacks;\nconst createSessionCallbacks: Array<PromiseCallbacks<SerializableSessionMetadata>> = [];\nconst releaseSessionCallbacks: Array<PromiseCallbacks<void>> = [];\nconst runCallbacks: Array<PromiseCallbacks<SerializableTensor[]>> = [];\nconst endProfilingCallbacks: Array<PromiseCallbacks<void>> = [];\n\nconst ensureWorker = (): void => {\n  if (initializing || !initialized || aborted || !proxyWorker) {\n    throw new Error('worker not ready');\n  }\n};\n\nconst onProxyWorkerMessage = (ev: MessageEvent<OrtWasmMessage>): void => {\n  switch (ev.data.type) {\n    case 'init-wasm':\n      initializing = false;\n      if (ev.data.err) {\n        aborted = true;\n        initWasmCallbacks[1](ev.data.err);\n      } else {\n        initialized = true;\n        initWasmCallbacks[0]();\n      }\n      break;\n    case 'init-ort':\n      if (ev.data.err) {\n        initOrtCallbacks[1](ev.data.err);\n      } else {\n        initOrtCallbacks[0]();\n      }\n      break;\n    case 'create':\n      if (ev.data.err) {\n        createSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        createSessionCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'release':\n      if (ev.data.err) {\n        releaseSessionCallbacks.shift()![1](ev.data.err);\n      } else {\n        releaseSessionCallbacks.shift()![0]();\n      }\n      break;\n    case 'run':\n      if (ev.data.err) {\n        runCallbacks.shift()![1](ev.data.err);\n      } else {\n        runCallbacks.shift()![0](ev.data.out!);\n      }\n      break;\n    case 'end-profiling':\n      if (ev.data.err) {\n        endProfilingCallbacks.shift()![1](ev.data.err);\n      } else {\n        endProfilingCallbacks.shift()![0]();\n      }\n      break;\n    default:\n  }\n};\n\nconst scriptSrc = typeof document !== 'undefined' ? (document?.currentScript as HTMLScriptElement)?.src : undefined;\n\nexport const initWasm = async(): Promise<void> => {\n  if (isProxy()) {\n    if (initialized) {\n      return;\n    }\n    if (initializing) {\n      throw new Error('multiple calls to \\'initWasm()\\' detected.');\n    }\n    if (aborted) {\n      throw new Error('previous call to \\'initWasm()\\' failed.');\n    }\n\n    initializing = true;\n\n    // overwrite wasm filepaths\n    if (env.wasm.wasmPaths === undefined) {\n      if (scriptSrc && scriptSrc.indexOf('blob:') !== 0) {\n        env.wasm.wasmPaths = scriptSrc.substr(0, (scriptSrc as string).lastIndexOf('/') + 1);\n      }\n    }\n\n    return new Promise<void>((resolve, reject) => {\n      proxyWorker?.terminate();\n      // eslint-disable-next-line @typescript-eslint/no-var-requires, @typescript-eslint/no-require-imports\n      proxyWorker = require('worker-loader?inline=no-fallback!./proxy-worker/main').default() as Worker;\n      proxyWorker.onmessage = onProxyWorkerMessage;\n      initWasmCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-wasm', in : env.wasm};\n      proxyWorker.postMessage(message);\n    });\n\n  } else {\n    return initializeWebAssembly(env.wasm);\n  }\n};\n\nexport const initOrt = async(numThreads: number, loggingLevel: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      initOrtCallbacks = [resolve, reject];\n      const message: OrtWasmMessage = {type: 'init-ort', in : {numThreads, loggingLevel}};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.initOrt(numThreads, loggingLevel);\n  }\n};\n\nexport const createSession =\n    async(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<SerializableSessionMetadata> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableSessionMetadata>((resolve, reject) => {\n      createSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'create', in : {model, options}};\n      proxyWorker!.postMessage(message, [model.buffer]);\n    });\n  } else {\n    return core.createSession(model, options);\n  }\n};\n\nexport const releaseSession = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      releaseSessionCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'release', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.releaseSession(sessionId);\n  }\n};\n\nexport const run = async(\n    sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n    options: InferenceSession.RunOptions): Promise<SerializableTensor[]> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<SerializableTensor[]>((resolve, reject) => {\n      runCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'run', in : {sessionId, inputIndices, inputs, outputIndices, options}};\n      proxyWorker!.postMessage(message, core.extractTransferableBuffers(inputs));\n    });\n  } else {\n    return core.run(sessionId, inputIndices, inputs, outputIndices, options);\n  }\n};\n\nexport const endProfiling = async(sessionId: number): Promise<void> => {\n  if (isProxy()) {\n    ensureWorker();\n    return new Promise<void>((resolve, reject) => {\n      endProfilingCallbacks.push([resolve, reject]);\n      const message: OrtWasmMessage = {type: 'end-profiling', in : sessionId};\n      proxyWorker!.postMessage(message);\n    });\n  } else {\n    core.endProfiling(sessionId);\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nexport const setRunOptions = (options: InferenceSession.RunOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let runOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const runOptions: InferenceSession.RunOptions = options || {};\n\n  try {\n    if (options?.logSeverityLevel === undefined) {\n      runOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      runOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.terminate === undefined) {\n      runOptions.terminate = false;\n    }\n\n    let tagDataOffset = 0;\n    if (options?.tag !== undefined) {\n      tagDataOffset = allocWasmString(options.tag, allocs);\n    }\n\n    runOptionsHandle = wasm._OrtCreateRunOptions(\n        runOptions.logSeverityLevel!, runOptions.logVerbosityLevel!, !!runOptions.terminate!, tagDataOffset);\n    if (runOptionsHandle === 0) {\n      throw new Error('Can\\'t create run options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddRunConfigEntry(runOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a run config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    return [runOptionsHandle, allocs];\n  } catch (e) {\n    if (runOptionsHandle !== 0) {\n      wasm._OrtReleaseRunOptions(runOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {env, InferenceSession, SessionHandler, Tensor} from 'onnxruntime-common';\n\nimport {createSession, endProfiling, initOrt, releaseSession, run} from './proxy-wrapper';\n\nlet ortInit: boolean;\n\n\nconst getLogLevel = (logLevel: 'verbose'|'info'|'warning'|'error'|'fatal'): number => {\n  switch (logLevel) {\n    case 'verbose':\n      return 0;\n    case 'info':\n      return 1;\n    case 'warning':\n      return 2;\n    case 'error':\n      return 3;\n    case 'fatal':\n      return 4;\n    default:\n      throw new Error(`unsupported logging level: ${logLevel}`);\n  }\n};\n\nexport class OnnxruntimeWebAssemblySessionHandler implements SessionHandler {\n  private sessionId: number;\n\n  inputNames: string[];\n  outputNames: string[];\n\n  async loadModel(model: Uint8Array, options?: InferenceSession.SessionOptions): Promise<void> {\n    if (!ortInit) {\n      await initOrt(env.wasm.numThreads!, getLogLevel(env.logLevel!));\n      ortInit = true;\n    }\n\n    [this.sessionId, this.inputNames, this.outputNames] = await createSession(model, options);\n  }\n\n  async dispose(): Promise<void> {\n    return releaseSession(this.sessionId);\n  }\n\n  async run(feeds: SessionHandler.FeedsType, fetches: SessionHandler.FetchesType, options: InferenceSession.RunOptions):\n      Promise<SessionHandler.ReturnType> {\n    const inputArray: Tensor[] = [];\n    const inputIndices: number[] = [];\n    Object.entries(feeds).forEach(kvp => {\n      const name = kvp[0];\n      const tensor = kvp[1];\n      const index = this.inputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid input '${name}'`);\n      }\n      inputArray.push(tensor);\n      inputIndices.push(index);\n    });\n\n    const outputIndices: number[] = [];\n    Object.entries(fetches).forEach(kvp => {\n      const name = kvp[0];\n      // TODO: support pre-allocated output\n      const index = this.outputNames.indexOf(name);\n      if (index === -1) {\n        throw new Error(`invalid output '${name}'`);\n      }\n      outputIndices.push(index);\n    });\n\n    const outputs =\n        await run(this.sessionId, inputIndices, inputArray.map(t => [t.type, t.dims, t.data]), outputIndices, options);\n\n    const result: SessionHandler.ReturnType = {};\n    for (let i = 0; i < outputs.length; i++) {\n      result[this.outputNames[outputIndices[i]]] = new Tensor(outputs[i][0], outputs[i][2], outputs[i][1]);\n    }\n    return result;\n  }\n\n  startProfiling(): void {\n    // TODO: implement profiling\n  }\n\n  endProfiling(): void {\n    void endProfiling(this.sessionId);\n  }\n}\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession} from 'onnxruntime-common';\n\nimport {iterateExtraOptions} from './options-utils';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\nconst getGraphOptimzationLevel = (graphOptimizationLevel: string|unknown): number => {\n  switch (graphOptimizationLevel) {\n    case 'disabled':\n      return 0;\n    case 'basic':\n      return 1;\n    case 'extended':\n      return 2;\n    case 'all':\n      return 99;\n    default:\n      throw new Error(`unsupported graph optimization level: ${graphOptimizationLevel}`);\n  }\n};\n\nconst getExecutionMode = (executionMode: 'sequential'|'parallel'): number => {\n  switch (executionMode) {\n    case 'sequential':\n      return 0;\n    case 'parallel':\n      return 1;\n    default:\n      throw new Error(`unsupported execution mode: ${executionMode}`);\n  }\n};\n\nconst appendDefaultOptions = (options: InferenceSession.SessionOptions): void => {\n  if (!options.extra) {\n    options.extra = {};\n  }\n  if (!options.extra.session) {\n    options.extra.session = {};\n  }\n  const session = options.extra.session as Record<string, string>;\n  if (!session.use_ort_model_bytes_directly) {\n    // eslint-disable-next-line camelcase\n    session.use_ort_model_bytes_directly = '1';\n  }\n};\n\nexport const setSessionOptions = (options?: InferenceSession.SessionOptions): [number, number[]] => {\n  const wasm = getInstance();\n  let sessionOptionsHandle = 0;\n  const allocs: number[] = [];\n\n  const sessionOptions: InferenceSession.SessionOptions = options || {};\n  appendDefaultOptions(sessionOptions);\n\n  try {\n    if (options?.graphOptimizationLevel === undefined) {\n      sessionOptions.graphOptimizationLevel = 'all';\n    }\n    const graphOptimizationLevel = getGraphOptimzationLevel(sessionOptions.graphOptimizationLevel!);\n\n    if (options?.enableCpuMemArena === undefined) {\n      sessionOptions.enableCpuMemArena = true;\n    }\n\n    if (options?.enableMemPattern === undefined) {\n      sessionOptions.enableMemPattern = true;\n    }\n\n    if (options?.executionMode === undefined) {\n      sessionOptions.executionMode = 'sequential';\n    }\n    const executionMode = getExecutionMode(sessionOptions.executionMode!);\n\n    let logIdDataOffset = 0;\n    if (options?.logId !== undefined) {\n      logIdDataOffset = allocWasmString(options.logId, allocs);\n    }\n\n    if (options?.logSeverityLevel === undefined) {\n      sessionOptions.logSeverityLevel = 2;  // Default to warning\n    } else if (\n        typeof options.logSeverityLevel !== 'number' || !Number.isInteger(options.logSeverityLevel) ||\n        options.logSeverityLevel < 0 || options.logSeverityLevel > 4) {\n      throw new Error(`log serverity level is not valid: ${options.logSeverityLevel}`);\n    }\n\n    if (options?.logVerbosityLevel === undefined) {\n      sessionOptions.logVerbosityLevel = 0;  // Default to 0\n    } else if (typeof options.logVerbosityLevel !== 'number' || !Number.isInteger(options.logVerbosityLevel)) {\n      throw new Error(`log verbosity level is not valid: ${options.logVerbosityLevel}`);\n    }\n\n    if (options?.enableProfiling === undefined) {\n      sessionOptions.enableProfiling = false;\n    }\n\n    sessionOptionsHandle = wasm._OrtCreateSessionOptions(\n        graphOptimizationLevel, !!sessionOptions.enableCpuMemArena!, !!sessionOptions.enableMemPattern!, executionMode,\n        !!sessionOptions.enableProfiling!, 0, logIdDataOffset, sessionOptions.logSeverityLevel!,\n        sessionOptions.logVerbosityLevel!);\n    if (sessionOptionsHandle === 0) {\n      throw new Error('Can\\'t create session options');\n    }\n\n    if (options?.extra !== undefined) {\n      iterateExtraOptions(options.extra, '', new WeakSet<Record<string, unknown>>(), (key, value) => {\n        const keyDataOffset = allocWasmString(key, allocs);\n        const valueDataOffset = allocWasmString(value, allocs);\n\n        if (wasm._OrtAddSessionConfigEntry(sessionOptionsHandle, keyDataOffset, valueDataOffset) !== 0) {\n          throw new Error(`Can't set a session config entry: ${key} - ${value}`);\n        }\n      });\n    }\n\n    if (options?.executionProviders) {\n      for (const ep of options.executionProviders) {\n        const name = typeof ep === 'string' ? ep : ep.name;\n        if (name === 'webnn') {\n          let devicePreference = 0;\n          if (typeof ep !== 'string') {\n            const webnnOptions = ep as InferenceSession.WebNNExecutionProviderOption;\n            if (webnnOptions?.devicePreference) {\n              devicePreference = webnnOptions.devicePreference;\n            }\n          }\n          console.log(`webnn device preference: ${devicePreference}`);\n          if (wasm._OrtSessionOptionsAppendExecutionProviderWebNN(sessionOptionsHandle, devicePreference) !== 0) {\n            throw new Error(`Can't append WebNN execution provider`);\n          }\n          break;\n        }\n      }\n    }\n\n    return [sessionOptionsHandle, allocs];\n  } catch (e) {\n    if (sessionOptionsHandle !== 0) {\n      wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n    }\n    allocs.forEach(wasm._free);\n    throw e;\n  }\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {getInstance} from './wasm-factory';\n\nexport const allocWasmString = (data: string, allocs: number[]): number => {\n  const wasm = getInstance();\n\n  const dataLength = wasm.lengthBytesUTF8(data) + 1;\n  const dataOffset = wasm._malloc(dataLength);\n  wasm.stringToUTF8(data, dataOffset, dataLength);\n  allocs.push(dataOffset);\n\n  return dataOffset;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {InferenceSession, Tensor} from 'onnxruntime-common';\nimport {SerializableSessionMetadata, SerializableTensor} from './proxy-messages';\nimport {setRunOptions} from './run-options';\nimport {setSessionOptions} from './session-options';\nimport {allocWasmString} from './string-utils';\nimport {getInstance} from './wasm-factory';\n\n/**\n * initialize ORT environment.\n * @param numThreads SetGlobalIntraOpNumThreads(numThreads)\n * @param loggingLevel CreateEnv(static_cast<OrtLoggingLevel>(logging_level))\n */\nexport const initOrt = (numThreads: number, loggingLevel: number): void => {\n  const errorCode = getInstance()._OrtInit(numThreads, loggingLevel);\n  if (errorCode !== 0) {\n    throw new Error(`Can't initialize onnxruntime. error code = ${errorCode}`);\n  }\n};\n\n/**\n *  tuple elements are: InferenceSession ID; inputNamesUTF8Encoded; outputNamesUTF8Encoded\n */\ntype SessionMetadata = [number, number[], number[]];\n\nconst activeSessions: Array<SessionMetadata|undefined> = [];\n\n/**\n * create an instance of InferenceSession.\n * @returns the metadata of InferenceSession. 0-value handle for failure.\n */\nexport const createSession =\n    (model: Uint8Array, options?: InferenceSession.SessionOptions): SerializableSessionMetadata => {\n      const wasm = getInstance();\n      const modelDataOffset = wasm._malloc(model.byteLength);\n      let sessionHandle = 0;\n      let sessionOptionsHandle = 0;\n      let allocs: number[] = [];\n\n      try {\n        [sessionOptionsHandle, allocs] = setSessionOptions(options);\n\n        wasm.HEAPU8.set(model, modelDataOffset);\n        sessionHandle = wasm._OrtCreateSession(modelDataOffset, model.byteLength, sessionOptionsHandle);\n        if (sessionHandle === 0) {\n          throw new Error('Can\\'t create a session');\n        }\n      } finally {\n        wasm._free(modelDataOffset);\n        wasm._OrtReleaseSessionOptions(sessionOptionsHandle);\n        allocs.forEach(wasm._free);\n      }\n\n      const inputCount = wasm._OrtGetInputCount(sessionHandle);\n      const outputCount = wasm._OrtGetOutputCount(sessionHandle);\n\n      const inputNames = [];\n      const inputNamesUTF8Encoded = [];\n      const outputNames = [];\n      const outputNamesUTF8Encoded = [];\n      for (let i = 0; i < inputCount; i++) {\n        const name = wasm._OrtGetInputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an input name');\n        }\n        inputNamesUTF8Encoded.push(name);\n        inputNames.push(wasm.UTF8ToString(name));\n      }\n      for (let i = 0; i < outputCount; i++) {\n        const name = wasm._OrtGetOutputName(sessionHandle, i);\n        if (name === 0) {\n          throw new Error('Can\\'t get an output name');\n        }\n        outputNamesUTF8Encoded.push(name);\n        outputNames.push(wasm.UTF8ToString(name));\n      }\n\n      activeSessions.push([sessionHandle, inputNamesUTF8Encoded, outputNamesUTF8Encoded]);\n      return [activeSessions.length - 1, inputNames, outputNames];\n    };\n\nexport const releaseSession = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n  const inputNamesUTF8Encoded = session[1];\n  const outputNamesUTF8Encoded = session[2];\n\n  inputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  outputNamesUTF8Encoded.forEach(wasm._OrtFree);\n  wasm._OrtReleaseSession(sessionHandle);\n  activeSessions[sessionId] = undefined;\n};\n\n/**\n * Copied from ONNX definition. Use this to drop dependency 'onnx_proto' to decrease compiled .js file size.\n */\nconst enum DataType {\n  undefined = 0,\n  float = 1,\n  uint8 = 2,\n  int8 = 3,\n  uint16 = 4,\n  int16 = 5,\n  int32 = 6,\n  int64 = 7,\n  string = 8,\n  bool = 9,\n  float16 = 10,\n  double = 11,\n  uint32 = 12,\n  uint64 = 13,\n  complex64 = 14,\n  complex128 = 15,\n  bfloat16 = 16\n}\n\n\nconst tensorDataTypeStringToEnum = (type: string): DataType => {\n  switch (type) {\n    case 'int8':\n      return DataType.int8;\n    case 'uint8':\n      return DataType.uint8;\n    case 'bool':\n      return DataType.bool;\n    case 'int16':\n      return DataType.int16;\n    case 'uint16':\n      return DataType.uint16;\n    case 'int32':\n      return DataType.int32;\n    case 'uint32':\n      return DataType.uint32;\n    case 'float32':\n      return DataType.float;\n    case 'float64':\n      return DataType.double;\n    case 'string':\n      return DataType.string;\n    case 'int64':\n      return DataType.int64;\n    case 'uint64':\n      return DataType.uint64;\n\n    default:\n      throw new Error(`unsupported data type: ${type}`);\n  }\n};\n\nconst tensorDataTypeEnumToString = (typeProto: DataType): Tensor.Type => {\n  switch (typeProto) {\n    case DataType.int8:\n      return 'int8';\n    case DataType.uint8:\n      return 'uint8';\n    case DataType.bool:\n      return 'bool';\n    case DataType.int16:\n      return 'int16';\n    case DataType.uint16:\n      return 'uint16';\n    case DataType.int32:\n      return 'int32';\n    case DataType.uint32:\n      return 'uint32';\n    case DataType.float:\n      return 'float32';\n    case DataType.double:\n      return 'float64';\n    case DataType.string:\n      return 'string';\n    case DataType.int64:\n      return 'int32';\n    case DataType.uint64:\n      return 'uint32';\n\n    default:\n      throw new Error(`unsupported data type: ${typeProto}`);\n  }\n};\n\nconst numericTensorTypeToTypedArray = (type: Tensor.Type): Float32ArrayConstructor|Uint8ArrayConstructor|\n    Int8ArrayConstructor|Uint16ArrayConstructor|Int16ArrayConstructor|Int32ArrayConstructor|BigInt64ArrayConstructor|\n    Uint8ArrayConstructor|Float64ArrayConstructor|Uint32ArrayConstructor|BigUint64ArrayConstructor => {\n      switch (type) {\n        case 'float32':\n          return Float32Array;\n        case 'uint8':\n          return Uint8Array;\n        case 'int8':\n          return Int8Array;\n        case 'uint16':\n          return Uint16Array;\n        case 'int16':\n          return Int16Array;\n        case 'int32':\n          return Int32Array;\n        case 'bool':\n          return Uint8Array;\n        case 'float64':\n          return Float64Array;\n        case 'uint32':\n          return Uint32Array;\n        case 'int64':\n          return BigInt64Array;\n        case 'uint64':\n          return BigUint64Array;\n        default:\n          throw new Error(`unsupported type: ${type}`);\n      }\n    };\n\n/**\n * perform inference run\n */\nexport const run =\n    (sessionId: number, inputIndices: number[], inputs: SerializableTensor[], outputIndices: number[],\n     options: InferenceSession.RunOptions): SerializableTensor[] => {\n      const wasm = getInstance();\n      const session = activeSessions[sessionId];\n      if (!session) {\n        throw new Error('invalid session id');\n      }\n      const sessionHandle = session[0];\n      const inputNamesUTF8Encoded = session[1];\n      const outputNamesUTF8Encoded = session[2];\n\n      const inputCount = inputIndices.length;\n      const outputCount = outputIndices.length;\n\n      let runOptionsHandle = 0;\n      let runOptionsAllocs: number[] = [];\n\n      const inputValues: number[] = [];\n      const inputAllocs: number[] = [];\n\n      try {\n        [runOptionsHandle, runOptionsAllocs] = setRunOptions(options);\n\n        // create input tensors\n        for (let i = 0; i < inputCount; i++) {\n          const dataType = inputs[i][0];\n          const dims = inputs[i][1];\n          const data = inputs[i][2];\n\n          let dataOffset: number;\n          let dataByteLength: number;\n\n          if (Array.isArray(data)) {\n            // string tensor\n            dataByteLength = 4 * data.length;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            let dataIndex = dataOffset / 4;\n            for (let i = 0; i < data.length; i++) {\n              if (typeof data[i] !== 'string') {\n                throw new TypeError(`tensor data at index ${i} is not a string`);\n              }\n              wasm.HEAPU32[dataIndex++] = allocWasmString(data[i], inputAllocs);\n            }\n          } else {\n            dataByteLength = data.byteLength;\n            dataOffset = wasm._malloc(dataByteLength);\n            inputAllocs.push(dataOffset);\n            wasm.HEAPU8.set(new Uint8Array(data.buffer, data.byteOffset, dataByteLength), dataOffset);\n          }\n\n          const stack = wasm.stackSave();\n          const dimsOffset = wasm.stackAlloc(4 * dims.length);\n          try {\n            let dimIndex = dimsOffset / 4;\n            dims.forEach(d => wasm.HEAP32[dimIndex++] = d);\n            const tensor = wasm._OrtCreateTensor(\n                tensorDataTypeStringToEnum(dataType), dataOffset, dataByteLength, dimsOffset, dims.length);\n            if (tensor === 0) {\n              throw new Error('Can\\'t create a tensor');\n            }\n            inputValues.push(tensor);\n          } finally {\n            wasm.stackRestore(stack);\n          }\n        }\n\n        const beforeRunStack = wasm.stackSave();\n        const inputValuesOffset = wasm.stackAlloc(inputCount * 4);\n        const inputNamesOffset = wasm.stackAlloc(inputCount * 4);\n        const outputValuesOffset = wasm.stackAlloc(outputCount * 4);\n        const outputNamesOffset = wasm.stackAlloc(outputCount * 4);\n\n        try {\n          let inputValuesIndex = inputValuesOffset / 4;\n          let inputNamesIndex = inputNamesOffset / 4;\n          let outputValuesIndex = outputValuesOffset / 4;\n          let outputNamesIndex = outputNamesOffset / 4;\n          for (let i = 0; i < inputCount; i++) {\n            wasm.HEAPU32[inputValuesIndex++] = inputValues[i];\n            wasm.HEAPU32[inputNamesIndex++] = inputNamesUTF8Encoded[inputIndices[i]];\n          }\n          for (let i = 0; i < outputCount; i++) {\n            wasm.HEAPU32[outputValuesIndex++] = 0;\n            wasm.HEAPU32[outputNamesIndex++] = outputNamesUTF8Encoded[outputIndices[i]];\n          }\n\n          // support RunOptions\n          let errorCode = wasm._OrtRun(\n              sessionHandle, inputNamesOffset, inputValuesOffset, inputCount, outputNamesOffset, outputCount,\n              outputValuesOffset, runOptionsHandle);\n\n          const output: SerializableTensor[] = [];\n\n          if (errorCode === 0) {\n            for (let i = 0; i < outputCount; i++) {\n              const tensor = wasm.HEAPU32[outputValuesOffset / 4 + i];\n\n              const beforeGetTensorDataStack = wasm.stackSave();\n              // stack allocate 4 pointer value\n              const tensorDataOffset = wasm.stackAlloc(4 * 4);\n\n              let type: Tensor.Type|undefined, dataOffset = 0;\n              try {\n                errorCode = wasm._OrtGetTensorData(\n                    tensor, tensorDataOffset, tensorDataOffset + 4, tensorDataOffset + 8, tensorDataOffset + 12);\n                if (errorCode !== 0) {\n                  throw new Error(`Can't get a tensor data. error code = ${errorCode}`);\n                }\n                let tensorDataIndex = tensorDataOffset / 4;\n                const dataType = wasm.HEAPU32[tensorDataIndex++];\n                dataOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsOffset = wasm.HEAPU32[tensorDataIndex++];\n                const dimsLength = wasm.HEAPU32[tensorDataIndex++];\n                const dims = [];\n                for (let i = 0; i < dimsLength; i++) {\n                  dims.push(wasm.HEAPU32[dimsOffset / 4 + i]);\n                }\n                wasm._OrtFree(dimsOffset);\n\n                const size = dims.length === 0 ? 1 : dims.reduce((a, b) => a * b);\n                type = tensorDataTypeEnumToString(dataType);\n                if (type === 'string') {\n                  const stringData: string[] = [];\n                  let dataIndex = dataOffset / 4;\n                  for (let i = 0; i < size; i++) {\n                    const offset = wasm.HEAPU32[dataIndex++];\n                    const maxBytesToRead = i === size - 1 ? undefined : wasm.HEAPU32[dataIndex] - offset;\n                    stringData.push(wasm.UTF8ToString(offset, maxBytesToRead));\n                  }\n                  output.push([type, dims, stringData]);\n                } else {\n                  const typedArrayConstructor = numericTensorTypeToTypedArray(type);\n                  const data = new typedArrayConstructor(size);\n                  new Uint8Array(data.buffer, data.byteOffset, data.byteLength)\n                      .set(wasm.HEAPU8.subarray(dataOffset, dataOffset + data.byteLength));\n                  output.push([type, dims, data]);\n                }\n              } finally {\n                wasm.stackRestore(beforeGetTensorDataStack);\n                if (type === 'string' && dataOffset) {\n                  wasm._free(dataOffset);\n                }\n                wasm._OrtReleaseTensor(tensor);\n              }\n            }\n          }\n\n          if (errorCode === 0) {\n            return output;\n          } else {\n            throw new Error(`failed to call OrtRun(). error code = ${errorCode}.`);\n          }\n        } finally {\n          wasm.stackRestore(beforeRunStack);\n        }\n      } finally {\n        inputValues.forEach(wasm._OrtReleaseTensor);\n        inputAllocs.forEach(wasm._free);\n\n        wasm._OrtReleaseRunOptions(runOptionsHandle);\n        runOptionsAllocs.forEach(wasm._free);\n      }\n    };\n\n/**\n * end profiling\n */\nexport const endProfiling = (sessionId: number): void => {\n  const wasm = getInstance();\n  const session = activeSessions[sessionId];\n  if (!session) {\n    throw new Error('invalid session id');\n  }\n  const sessionHandle = session[0];\n\n  // profile file name is not used yet, but it must be freed.\n  const profileFileName = wasm._OrtEndProfiling(sessionHandle);\n  if (profileFileName === 0) {\n    throw new Error('Can\\'t get an profile file name');\n  }\n  wasm._OrtFree(profileFileName);\n};\n\nexport const extractTransferableBuffers = (tensors: readonly SerializableTensor[]): ArrayBufferLike[] => {\n  const buffers: ArrayBufferLike[] = [];\n  for (const tensor of tensors) {\n    const data = tensor[2];\n    if (!Array.isArray(data) && data.buffer) {\n      buffers.push(data.buffer);\n    }\n  }\n  return buffers;\n};\n","// Copyright (c) Microsoft Corporation. All rights reserved.\n// Licensed under the MIT License.\n\nimport {Env} from 'onnxruntime-common';\nimport * as path from 'path';\n\nimport {OrtWasmModule} from './binding/ort-wasm';\nimport {OrtWasmThreadedModule} from './binding/ort-wasm-threaded';\nimport ortWasmFactoryThreaded from './binding/ort-wasm-threaded.js';\nimport ortWasmFactory from './binding/ort-wasm.js';\n\nlet wasm: OrtWasmModule|undefined;\nlet initialized = false;\nlet initializing = false;\nlet aborted = false;\n\nconst isMultiThreadSupported = (): boolean => {\n  try {\n    // If 'SharedArrayBuffer' is not available, WebAssembly threads will not work.\n    if (typeof SharedArrayBuffer === 'undefined') {\n      return false;\n    }\n\n    // Test for transferability of SABs (for browsers. needed for Firefox)\n    // https://groups.google.com/forum/#!msg/mozilla.dev.platform/IHkBZlHETpA/dwsMNchWEQAJ\n    if (typeof MessageChannel !== 'undefined') {\n      new MessageChannel().port1.postMessage(new SharedArrayBuffer(1));\n    }\n\n    // Test for WebAssembly threads capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing threaded instructions.\n    return WebAssembly.validate(new Uint8Array([\n      0, 97, 115, 109, 1, 0,  0,  0, 1, 4, 1,  96, 0,   0,  3, 2, 1,  0, 5,\n      4, 1,  3,   1,   1, 10, 11, 1, 9, 0, 65, 0,  254, 16, 2, 0, 26, 11\n    ]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst isSimdSupported = (): boolean => {\n  try {\n    // Test for WebAssembly SIMD capability (for both browsers and Node.js)\n    // This typed array is a WebAssembly program containing SIMD instructions.\n    return WebAssembly.validate(new Uint8Array(\n        [0, 97, 115, 109, 1, 0, 0, 0, 1, 4, 1, 96, 0, 0, 3, 2, 1, 0, 10, 9, 1, 7, 0, 65, 0, 253, 15, 26, 11]));\n  } catch (e) {\n    return false;\n  }\n};\n\nconst getWasmFileName = (useSimd: boolean, useThreads: boolean) => {\n  if (useThreads) {\n    return useSimd ? 'ort-wasm-simd-threaded.wasm' : 'ort-wasm-threaded.wasm';\n  } else {\n    return useSimd ? 'ort-wasm-simd.wasm' : 'ort-wasm.wasm';\n  }\n};\n\nexport const initializeWebAssembly = async(flags: Env.WebAssemblyFlags): Promise<void> => {\n  if (initialized) {\n    return Promise.resolve();\n  }\n  if (initializing) {\n    throw new Error('multiple calls to \\'initializeWebAssembly()\\' detected.');\n  }\n  if (aborted) {\n    throw new Error('previous call to \\'initializeWebAssembly()\\' failed.');\n  }\n\n  initializing = true;\n\n  // wasm flags are already initialized\n  const timeout = flags.initTimeout!;\n  const numThreads = flags.numThreads!;\n  const simd = flags.simd!;\n\n  const useThreads = numThreads > 1 && isMultiThreadSupported();\n  const useSimd = simd && isSimdSupported();\n\n  const wasmPrefixOverride = typeof flags.wasmPaths === 'string' ? flags.wasmPaths : undefined;\n  const wasmFileName = getWasmFileName(false, useThreads);\n  const wasmOverrideFileName = getWasmFileName(useSimd, useThreads);\n  const wasmPathOverride = typeof flags.wasmPaths === 'object' ? flags.wasmPaths[wasmOverrideFileName] : undefined;\n\n  let isTimeout = false;\n\n  const tasks: Array<Promise<void>> = [];\n\n  // promise for timeout\n  if (timeout > 0) {\n    tasks.push(new Promise((resolve) => {\n      setTimeout(() => {\n        isTimeout = true;\n        resolve();\n      }, timeout);\n    }));\n  }\n\n  // promise for module initialization\n  tasks.push(new Promise((resolve, reject) => {\n    const factory = useThreads ? ortWasmFactoryThreaded : ortWasmFactory;\n    const config: Partial<OrtWasmModule> = {\n      locateFile: (fileName: string, scriptDirectory: string) => {\n        if (fileName.endsWith('.worker.js') && typeof Blob !== 'undefined') {\n          return URL.createObjectURL(new Blob(\n              [\n                // This require() function is handled by webpack to load file content of the corresponding .worker.js\n                // eslint-disable-next-line @typescript-eslint/no-require-imports\n                require('./binding/ort-wasm-threaded.worker.js')\n              ],\n              {type: 'text/javascript'}));\n        }\n\n        if (fileName === wasmFileName) {\n          const prefix: string = wasmPrefixOverride ?? scriptDirectory;\n          return wasmPathOverride ?? prefix + wasmOverrideFileName;\n        }\n\n        return scriptDirectory + fileName;\n      }\n    };\n\n    if (useThreads) {\n      if (typeof Blob === 'undefined') {\n        config.mainScriptUrlOrBlob = path.join(__dirname, 'ort-wasm-threaded.js');\n      } else {\n        const scriptSourceCode =\n            `var ortWasmThreaded=(function(){var _scriptDir;return ${ortWasmFactoryThreaded.toString()}})();`;\n        config.mainScriptUrlOrBlob = new Blob([scriptSourceCode], {type: 'text/javascript'});\n      }\n    }\n\n    factory(config).then(\n        // wasm module initialized successfully\n        module => {\n          initializing = false;\n          initialized = true;\n          wasm = module;\n          resolve();\n        },\n        // wasm module failed to initialize\n        (what) => {\n          initializing = false;\n          aborted = true;\n          reject(what);\n        });\n  }));\n\n  await Promise.race(tasks);\n\n  if (isTimeout) {\n    throw new Error(`WebAssembly backend initializing failed due to timeout: ${timeout}ms`);\n  }\n};\n\nexport const getInstance = (): OrtWasmModule => {\n  if (initialized && wasm) {\n    return wasm;\n  }\n\n  throw new Error('WebAssembly is not initialized yet.');\n};\n\nexport const dispose = (): void => {\n  if (initialized && !initializing && !aborted) {\n    initializing = true;\n\n    (wasm as OrtWasmThreadedModule).PThread?.terminateAllThreads();\n    wasm = undefined;\n\n    initializing = false;\n    initialized = false;\n    aborted = true;\n  }\n};\n","\nimport worker from \"!!../../../node_modules/worker-loader/dist/runtime/inline.js\";\n\nexport default function Worker_fn() {\n  return worker(\"/*!\\n* ONNX Runtime Web v1.9.0\\n* Copyright (c) Microsoft Corporation. All rights reserved.\\n* Licensed under the MIT License.\\n*/\\n(()=>{var e={474:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){function t(){return R.buffer!=W&&J(R.buffer),L}function r(){return R.buffer!=W&&J(R.buffer),Y}function i(){return R.buffer!=W&&J(R.buffer),N}function a(){return R.buffer!=W&&J(R.buffer),H}function o(){return R.buffer!=W&&J(R.buffer),q}function u(){return R.buffer!=W&&J(R.buffer),z}var s,c,l;e=e||{},s||(s=void 0!==e?e:{}),s.ready=new Promise((function(e,t){c=e,l=t}));var f,d={};for(f in s)s.hasOwnProperty(f)&&(d[f]=s[f]);var p=\\\"./this.program\\\";function b(e,t){throw t}var h,g,m,y,v,_=\\\"object\\\"==typeof window,w=\\\"function\\\"==typeof importScripts,O=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,A=s.ENVIRONMENT_IS_PTHREAD||!1,E=\\\"\\\";function T(e){return s.locateFile?s.locateFile(e,E):E+e}if(O){if(E=w?n(908).dirname(E)+\\\"/\\\":\\\"//\\\",h=function(e,t){return y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(p=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){if(!(e instanceof cn))throw e})),process.on(\\\"unhandledRejection\\\",de),b=function(e,t){if(oe())throw process.exitCode=e,t;process.exit(e)},s.inspect=function(){return\\\"[Emscripten Module object]\\\"},void 0===n.g.Worker){var S;try{S=n(925)}catch(e){throw console.error('The \\\"worker_threads\\\" module is not supported in this node.js build - perhaps a newer version is needed?'),e}n.g.Worker=S.Worker}}else(_||w)&&(w?E=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(E=document.currentScript.src),_scriptDir&&(E=_scriptDir),E=0!==E.indexOf(\\\"blob:\\\")?E.substr(0,E.lastIndexOf(\\\"/\\\")+1):\\\"\\\",O?(h=function(e,t){return y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFileSync(e,t?null:\\\"utf8\\\")},m=function(e){return(e=h(e,!0)).buffer||(e=new Uint8Array(e)),I(e.buffer),e},g=function(e,t,r){y||(y=n(384)),v||(v=n(908)),e=v.normalize(e),y.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))}):(h=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},w&&(m=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),g=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)}));O&&\\\"undefined\\\"==typeof performance&&(n.g.performance=n(953).performance);var M,x,k=s.print||console.log.bind(console),j=s.printErr||console.warn.bind(console);for(f in d)d.hasOwnProperty(f)&&(s[f]=d[f]);d=null,s.thisProgram&&(p=s.thisProgram),s.quit&&(b=s.quit),s.wasmBinary&&(x=s.wasmBinary);var D=s.noExitRuntime||!1;\\\"object\\\"!=typeof WebAssembly&&de(\\\"no native wasm support detected\\\");var R,P,C,F=!1;function I(e,t){e||de(\\\"Assertion failed: \\\"+t)}function U(e){var t=new TextDecoder(e);this.decode=function(e){return e.buffer instanceof SharedArrayBuffer&&(e=new Uint8Array(e)),t.decode.call(t,e)}}var W,L,Y,N,H,q,z,B=\\\"undefined\\\"!=typeof TextDecoder?new U(\\\"utf8\\\"):void 0;function X(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&B)return B.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function G(e,t){return e?X(r(),e,t):\\\"\\\"}function V(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function $(e,t,n){return V(e,r(),t,n)}function Q(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function Z(e){var n=Q(e)+1,r=It(n);return r&&V(e,t(),r,n),r}function J(e){W=e,s.HEAP8=L=new Int8Array(e),s.HEAP16=new Int16Array(e),s.HEAP32=N=new Int32Array(e),s.HEAPU8=Y=new Uint8Array(e),s.HEAPU16=new Uint16Array(e),s.HEAPU32=H=new Uint32Array(e),s.HEAPF32=q=new Float32Array(e),s.HEAPF64=z=new Float64Array(e)}\\\"undefined\\\"!=typeof TextDecoder&&new U(\\\"utf-16le\\\"),A&&(W=s.buffer);var K=s.INITIAL_MEMORY||16777216;if(A)R=s.wasmMemory,W=s.buffer;else if(s.wasmMemory)R=s.wasmMemory;else if(!((R=new WebAssembly.Memory({initial:K/65536,maximum:32768,shared:!0})).buffer instanceof SharedArrayBuffer))throw j(\\\"requested a shared WebAssembly.Memory but the returned buffer is not a SharedArrayBuffer, indicating that while the browser has SharedArrayBuffer it does not have WebAssembly threads support - you may need to set a flag\\\"),O&&console.log(\\\"(on node you may need: --experimental-wasm-threads --experimental-wasm-bulk-memory and also use a recent version)\\\"),Error(\\\"bad memory\\\");R&&(W=R.buffer),K=W.byteLength,J(W);var ee,te=[],ne=[],re=[],ie=[],ae=0;function oe(){return D||0<ae}function ue(){var e=s.preRun.shift();te.unshift(e)}var se,ce=0,le=null,fe=null;function de(e){throw s.onAbort&&s.onAbort(e),I(!A),j(e),F=!0,C=1,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),l(e),e}function pe(){return se.startsWith(\\\"data:application/octet-stream;base64,\\\")}function be(){var e=se;try{if(e==se&&x)return new Uint8Array(x);if(m)return m(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){de(e)}}s.preloadedImages={},s.preloadedAudios={},se=\\\"ort-wasm-threaded.wasm\\\",pe()||(se=T(se));var he={985948:function(){throw\\\"Canceled!\\\"}};function ge(e){for(;0<e.length;){var t=e.shift();if(\\\"function\\\"==typeof t)t(s);else{var n=t.Cc;\\\"number\\\"==typeof n?void 0===t.Ub?ee.get(n)():ee.get(n)(t.Ub):n(void 0===t.Ub?null:t.Ub)}}}function me(e,n){if(0>=e||e>t().length||1&e||0>n)return-28;if(0==n)return 0;2147483647<=n&&(n=1/0);var r=Atomics.load(i(),sn>>2),a=0;if(r==e&&Atomics.compareExchange(i(),sn>>2,r,0)==r&&(a=1,0>=--n))return 1;if(0<=(e=Atomics.notify(i(),e>>2,n)))return e+a;throw\\\"Atomics.notify returned an unexpected value \\\"+e}function ye(e){if(A)throw\\\"Internal Error! cleanupThread() can only ever be called from main application thread!\\\";if(!e)throw\\\"Internal Error! Null pthread_ptr in cleanupThread!\\\";var t=_e.Pb[e];t&&(i()[e+12>>2]=0,_e.fc(t.worker))}s._emscripten_futex_wake=me;var ve,_e={Sb:[],Rb:[],oc:[],od:function(){},Gc:function(){for(var e=It(228),t=0;57>t;++t)a()[e/4+t]=0;i()[e+12>>2]=e,t=e+152,i()[t>>2]=t;var n=It(512);for(t=0;128>t;++t)a()[n/4+t]=0;Atomics.store(a(),e+100>>2,n),Atomics.store(a(),e+40>>2,e),$t(e,!w,1),Nt(e)},Hc:function(){_e.receiveObjectTransfer=_e.Nc,_e.threadInit=_e.Xc,_e.threadCancel=_e.Wc,_e.threadExit=_e.wc,_e.setExitStatus=_e.Pc},Pb:{},nc:[],tc:function(){for(;0<_e.nc.length;)_e.nc.pop()();Qt()},uc:function(e,t){Atomics.store(a(),e+56>>2,1),Atomics.store(a(),e+60>>2,0),_e.tc(),Atomics.store(a(),e+4>>2,t),Atomics.store(a(),e+0>>2,1),me(e+0,2147483647),$t(0,0,0)},Pc:function(e){C=e},wc:function(e){var t=Lt();t&&(_e.uc(t,e),A&&postMessage({cmd:\\\"exit\\\"}))},Wc:function(){_e.uc(Lt(),-1),postMessage({cmd:\\\"cancelDone\\\"})},vc:function(){for(var e in _e.Pb){var t=_e.Pb[e];t&&t.worker&&_e.fc(t.worker)}for(_e.Pb={},e=0;e<_e.Sb.length;++e){var n=_e.Sb[e];n.terminate()}for(_e.Sb=[],e=0;e<_e.Rb.length;++e)t=(n=_e.Rb[e]).Ob,_e.lc(t),n.terminate();_e.Rb=[]},lc:function(e){if(e){if(e.Qb){var t=i()[e.Qb+100>>2];i()[e.Qb+100>>2]=0,Wt(t),Wt(e.Qb)}e.Qb=0,e.kc&&e.Tb&&Wt(e.Tb),e.Tb=0,e.worker&&(e.worker.Ob=null)}},fc:function(e){_e.Oc((function(){delete _e.Pb[e.Ob.Qb],_e.Sb.push(e),_e.Rb.splice(_e.Rb.indexOf(e),1),_e.lc(e.Ob),e.Ob=void 0}))},Oc:function(e){i()[un>>2]=0;try{e()}finally{i()[un>>2]=1}},Nc:function(){},Xc:function(){for(var e in _e.oc)_e.oc[e]()},Jc:function(e,t){e.onmessage=function(n){var r=n.data,o=r.cmd;if(e.Ob&&(_e.Ac=e.Ob.Qb),r.targetThread&&r.targetThread!=Lt()){var u=_e.Pb[r.ud];u?u.worker.postMessage(n.data,r.transferList):j('Internal error! Worker sent a message \\\"'+o+'\\\" to target pthread '+r.targetThread+\\\", but that thread no longer exists!\\\")}else if(\\\"processQueuedMainThreadWork\\\"===o)zt();else if(\\\"spawnThread\\\"===o)Ee(n.data);else if(\\\"cleanupThread\\\"===o)ye(r.thread);else if(\\\"killThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! killThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in killThread!\\\";i()[n+12>>2]=0,r=_e.Pb[n],delete _e.Pb[n],r.worker.terminate(),_e.lc(r),_e.Rb.splice(_e.Rb.indexOf(r.worker),1),r.worker.Ob=void 0}else if(\\\"cancelThread\\\"===o){if(n=r.thread,A)throw\\\"Internal Error! cancelThread() can only ever be called from main application thread!\\\";if(!n)throw\\\"Internal Error! Null pthread_ptr in cancelThread!\\\";_e.Pb[n].worker.postMessage({cmd:\\\"cancel\\\"})}else if(\\\"loaded\\\"===o)e.loaded=!0,t&&t(e),e.Zb&&(e.Zb(),delete e.Zb);else if(\\\"print\\\"===o)k(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"printErr\\\"===o)j(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"alert\\\"===o)alert(\\\"Thread \\\"+r.threadId+\\\": \\\"+r.text);else if(\\\"exit\\\"===o)e.Ob&&Atomics.load(a(),e.Ob.Qb+64>>2)&&_e.fc(e);else if(\\\"exitProcess\\\"===o)try{fn(r.returnCode)}catch(e){if(e instanceof cn)return;throw e}else\\\"cancelDone\\\"===o?_e.fc(e):\\\"objectTransfer\\\"!==o&&(\\\"setimmediate\\\"===n.data.target?e.postMessage(n.data):j(\\\"worker sent an unknown command \\\"+o));_e.Ac=void 0},e.onerror=function(e){j(\\\"pthread sent an error! \\\"+e.filename+\\\":\\\"+e.lineno+\\\": \\\"+e.message)},O&&void 0!==e.on&&(e.on(\\\"message\\\",(function(t){e.onmessage({data:t})})),e.on(\\\"error\\\",(function(t){e.onerror(t)})),e.on(\\\"exit\\\",(function(){}))),e.postMessage({cmd:\\\"load\\\",urlOrBlob:s.mainScriptUrlOrBlob||_scriptDir,wasmMemory:R,wasmModule:P})},xc:function(){var e=T(\\\"ort-wasm-threaded.worker.js\\\");_e.Sb.push(new Worker(e))},Dc:function(){return 0==_e.Sb.length&&(_e.xc(),_e.Jc(_e.Sb[0])),_e.Sb.pop()},cd:function(e){for(e=performance.now()+e;performance.now()<e;);}};function we(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return i()[Ut()>>2]=28,-1;e=ve()}return i()[t>>2]=e/1e3|0,i()[t+4>>2]=e%1e3*1e6|0,0}function Oe(e,t){if(A)return Ge(1,1,e,t);re.unshift({Cc:e,Ub:t})}function Ae(e){this.Yb=e-16,this.Uc=function(e){i()[this.Yb+4>>2]=e},this.Rc=function(e){i()[this.Yb+8>>2]=e},this.Sc=function(){i()[this.Yb>>2]=0},this.Qc=function(){t()[this.Yb+12>>0]=0},this.Tc=function(){t()[this.Yb+13>>0]=0},this.Ec=function(e,t){this.Uc(e),this.Rc(t),this.Sc(),this.Qc(),this.Tc()}}function Ee(e){if(A)throw\\\"Internal Error! spawnThread() can only ever be called from main application thread!\\\";var t=_e.Dc();if(!t)return 6;if(void 0!==t.Ob)throw\\\"Internal error!\\\";if(!e.dc)throw\\\"Internal error, no pthread ptr!\\\";_e.Rb.push(t);for(var n=It(512),r=0;128>r;++r)i()[n+4*r>>2]=0;var o=e.Tb+e.Vb,u=(r=_e.Pb[e.dc]={worker:t,Tb:e.Tb,Vb:e.Vb,kc:e.kc,Qb:e.dc}).Qb>>2;Atomics.store(a(),u+16,e.detached),Atomics.store(a(),u+25,n),Atomics.store(a(),u+10,r.Qb),Atomics.store(a(),u+20,e.Vb),Atomics.store(a(),u+19,o),Atomics.store(a(),u+26,e.Vb),Atomics.store(a(),u+28,o),Atomics.store(a(),u+29,e.detached),n=Zt()+40,Atomics.store(a(),u+43,n),t.Ob=r;var s={cmd:\\\"run\\\",start_routine:e.Vc,arg:e.Ub,threadInfoStruct:e.dc,stackBase:e.Tb,stackSize:e.Vb};return t.Zb=function(){s.time=performance.now(),t.postMessage(s,e.bd)},t.loaded&&(t.Zb(),delete t.Zb),0}function Te(e,n,r){if(0>=e||e>t().length||1&e)return-28;if(_){if(Atomics.load(i(),e>>2)!=n)return-6;var a=performance.now();for(r=a+r,Atomics.exchange(i(),sn>>2,e);;){if((a=performance.now())>r)return Atomics.exchange(i(),sn>>2,0),-73;if(0==(a=Atomics.exchange(i(),sn>>2,0)))break;if(zt(),Atomics.load(i(),e>>2)!=n)return-6;Atomics.exchange(i(),sn>>2,e)}return 0}if(\\\"timed-out\\\"===(e=Atomics.wait(i(),e>>2,n,r)))return-73;if(\\\"not-equal\\\"===e)return-6;if(\\\"ok\\\"===e)return 0;throw\\\"Atomics.wait returned an unexpected value \\\"+e}function Se(){O||w||(M||(M={}),M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]||(M[\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\"]=1,j(\\\"Blocking on the main thread is very dangerous, see https://emscripten.org/docs/porting/pthreads.html#blocking-on-the-main-browser-thread\\\")))}s.establishStackSpace=function(e,t){an(e,t),nn(e)},s.invokeEntryPoint=function(e,t){return ee.get(e)(t)},ve=O?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:A?function(){return performance.now()-s.__performance_now_clock_drift}:function(){return performance.now()};var Me={},xe=[null,[],[]];function ke(e,t){var n=xe[e];0===t||10===t?((1===e?k:j)(X(n,0)),n.length=0):n.push(t)}var je={};function De(e,t){return A?Ge(2,1,e,t):(e=G(e),je.hd(e,t))}function Re(e,t,n){return A?Ge(3,1,e,t,n):0}function Pe(e,t){if(A)return Ge(4,1,e,t)}function Ce(e,t,n){if(A)return Ge(5,1,e,t,n)}function Fe(e,t,n){return A?Ge(6,1,e,t,n):0}function Ie(e,t){if(A)return Ge(7,1,e,t)}function Ue(e,t){return A?Ge(8,1,e,t):(e=G(e),je.jd(e,t))}function We(e,t,n,i,a,o){if(A)t=Ge(9,1,e,t,n,i,a,o);else if(o<<=12,0!=(16&i)&&0!=e%65536)t=-28;else if(0!=(32&i)){var u=65536*Math.ceil(t/65536);(e=on(65536,u))?r().fill(0,e,e+u):e=0,e?(Me[e]={Lc:e,Ic:t,yc:!0,fd:a,rd:n,flags:i,offset:o},t=e):t=-48}else t=-52;return t}function Le(e,t){if(A)e=Ge(10,1,e,t);else{var n=Me[e];0!==t&&n?(t===n.Ic&&(Me[e]=null,n.yc&&Wt(n.Lc)),e=0):e=-28}return e}function Ye(e,t,n){if(A)return Ge(11,1,e,t,n)}function Ne(e,t,n){return A?Ge(12,1,e,t,n):(e=G(e),je.kd(e,t,n))}function He(e){if(A)return Ge(13,1,e)}function qe(e,t){if(A)return Ge(14,1,e,t)}function ze(e){if(A)return Ge(15,1,e)}function Be(){if(A)return Ge(16,1);de()}var Xe=[];function Ge(e,t){for(var n=arguments.length-2,r=tn(),i=rn(8*n),a=i>>3,o=0;o<n;o++){var s=arguments[2+o];u()[a+o]=s}return n=Bt(e,n,i,t),nn(r),n}var Ve=[],$e=[0,\\\"undefined\\\"!=typeof document?document:0,\\\"undefined\\\"!=typeof window?window:0];function Qe(e){return e=2<e?G(e):e,$e[e]||(\\\"undefined\\\"!=typeof document?document.querySelector(e):void 0)}function Ze(e,t,n){var r=Qe(e);if(!r)return-4;if(r.cc&&(i()[r.cc>>2]=t,i()[r.cc+4>>2]=n),!r.sc&&r.ed){if(r.cc){r=i()[r.cc+8>>2],e=e?G(e):\\\"\\\";var a=tn(),o=rn(12),u=0;if(e){u=Q(e)+1;var s=It(u);$(e,s,u),u=s}return i()[o>>2]=u,i()[o+4>>2]=t,i()[o+8>>2]=n,Xt(0,r,657457152,0,u,o),nn(a),1}return-4}return r.sc&&(r=r.sc),e=!1,r.bc&&r.bc.ac&&(e=0===(e=r.bc.ac.getParameter(2978))[0]&&0===e[1]&&e[2]===r.width&&e[3]===r.height),r.width=t,r.height=n,e&&r.bc.ac.viewport(0,0,t,n),0}function Je(e,t,n){return A?Ge(17,1,e,t,n):Ze(e,t,n)}var Ke=[\\\"default\\\",\\\"low-power\\\",\\\"high-performance\\\"],et=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],tt=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],nt=[\\\"nchw\\\",\\\"nhwc\\\"],rt=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function it(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(i()[t>>2]);return n}}function at(e,t=\\\"float32\\\"){const n=i()[e>>2]+a()[e+8>>2];return e=a()[e+4>>2],I(\\\"float32\\\"===t),new Float32Array(r().buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function ot(e){return{alpha:o()[e>>2]}}function ut(e){return{type:rt[a()[e>>2]],dimensions:it(a()[e+8>>2],i()[e+4>>2])}}function st(e){return{windowDimensions:it(a()[e>>2],i()[e+4>>2]),padding:\\\"explicit\\\"===et[i()[e+32>>2]]?it(a()[e+8>>2],i()[e+12>>2]):void 0,strides:it(a()[e+16>>2],i()[e+20>>2]),dilations:it(a()[e+24>>2],i()[e+28>>2]),autoPad:et[i()[e+32>>2]],layout:nt[i()[e+36>>2]]}}var ct,lt,ft,dt,pt,bt,ht,gt,mt,yt={};function vt(){if(!mt){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:p||\\\"./this.program\\\"};for(e in yt)void 0===yt[e]?delete t[e]:t[e]=yt[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);mt=n}return mt}function _t(e,n){if(A)return Ge(18,1,e,n);var r=0;return vt().forEach((function(a,o){var u=n+r;for(o=i()[e+4*o>>2]=u,u=0;u<a.length;++u)t()[o++>>0]=a.charCodeAt(u);t()[o>>0]=0,r+=a.length+1})),0}function wt(e,t){if(A)return Ge(19,1,e,t);var n=vt();i()[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),i()[t>>2]=r,0}function Ot(e){return A?Ge(20,1,e):0}function At(e,n){return A?Ge(21,1,e,n):(e=1==e||2==e?2:de(),t()[n>>0]=e,0)}function Et(e,t,n,r){return A?Ge(22,1,e,t,n,r):(e=je.md(e),t=je.ld(e,t,n),i()[r>>2]=t,0)}function Tt(e,t,n,r,i){if(A)return Ge(23,1,e,t,n,r,i)}function St(e,t,n,a){if(A)return Ge(24,1,e,t,n,a);for(var o=0,u=0;u<n;u++){for(var s=i()[t+8*u>>2],c=i()[t+(8*u+4)>>2],l=0;l<c;l++)ke(e,r()[s+l]);o+=c}return i()[a>>2]=o,0}function Mt(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(A)return Ge(25,1);if(!Mt.zc){Mt.zc=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var a=r.getTimezoneOffset(),o=Math.max(t,a);i()[en()>>2]=60*o,i()[Kt()>>2]=Number(t!=a),n=e(n),r=e(r),n=Z(n),r=Z(r),a<t?(i()[Jt()>>2]=n,i()[Jt()+4>>2]=r):(i()[Jt()>>2]=r,i()[Jt()+4>>2]=n)}}function xt(e){return 0==e%4&&(0!=e%100||0==e%400)}function kt(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var jt=[31,29,31,30,31,30,31,31,30,31,30,31],Dt=[31,28,31,30,31,30,31,31,30,31,30,31];function Rt(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(xt(e.getFullYear())?jt:Dt)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Pt(e,n,r,a){function o(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function u(e,t){return o(e,t,\\\"0\\\")}function s(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function c(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function l(e){e=Rt(new Date(e.Nb+1900,0,1),e.jc);var t=new Date(e.getFullYear()+1,0,4),n=c(new Date(e.getFullYear(),0,4));return t=c(t),0>=s(n,e)?0>=s(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var f=i()[a+40>>2];for(var d in a={$c:i()[a>>2],Zc:i()[a+4>>2],hc:i()[a+8>>2],$b:i()[a+12>>2],Wb:i()[a+16>>2],Nb:i()[a+20>>2],ic:i()[a+24>>2],jc:i()[a+28>>2],vd:i()[a+32>>2],Yc:i()[a+36>>2],ad:f?G(f):\\\"\\\"},r=G(r),f={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})r=r.replace(new RegExp(d,\\\"g\\\"),f[d]);var p=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),b=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(d in f={\\\"%a\\\":function(e){return p[e.ic].substring(0,3)},\\\"%A\\\":function(e){return p[e.ic]},\\\"%b\\\":function(e){return b[e.Wb].substring(0,3)},\\\"%B\\\":function(e){return b[e.Wb]},\\\"%C\\\":function(e){return u((e.Nb+1900)/100|0,2)},\\\"%d\\\":function(e){return u(e.$b,2)},\\\"%e\\\":function(e){return o(e.$b,2,\\\" \\\")},\\\"%g\\\":function(e){return l(e).toString().substring(2)},\\\"%G\\\":function(e){return l(e)},\\\"%H\\\":function(e){return u(e.hc,2)},\\\"%I\\\":function(e){return 0==(e=e.hc)?e=12:12<e&&(e-=12),u(e,2)},\\\"%j\\\":function(e){return u(e.$b+kt(xt(e.Nb+1900)?jt:Dt,e.Wb-1),3)},\\\"%m\\\":function(e){return u(e.Wb+1,2)},\\\"%M\\\":function(e){return u(e.Zc,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.hc&&12>e.hc?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return u(e.$c,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.ic||7},\\\"%U\\\":function(e){var t=new Date(e.Nb+1900,0,1),n=0===t.getDay()?t:Rt(t,7-t.getDay());return 0>s(n,e=new Date(e.Nb+1900,e.Wb,e.$b))?u(Math.ceil((31-n.getDate()+(kt(xt(e.getFullYear())?jt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.Nb+1901,0,4),n=c(new Date(e.Nb+1900,0,4));t=c(t);var r=Rt(new Date(e.Nb+1900,0,1),e.jc);return 0>s(r,n)?\\\"53\\\":0>=s(t,r)?\\\"01\\\":u(Math.ceil((n.getFullYear()<e.Nb+1900?e.jc+32-n.getDate():e.jc+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.ic},\\\"%W\\\":function(e){var t=new Date(e.Nb,0,1),n=1===t.getDay()?t:Rt(t,0===t.getDay()?1:7-t.getDay()+1);return 0>s(n,e=new Date(e.Nb+1900,e.Wb,e.$b))?u(Math.ceil((31-n.getDate()+(kt(xt(e.getFullYear())?jt:Dt,e.getMonth()-1)-31)+e.getDate())/7),2):0===s(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.Nb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.Nb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Yc);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.ad},\\\"%%\\\":function(){return\\\"%\\\"}})r.includes(d)&&(r=r.replace(new RegExp(d,\\\"g\\\"),f[d](a)));return(d=function(e){var t=Array(Q(e)+1);return V(e,t,0,t.length),t}(r)).length>n?0:(function(e,n){t().set(e,n)}(d,e),d.length-1)}ct||(ct=ct||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},lt=lt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},ft=ft||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},dt=dt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},pt=pt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},bt=bt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},ht=ht||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}},gt=gt||{Xb:{},Mc:1,create:function(e,t){t=t||{};var n=this.Mc++;return t.mc=1,t.object=e,this.Xb[n]=t,n},get:function(e){if(0!==e)return this.Xb[e].object},ec:function(e){this.Xb[e].mc++},release:function(e){var t=this.Xb[e];t.mc--,0>=t.mc&&delete this.Xb[e]}});var Ct=[null,Oe,De,Re,Pe,Ce,Fe,Ie,Ue,We,Le,Ye,Ne,He,qe,ze,Be,Je,_t,wt,Ot,At,Et,Tt,St,Mt],Ft={h:function(e,t,n,r){de(\\\"Assertion failed: \\\"+G(e)+\\\", at: \\\"+[t?G(t):\\\"unknown filename\\\",n,r?G(r):\\\"unknown function\\\"])},T:function(e,t){return we(e,t)},b:function(e){return It(e+16)+16},d:function(e,t){return Oe(e,t)},e:function(e,t){_e.nc.push((function(){ee.get(e)(t)}))},c:function(e,t,n){throw new Ae(e).Ec(t,n),e},X:function(e,t,n,r){if(\\\"undefined\\\"==typeof SharedArrayBuffer)return j(\\\"Current environment does not support SharedArrayBuffer, pthreads are not available!\\\"),6;if(!e)return j(\\\"pthread_create called with a null thread pointer!\\\"),28;var o=[];if(A&&0===o.length)return qt(687865856,e,t,n,r);var u=0,s=0;if(t&&-1!=t){var c=i()[t>>2];c+=81920,u=i()[t+8>>2],s=0!==i()[t+12>>2]}else c=2097152;(t=0==u)?u=on(16,c):I(0<(u-=c));for(var l=It(228),f=0;57>f;++f)a()[(l>>2)+f]=0;return i()[e>>2]=l,i()[l+12>>2]=l,e=l+152,i()[e>>2]=e,n={Tb:u,Vb:c,kc:t,detached:s,Vc:n,dc:l,Ub:r,bd:o},A?(n.dd=\\\"spawnThread\\\",postMessage(n,o),0):Ee(n)},U:function(e){throw A?_e.wc(e):(_e.tc(),fn(e)),\\\"unwind\\\"},W:function(e,t){return function(e,t){if(!e)return j(\\\"pthread_join attempted on a null thread pointer!\\\"),71;if(A&&Lt()==e)return j(\\\"PThread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(!A&&Ht()==e)return j(\\\"Main thread \\\"+e+\\\" is attempting to join to itself!\\\"),16;if(i()[e+12>>2]!==e)return j(\\\"pthread_join attempted on thread \\\"+e+\\\", which does not point to a valid thread, or does not exist anymore!\\\"),71;if(Atomics.load(a(),e+64>>2))return j(\\\"Attempted to join thread \\\"+e+\\\", which was already detached!\\\"),28;for(Se();;){var n=Atomics.load(a(),e+0>>2);if(1==n)return n=Atomics.load(a(),e+4>>2),t&&(i()[t>>2]=n),Atomics.store(a(),e+64>>2,1),A?postMessage({cmd:\\\"cleanupThread\\\",thread:e}):ye(e),0;Gt(),A||zt(),Te(e+0,n,A?100:1)}}(e,t)},K:De,r:Re,R:Pe,L:Ce,u:function(){return 42},D:Fe,N:Ie,Q:Ue,P:We,O:Le,q:Ye,J:Ne,H:He,v:qe,I:ze,ba:function(e,t){if(e==t)postMessage({cmd:\\\"processQueuedMainThreadWork\\\"});else if(A)postMessage({targetThread:e,cmd:\\\"processThreadQueue\\\"});else{if(!(e=(e=_e.Pb[e])&&e.worker))return;e.postMessage({cmd:\\\"processThreadQueue\\\"})}return 1},f:Be,x:we,Sa:function(e,t){return e-t},V:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},m:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ca:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},M:function(){de(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},da:function(e,t,n){var a;for(Xe.length=0,n>>=2;a=r()[t++];)(a=105>a)&&1&n&&n++,Xe.push(a?u()[n++>>1]:i()[n]),++n;return he[e].apply(null,Xe)},C:Se,n:function(){},k:Te,j:me,S:function(){return 2147483648},i:ve,A:function(e,t,n){r().copyWithin(e,t,t+n)},o:function(){return O?n(993).cpus().length:navigator.hardwareConcurrency},_:function(e,t,n){Ve.length=t,n>>=3;for(var r=0;r<t;r++)Ve[r]=u()[n+r];return(0>e?he[-e-1]:Ct[e]).apply(null,Ve)},B:function(e){var t=r().length;if((e>>>=0)<=t||2147483648<e)return!1;for(var n=1;4>=n;n*=2){var i=t*(1+.2/n);i=Math.min(i,e+100663296),0<(i=Math.max(e,i))%65536&&(i+=65536-i%65536);e:{try{R.grow(Math.min(2147483648,i)-W.byteLength+65535>>>16),J(R.buffer);var a=1;break e}catch(e){}a=void 0}if(a)return!0}return!1},$:function(e,t,n){return Qe(e)?Ze(e,t,n):Je(e,t,n)},w:function(){},Z:function(e,t,n){return ae+=1,setTimeout((function(){--ae,function(e){if(!F){try{e()}catch(e){if(e instanceof cn)return;if(\\\"unwind\\\"!==e)throw e&&\\\"object\\\"==typeof e&&e.stack&&j(\\\"exception thrown: \\\"+[e,e.stack]),e}if(!oe())try{A?Vt(C):fn(C)}catch(e){if(!(e instanceof cn))throw e}}}((function(){ee.get(e)(n)}))}),t)},aa:function(e,t){t>>=2;var n=i()[t+6];return t={alpha:!!i()[t],depth:!!i()[t+1],stencil:!!i()[t+2],antialias:!!i()[t+3],premultipliedAlpha:!!i()[t+4],preserveDrawingBuffer:!!i()[t+5],powerPreference:Ke[n],failIfMajorPerformanceCaveat:!!i()[t+7],Kc:i()[t+8],pd:i()[t+9],qc:i()[t+10],Bc:i()[t+11],sd:i()[t+12],td:i()[t+13]},!(e=Qe(e))||t.Bc?0:function(e,t){e.rc||(e.rc=e.getContext,e.getContext=function(t,n){return\\\"webgl\\\"==t==(n=e.rc(t,n))instanceof WebGLRenderingContext?n:null});var n=e.getContext(\\\"webgl\\\",t);return n?function(e,t){var n=It(8);i()[n+4>>2]=Lt();var r={nd:n,attributes:t,version:t.Kc,ac:e};return e.canvas&&(e.canvas.bc=r),(void 0===t.qc||t.qc)&&function(e){if(e||(e=void 0),!e.Fc){e.Fc=!0;var t=e.ac;!function(e){var t=e.getExtension(\\\"ANGLE_instanced_arrays\\\");t&&(e.vertexAttribDivisor=function(e,n){t.vertexAttribDivisorANGLE(e,n)},e.drawArraysInstanced=function(e,n,r,i){t.drawArraysInstancedANGLE(e,n,r,i)},e.drawElementsInstanced=function(e,n,r,i,a){t.drawElementsInstancedANGLE(e,n,r,i,a)})}(t),function(e){var t=e.getExtension(\\\"OES_vertex_array_object\\\");t&&(e.createVertexArray=function(){return t.createVertexArrayOES()},e.deleteVertexArray=function(e){t.deleteVertexArrayOES(e)},e.bindVertexArray=function(e){t.bindVertexArrayOES(e)},e.isVertexArray=function(e){return t.isVertexArrayOES(e)})}(t),function(e){var t=e.getExtension(\\\"WEBGL_draw_buffers\\\");t&&(e.drawBuffers=function(e,n){t.drawBuffersWEBGL(e,n)})}(t),t.gd=t.getExtension(\\\"EXT_disjoint_timer_query\\\"),t.qd=t.getExtension(\\\"WEBGL_multi_draw\\\"),(t.getSupportedExtensions()||[]).forEach((function(e){e.includes(\\\"lose_context\\\")||e.includes(\\\"debug\\\")||t.getExtension(e)}))}}(r),n}(n,t):0}(e,t)},Qa:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][a()[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][a()[e+4>>2]]}),ct.create(navigator.ml.createContext(t))},F:_t,G:wt,l:Ot,E:At,t:Et,z:Tt,p:St,ta:function(e){var t=Date.now();return i()[e>>2]=t/1e3|0,i()[e+4>>2]=t%1e3*1e3|0,0},Ta:function e(t,n){return t=new Date(1e3*i()[t>>2]),i()[n>>2]=t.getUTCSeconds(),i()[n+4>>2]=t.getUTCMinutes(),i()[n+8>>2]=t.getUTCHours(),i()[n+12>>2]=t.getUTCDate(),i()[n+16>>2]=t.getUTCMonth(),i()[n+20>>2]=t.getUTCFullYear()-1900,i()[n+24>>2]=t.getUTCDay(),i()[n+36>>2]=0,i()[n+32>>2]=0,t=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,i()[n+28>>2]=t,e.pc||(e.pc=Z(\\\"GMT\\\")),i()[n+40>>2]=e.pc,n},Y:function(){_e.Gc()},s:function(e,t){Mt(),e=new Date(1e3*i()[e>>2]),i()[t>>2]=e.getSeconds(),i()[t+4>>2]=e.getMinutes(),i()[t+8>>2]=e.getHours(),i()[t+12>>2]=e.getDate(),i()[t+16>>2]=e.getMonth(),i()[t+20>>2]=e.getFullYear()-1900,i()[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1),r=(e.getTime()-n.getTime())/864e5|0;return i()[t+28>>2]=r,i()[t+36>>2]=-60*e.getTimezoneOffset(),r=new Date(e.getFullYear(),6,1).getTimezoneOffset(),e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),i()[t+32>>2]=e,e=i()[Jt()+(e?4:0)>>2],i()[t+40>>2]=e,t},a:R||s.wasmMemory,y:function(e){Mt();var t=new Date(i()[e+20>>2]+1900,i()[e+16>>2],i()[e+12>>2],i()[e+8>>2],i()[e+4>>2],i()[e>>2],0),n=i()[e+32>>2],r=t.getTimezoneOffset(),a=new Date(t.getFullYear(),0,1),o=new Date(t.getFullYear(),6,1).getTimezoneOffset(),u=a.getTimezoneOffset(),s=Math.min(u,o);return 0>n?i()[e+32>>2]=Number(o!=u&&s==r):0<n!=(s==r)&&(o=Math.max(u,o),t.setTime(t.getTime()+6e4*((0<n?s:o)-r))),i()[e+24>>2]=t.getDay(),n=(t.getTime()-a.getTime())/864e5|0,i()[e+28>>2]=n,i()[e>>2]=t.getSeconds(),i()[e+4>>2]=t.getMinutes(),i()[e+8>>2]=t.getHours(),i()[e+12>>2]=t.getDate(),i()[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},Pa:function(e){ct.ec(e)},Oa:function(e){ct.release(e)},Ka:function(e,t,n){return e=ft.get(e),t=ht.get(t),n=ht.get(n),n=e.add(t,n),ht.create(n)},Ja:function(e,t,n){return e=ft.get(e),t=ht.get(t),n=st(n),n=e.averagePool2d(t,n),ht.create(n)},Ia:function(e,t,n,r,a){return e=ft.get(e),t=ht.get(t),n=ht.get(n),r=ht.get(r),a={scale:ht.get(i()[a>>2]),bias:ht.get(i()[a+4>>2]),axis:i()[a+8>>2],epsilon:o()[a+12>>2],activation:gt.get(i()[a+16>>2])},a=e.batchNormalization(t,n,r,a),ht.create(a)},Ha:function(e,t){e=ft.get(e),t=bt.get(t);try{var n=e.build(t);return lt.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},Ga:function(e,t,n){return e=ft.get(e),t=ht.get(t),n={minValue:o()[n>>2],maxValue:o()[n+4>>2]},n=e.clamp(t,n),ht.create(n)},Fa:function(e,t,n,r){e=ft.get(e),t=it(t,n),n=[];for(var i=0;i<t.length;++i)n.push(ht.get(t[i]));return r=e.concat(n,r),ht.create(r)},Ea:function(e,t,n){return e=ft.get(e),n=at(n,(t=ut(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),ht.create(n)},Da:function(e,t,n,r){return e=ft.get(e),t=ht.get(t),n=ht.get(n),r={padding:\\\"explicit\\\"===et[i()[r+40>>2]]?it(a()[r>>2],i()[r+4>>2]):void 0,strides:it(a()[r+8>>2],i()[r+12>>2]),dilations:it(a()[r+16>>2],i()[r+20>>2]),autoPad:et[i()[r+40>>2]],groups:i()[r+48>>2],inputLayout:nt[i()[r+52>>2]],filterLayout:tt[i()[r+56>>2]],bias:ht.get(i()[r+60>>2]),activation:gt.get(i()[r+64>>2])},r=e.conv2d(t,n,r),ht.create(r)},Ca:function(e,n,r,a){return e=ft.get(e),n=ht.get(n),r=ht.get(r),a={c:ht.get(i()[a>>2]),alpha:o()[a+4>>2],beta:o()[a+8>>2],aTranspose:0!==t()[a+12>>0],bTranspose:0!==t()[a+13>>0]},a=e.gemm(n,r,a),ht.create(a)},Ba:function(e,t,n){return e=ft.get(e),t=G(t),n=ut(n),n=e.input(t,n),ht.create(n)},Aa:function(e,t,n){return e=ft.get(e),t=ht.get(t),n=ot(n),n=e.leakyRelu(t,n),ht.create(n)},za:function(e,t){return e=ft.get(e),t=ot(t),t=e.leakyRelu(t),gt.create(t)},ya:function(e,t,n){return e=ft.get(e),t=ht.get(t),n=ht.get(n),n=e.matmul(t,n),ht.create(n)},xa:function(e,t,n){return e=ft.get(e),t=ht.get(t),n=st(n),n=e.maxPool2d(t,n),ht.create(n)},sa:function(e){ft.release(e)},wa:function(e,t){return e=ft.get(e),t=ht.get(t),t=e.relu(t),ht.create(t)},va:function(e){return e=ft.get(e).relu(),gt.create(e)},ua:function(e,t,n,r){return e=ft.get(e),t=ht.get(t),n=it(r,n),n=e.reshape(t,n),ht.create(n)},Na:function(e,t,n){return e=lt.get(e),t=dt.get(t),n=pt.get(n),e.compute(t,n)},Ma:function(e){lt.ec(e)},La:function(e){lt.release(e)},qa:function(e){dt.release(e)},ra:function(e,t,n){e=dt.get(e),t=G(t),n=0===i()[n+12>>2]?at(n+0):{resource:at(n+0),dimensions:it(a()[n+16>>2],i()[n+12>>2])},e[t]=n},oa:function(e){bt.release(e)},pa:function(e,t,n){e=bt.get(e),t=G(t),n=ht.get(n),e[t]=n},ma:function(e){pt.release(e)},na:function(e,t,n){e=pt.get(e),t=G(t),n=at(n),e[t]=n},la:function(e){ht.ec(e)},ka:function(e){ht.release(e)},ja:function(e){gt.ec(e)},ia:function(e){gt.release(e)},Ra:Pt,g:function(e,t,n,r){return Pt(e,t,n,r)},ha:function(e){return e=ct.get(e),e=new MLGraphBuilder(e),ft.create(e)},ga:function(){return dt.create({})},fa:function(){return bt.create({})},ea:function(){return pt.create({})}};!function(){function e(e,t){s.asm=e.exports,ee=s.asm.nb,ne.unshift(s.asm.Ua),_e.oc.push(s.asm.sb),P=t,A||(ce--,s.monitorRunDependencies&&s.monitorRunDependencies(ce),0==ce&&(null!==le&&(clearInterval(le),le=null),fe&&(e=fe,fe=null,e())))}function t(t){e(t.instance,t.module)}function n(e){return function(){if(!x&&(_||w)){if(\\\"function\\\"==typeof fetch&&!se.startsWith(\\\"file://\\\"))return fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+se+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return be()}));if(g)return new Promise((function(e,t){g(se,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return be()}))}().then((function(e){return WebAssembly.instantiate(e,r)})).then(e,(function(e){j(\\\"failed to asynchronously prepare wasm: \\\"+e),de(e)}))}var r={a:Ft};if(A||(ce++,s.monitorRunDependencies&&s.monitorRunDependencies(ce)),s.instantiateWasm)try{return s.instantiateWasm(r,e)}catch(e){return j(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(x||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||pe()||se.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?n(t):fetch(se,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,r).then(t,(function(e){return j(\\\"wasm streaming compile failed: \\\"+e),j(\\\"falling back to ArrayBuffer instantiation\\\"),n(t)}))}))).catch(l)}(),s.___wasm_call_ctors=function(){return(s.___wasm_call_ctors=s.asm.Ua).apply(null,arguments)},s._OrtInit=function(){return(s._OrtInit=s.asm.Va).apply(null,arguments)},s._OrtCreateSessionOptions=function(){return(s._OrtCreateSessionOptions=s.asm.Wa).apply(null,arguments)},s._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(s._OrtSessionOptionsAppendExecutionProviderWebNN=s.asm.Xa).apply(null,arguments)},s._OrtAddSessionConfigEntry=function(){return(s._OrtAddSessionConfigEntry=s.asm.Ya).apply(null,arguments)},s._OrtReleaseSessionOptions=function(){return(s._OrtReleaseSessionOptions=s.asm.Za).apply(null,arguments)},s._OrtCreateSession=function(){return(s._OrtCreateSession=s.asm._a).apply(null,arguments)},s._OrtReleaseSession=function(){return(s._OrtReleaseSession=s.asm.$a).apply(null,arguments)},s._OrtGetInputCount=function(){return(s._OrtGetInputCount=s.asm.ab).apply(null,arguments)},s._OrtGetOutputCount=function(){return(s._OrtGetOutputCount=s.asm.bb).apply(null,arguments)},s._OrtGetInputName=function(){return(s._OrtGetInputName=s.asm.cb).apply(null,arguments)},s._OrtGetOutputName=function(){return(s._OrtGetOutputName=s.asm.db).apply(null,arguments)},s._OrtFree=function(){return(s._OrtFree=s.asm.eb).apply(null,arguments)},s._OrtCreateTensor=function(){return(s._OrtCreateTensor=s.asm.fb).apply(null,arguments)},s._OrtGetTensorData=function(){return(s._OrtGetTensorData=s.asm.gb).apply(null,arguments)},s._OrtReleaseTensor=function(){return(s._OrtReleaseTensor=s.asm.hb).apply(null,arguments)},s._OrtCreateRunOptions=function(){return(s._OrtCreateRunOptions=s.asm.ib).apply(null,arguments)},s._OrtAddRunConfigEntry=function(){return(s._OrtAddRunConfigEntry=s.asm.jb).apply(null,arguments)},s._OrtReleaseRunOptions=function(){return(s._OrtReleaseRunOptions=s.asm.kb).apply(null,arguments)},s._OrtRun=function(){return(s._OrtRun=s.asm.lb).apply(null,arguments)},s._OrtEndProfiling=function(){return(s._OrtEndProfiling=s.asm.mb).apply(null,arguments)};var It=s._malloc=function(){return(It=s._malloc=s.asm.ob).apply(null,arguments)},Ut=s.___errno_location=function(){return(Ut=s.___errno_location=s.asm.pb).apply(null,arguments)},Wt=s._free=function(){return(Wt=s._free=s.asm.qb).apply(null,arguments)},Lt=s._pthread_self=function(){return(Lt=s._pthread_self=s.asm.rb).apply(null,arguments)};s._emscripten_tls_init=function(){return(s._emscripten_tls_init=s.asm.sb).apply(null,arguments)},s._emscripten_current_thread_process_queued_calls=function(){return(s._emscripten_current_thread_process_queued_calls=s.asm.tb).apply(null,arguments)};var Yt,Nt=s._emscripten_register_main_browser_thread_id=function(){return(Nt=s._emscripten_register_main_browser_thread_id=s.asm.ub).apply(null,arguments)},Ht=s._emscripten_main_browser_thread_id=function(){return(Ht=s._emscripten_main_browser_thread_id=s.asm.vb).apply(null,arguments)},qt=s._emscripten_sync_run_in_main_thread_4=function(){return(qt=s._emscripten_sync_run_in_main_thread_4=s.asm.wb).apply(null,arguments)},zt=s._emscripten_main_thread_process_queued_calls=function(){return(zt=s._emscripten_main_thread_process_queued_calls=s.asm.xb).apply(null,arguments)},Bt=s._emscripten_run_in_main_runtime_thread_js=function(){return(Bt=s._emscripten_run_in_main_runtime_thread_js=s.asm.yb).apply(null,arguments)},Xt=s.__emscripten_call_on_thread=function(){return(Xt=s.__emscripten_call_on_thread=s.asm.zb).apply(null,arguments)},Gt=s._pthread_testcancel=function(){return(Gt=s._pthread_testcancel=s.asm.Ab).apply(null,arguments)},Vt=s._pthread_exit=function(){return(Vt=s._pthread_exit=s.asm.Bb).apply(null,arguments)},$t=s.__emscripten_thread_init=function(){return($t=s.__emscripten_thread_init=s.asm.Cb).apply(null,arguments)},Qt=s.___pthread_tsd_run_dtors=function(){return(Qt=s.___pthread_tsd_run_dtors=s.asm.Db).apply(null,arguments)},Zt=s._emscripten_get_global_libc=function(){return(Zt=s._emscripten_get_global_libc=s.asm.Eb).apply(null,arguments)},Jt=s.__get_tzname=function(){return(Jt=s.__get_tzname=s.asm.Fb).apply(null,arguments)},Kt=s.__get_daylight=function(){return(Kt=s.__get_daylight=s.asm.Gb).apply(null,arguments)},en=s.__get_timezone=function(){return(en=s.__get_timezone=s.asm.Hb).apply(null,arguments)},tn=s.stackSave=function(){return(tn=s.stackSave=s.asm.Ib).apply(null,arguments)},nn=s.stackRestore=function(){return(nn=s.stackRestore=s.asm.Jb).apply(null,arguments)},rn=s.stackAlloc=function(){return(rn=s.stackAlloc=s.asm.Kb).apply(null,arguments)},an=s._emscripten_stack_set_limits=function(){return(an=s._emscripten_stack_set_limits=s.asm.Lb).apply(null,arguments)},on=s._memalign=function(){return(on=s._memalign=s.asm.Mb).apply(null,arguments)},un=s.__emscripten_allow_main_runtime_queued_calls=985500,sn=s.__emscripten_main_thread_futex=989508;function cn(e){this.name=\\\"ExitStatus\\\",this.message=\\\"Program terminated with exit(\\\"+e+\\\")\\\",this.status=e}function ln(){function e(){if(!Yt&&(Yt=!0,s.calledRun=!0,!F)&&(A||ge(ne),c(s),s.onRuntimeInitialized&&s.onRuntimeInitialized(),!A)){if(s.postRun)for(\\\"function\\\"==typeof s.postRun&&(s.postRun=[s.postRun]);s.postRun.length;){var e=s.postRun.shift();ie.unshift(e)}ge(ie)}}if(!(0<ce))if(A)c(s),A||ge(ne),postMessage({cmd:\\\"loaded\\\"});else{if(!A){if(s.preRun)for(\\\"function\\\"==typeof s.preRun&&(s.preRun=[s.preRun]);s.preRun.length;)ue();ge(te)}0<ce||(s.setStatus?(s.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){s.setStatus(\\\"\\\")}),1),e()}),1)):e())}}function fn(e){if(C=e,A)throw postMessage({cmd:\\\"exitProcess\\\",returnCode:e}),new cn(e);oe()||(_e.vc(),A||(ge(re),\\\"undefined\\\"!=typeof _fflush&&_fflush(0),xe[1].length&&ke(1,10),xe[2].length&&ke(2,10))),C=e,oe()||(_e.vc(),s.onExit&&s.onExit(e),F=!0),b(e,new cn(e))}if(s.UTF8ToString=G,s.stringToUTF8=$,s.lengthBytesUTF8=Q,s.keepRuntimeAlive=oe,s.PThread=_e,s.stackSave=tn,s.stackRestore=nn,s.stackAlloc=rn,s.PThread=_e,s.wasmMemory=R,s.ExitStatus=cn,fe=function e(){Yt||ln(),Yt||(fe=e)},s.run=ln,s.preInit)for(\\\"function\\\"==typeof s.preInit&&(s.preInit=[s.preInit]);0<s.preInit.length;)s.preInit.pop()();return A&&(D=!1,_e.Hc()),ln(),e.ready});e.exports=r},118:e=>{\\\"use strict\\\";e.exports='\\\"use strict\\\";var e={};if(\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node&&void 0===global.Worker){var a=require(\\\"worker_threads\\\"),t=a.parentPort;t.on(\\\"message\\\",(function(e){onmessage({data:e})}));var r=require(\\\"fs\\\");Object.assign(global,{self:global,require:require,Module:e,location:{href:__filename},Worker:a.Worker,importScripts:function(e){(0,eval)(r.readFileSync(e,\\\"utf8\\\"))},postMessage:function(e){t.postMessage(e)},performance:global.performance||{now:function(){return Date.now()}}})}var s=function(){var e=Array.prototype.slice.call(arguments).join(\\\" \\\");console.error(e)};self.alert=function(){var a=Array.prototype.slice.call(arguments).join(\\\" \\\");postMessage({cmd:\\\"alert\\\",text:a,threadId:e._pthread_self()})},e.instantiateWasm=function(a,t){var r=new WebAssembly.Instance(e.wasmModule,a);return t(r),e.wasmModule=null,r.exports},self.onmessage=function(a){try{if(\\\"load\\\"===a.data.cmd){if(e.wasmModule=a.data.wasmModule,e.wasmMemory=a.data.wasmMemory,e.buffer=e.wasmMemory.buffer,e.ENVIRONMENT_IS_PTHREAD=!0,\\\"string\\\"==typeof a.data.urlOrBlob)importScripts(a.data.urlOrBlob);else{var t=URL.createObjectURL(a.data.urlOrBlob);importScripts(t),URL.revokeObjectURL(t)}ortWasmThreaded(e).then((function(a){e=a}))}else if(\\\"objectTransfer\\\"===a.data.cmd)e.PThread.receiveObjectTransfer(a.data);else if(\\\"run\\\"===a.data.cmd){e.__performance_now_clock_drift=performance.now()-a.data.time,e.__emscripten_thread_init(a.data.threadInfoStruct,0,0);var r=a.data.stackBase,o=a.data.stackBase+a.data.stackSize;e.establishStackSpace(o,r),e.PThread.receiveObjectTransfer(a.data),e.PThread.threadInit();try{var n=e.invokeEntryPoint(a.data.start_routine,a.data.arg);e.keepRuntimeAlive()?e.PThread.setExitStatus(n):e.PThread.threadExit(n)}catch(a){if(\\\"Canceled!\\\"===a)e.PThread.threadCancel();else if(\\\"unwind\\\"!=a){if(!(a instanceof e.ExitStatus))throw e.PThread.threadExit(-2),a;e.keepRuntimeAlive()||e.PThread.threadExit(a.status)}}}else\\\"cancel\\\"===a.data.cmd?e._pthread_self()&&e.PThread.threadCancel():\\\"setimmediate\\\"===a.data.target||(\\\"processThreadQueue\\\"===a.data.cmd?e._pthread_self()&&e._emscripten_current_thread_process_queued_calls():(s(\\\"worker.js received unknown command \\\"+a.data.cmd),s(a.data)))}catch(e){throw s(\\\"worker.js onmessage() captured an uncaught exception: \\\"+e),e&&e.stack&&s(e.stack),e}};\\\\n'},932:(e,t,n)=>{var _scriptDir,r=(_scriptDir=(_scriptDir=\\\"undefined\\\"!=typeof document&&document.currentScript?document.currentScript.src:void 0)||\\\"/index.js\\\",function(e){var t,r,i;e=e||{},t||(t=void 0!==e?e:{}),t.ready=new Promise((function(e,t){r=e,i=t}));var a,o={};for(a in t)t.hasOwnProperty(a)&&(o[a]=t[a]);var u,s,c,l,f,d=\\\"./this.program\\\",p=\\\"object\\\"==typeof window,b=\\\"function\\\"==typeof importScripts,h=\\\"object\\\"==typeof process&&\\\"object\\\"==typeof process.versions&&\\\"string\\\"==typeof process.versions.node,g=\\\"\\\";h?(g=b?n(908).dirname(g)+\\\"/\\\":\\\"//\\\",u=function(e,t){return l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFileSync(e,t?null:\\\"utf8\\\")},c=function(e){return(e=u(e,!0)).buffer||(e=new Uint8Array(e)),e.buffer||B(\\\"Assertion failed: undefined\\\"),e},s=function(e,t,r){l||(l=n(384)),f||(f=n(908)),e=f.normalize(e),l.readFile(e,(function(e,n){e?r(e):t(n.buffer)}))},1<process.argv.length&&(d=process.argv[1].replace(/\\\\\\\\/g,\\\"/\\\")),process.argv.slice(2),process.on(\\\"uncaughtException\\\",(function(e){throw e})),process.on(\\\"unhandledRejection\\\",B),t.inspect=function(){return\\\"[Emscripten Module object]\\\"}):(p||b)&&(b?g=self.location.href:\\\"undefined\\\"!=typeof document&&document.currentScript&&(g=document.currentScript.src),_scriptDir&&(g=_scriptDir),g=0!==g.indexOf(\\\"blob:\\\")?g.substr(0,g.lastIndexOf(\\\"/\\\")+1):\\\"\\\",u=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.send(null),t.responseText},b&&(c=function(e){var t=new XMLHttpRequest;return t.open(\\\"GET\\\",e,!1),t.responseType=\\\"arraybuffer\\\",t.send(null),new Uint8Array(t.response)}),s=function(e,t,n){var r=new XMLHttpRequest;r.open(\\\"GET\\\",e,!0),r.responseType=\\\"arraybuffer\\\",r.onload=function(){200==r.status||0==r.status&&r.response?t(r.response):n()},r.onerror=n,r.send(null)});var m,y=t.print||console.log.bind(console),v=t.printErr||console.warn.bind(console);for(a in o)o.hasOwnProperty(a)&&(t[a]=o[a]);o=null,t.thisProgram&&(d=t.thisProgram),t.wasmBinary&&(m=t.wasmBinary),t.noExitRuntime,\\\"object\\\"!=typeof WebAssembly&&B(\\\"no native wasm support detected\\\");var _,w,O,A,E,T,S,M=!1,x=\\\"undefined\\\"!=typeof TextDecoder?new TextDecoder(\\\"utf8\\\"):void 0;function k(e,t,n){var r=t+n;for(n=t;e[n]&&!(n>=r);)++n;if(16<n-t&&e.subarray&&x)return x.decode(e.subarray(t,n));for(r=\\\"\\\";t<n;){var i=e[t++];if(128&i){var a=63&e[t++];if(192==(224&i))r+=String.fromCharCode((31&i)<<6|a);else{var o=63&e[t++];65536>(i=224==(240&i)?(15&i)<<12|a<<6|o:(7&i)<<18|a<<12|o<<6|63&e[t++])?r+=String.fromCharCode(i):(i-=65536,r+=String.fromCharCode(55296|i>>10,56320|1023&i))}}else r+=String.fromCharCode(i)}return r}function j(e,t){return e?k(A,e,t):\\\"\\\"}function D(e,t,n,r){if(!(0<r))return 0;var i=n;r=n+r-1;for(var a=0;a<e.length;++a){var o=e.charCodeAt(a);if(55296<=o&&57343>=o&&(o=65536+((1023&o)<<10)|1023&e.charCodeAt(++a)),127>=o){if(n>=r)break;t[n++]=o}else{if(2047>=o){if(n+1>=r)break;t[n++]=192|o>>6}else{if(65535>=o){if(n+2>=r)break;t[n++]=224|o>>12}else{if(n+3>=r)break;t[n++]=240|o>>18,t[n++]=128|o>>12&63}t[n++]=128|o>>6&63}t[n++]=128|63&o}}return t[n]=0,n-i}function R(e){for(var t=0,n=0;n<e.length;++n){var r=e.charCodeAt(n);55296<=r&&57343>=r&&(r=65536+((1023&r)<<10)|1023&e.charCodeAt(++n)),127>=r?++t:t=2047>=r?t+2:65535>=r?t+3:t+4}return t}function P(e){var t=R(e)+1,n=je(t);return n&&D(e,O,n,t),n}function C(){var e=_.buffer;w=e,t.HEAP8=O=new Int8Array(e),t.HEAP16=new Int16Array(e),t.HEAP32=E=new Int32Array(e),t.HEAPU8=A=new Uint8Array(e),t.HEAPU16=new Uint16Array(e),t.HEAPU32=T=new Uint32Array(e),t.HEAPF32=S=new Float32Array(e),t.HEAPF64=new Float64Array(e)}var F,I=[],U=[],W=[],L=[];function Y(){var e=t.preRun.shift();I.unshift(e)}var N,H=0,q=null,z=null;function B(e){throw t.onAbort&&t.onAbort(e),v(e),M=!0,e=new WebAssembly.RuntimeError(\\\"abort(\\\"+e+\\\"). Build with -s ASSERTIONS=1 for more info.\\\"),i(e),e}function X(){return N.startsWith(\\\"data:application/octet-stream;base64,\\\")}if(t.preloadedImages={},t.preloadedAudios={},N=\\\"ort-wasm.wasm\\\",!X()){var G=N;N=t.locateFile?t.locateFile(G,g):g+G}function V(){var e=N;try{if(e==N&&m)return new Uint8Array(m);if(c)return c(e);throw\\\"both async and sync fetching of the wasm failed\\\"}catch(e){B(e)}}function $(e){for(;0<e.length;){var n=e.shift();if(\\\"function\\\"==typeof n)n(t);else{var r=n.sb;\\\"number\\\"==typeof r?void 0===n.ib?F.get(r)():F.get(r)(n.ib):r(void 0===n.ib?null:n.ib)}}}function Q(e){this.kb=e-16,this.Cb=function(e){E[this.kb+4>>2]=e},this.zb=function(e){E[this.kb+8>>2]=e},this.Ab=function(){E[this.kb>>2]=0},this.yb=function(){O[this.kb+12>>0]=0},this.Bb=function(){O[this.kb+13>>0]=0},this.ub=function(e,t){this.Cb(e),this.zb(t),this.Ab(),this.yb(),this.Bb()}}var Z,J={},K=[null,[],[]],ee={};Z=h?function(){var e=process.hrtime();return 1e3*e[0]+e[1]/1e6}:function(){return performance.now()};var te=[\\\"explicit\\\",\\\"same-upper\\\",\\\"same-lower\\\"],ne=[\\\"oihw\\\",\\\"hwio\\\",\\\"ohwi\\\",\\\"ihwo\\\"],re=[\\\"nchw\\\",\\\"nhwc\\\"],ie=\\\"float32 float16 int32 uint32 int8 uint8\\\".split(\\\" \\\");function ae(e,t){if(0!==e&&0!==t){for(var n=[],r=0;r<e;++r,t+=4)n.push(E[t>>2]);return n}}function oe(e,t=\\\"float32\\\"){const n=E[e>>2]+T[e+8>>2];return e=T[e+4>>2],\\\"float32\\\"===t||B(\\\"Assertion failed: undefined\\\"),new Float32Array(A.buffer,n,e/Float32Array.BYTES_PER_ELEMENT)}function ue(e){return{type:ie[T[e>>2]],dimensions:ae(T[e+8>>2],E[e+4>>2])}}function se(e){return{windowDimensions:ae(T[e>>2],E[e+4>>2]),padding:\\\"explicit\\\"===te[E[e+32>>2]]?ae(T[e+8>>2],E[e+12>>2]):void 0,strides:ae(T[e+16>>2],E[e+20>>2]),dilations:ae(T[e+24>>2],E[e+28>>2]),autoPad:te[E[e+32>>2]],layout:re[E[e+36>>2]]}}var ce,le,fe,de,pe,be,he,ge,me,ye,ve={};function _e(){if(!me){var e,t={USER:\\\"web_user\\\",LOGNAME:\\\"web_user\\\",PATH:\\\"/\\\",PWD:\\\"/\\\",HOME:\\\"/home/web_user\\\",LANG:(\\\"object\\\"==typeof navigator&&navigator.languages&&navigator.languages[0]||\\\"C\\\").replace(\\\"-\\\",\\\"_\\\")+\\\".UTF-8\\\",_:d||\\\"./this.program\\\"};for(e in ve)void 0===ve[e]?delete t[e]:t[e]=ve[e];var n=[];for(e in t)n.push(e+\\\"=\\\"+t[e]);me=n}return me}function we(){function e(e){return(e=e.toTimeString().match(/\\\\(([A-Za-z ]+)\\\\)$/))?e[1]:\\\"GMT\\\"}if(!ye){ye=!0;var t=(new Date).getFullYear(),n=new Date(t,0,1),r=new Date(t,6,1);t=n.getTimezoneOffset();var i=r.getTimezoneOffset(),a=Math.max(t,i);E[Fe()>>2]=60*a,E[Ce()>>2]=Number(t!=i),n=e(n),r=e(r),n=P(n),r=P(r),i<t?(E[Pe()>>2]=n,E[Pe()+4>>2]=r):(E[Pe()>>2]=r,E[Pe()+4>>2]=n)}}function Oe(e){return 0==e%4&&(0!=e%100||0==e%400)}function Ae(e,t){for(var n=0,r=0;r<=t;n+=e[r++]);return n}var Ee=[31,29,31,30,31,30,31,31,30,31,30,31],Te=[31,28,31,30,31,30,31,31,30,31,30,31];function Se(e,t){for(e=new Date(e.getTime());0<t;){var n=e.getMonth(),r=(Oe(e.getFullYear())?Ee:Te)[n];if(!(t>r-e.getDate())){e.setDate(e.getDate()+t);break}t-=r-e.getDate()+1,e.setDate(1),11>n?e.setMonth(n+1):(e.setMonth(0),e.setFullYear(e.getFullYear()+1))}return e}function Me(e,t,n,r){function i(e,t,n){for(e=\\\"number\\\"==typeof e?e.toString():e||\\\"\\\";e.length<t;)e=n[0]+e;return e}function a(e,t){return i(e,t,\\\"0\\\")}function o(e,t){function n(e){return 0>e?-1:0<e?1:0}var r;return 0===(r=n(e.getFullYear()-t.getFullYear()))&&0===(r=n(e.getMonth()-t.getMonth()))&&(r=n(e.getDate()-t.getDate())),r}function u(e){switch(e.getDay()){case 0:return new Date(e.getFullYear()-1,11,29);case 1:return e;case 2:return new Date(e.getFullYear(),0,3);case 3:return new Date(e.getFullYear(),0,2);case 4:return new Date(e.getFullYear(),0,1);case 5:return new Date(e.getFullYear()-1,11,31);case 6:return new Date(e.getFullYear()-1,11,30)}}function s(e){e=Se(new Date(e.gb+1900,0,1),e.pb);var t=new Date(e.getFullYear()+1,0,4),n=u(new Date(e.getFullYear(),0,4));return t=u(t),0>=o(n,e)?0>=o(t,e)?e.getFullYear()+1:e.getFullYear():e.getFullYear()-1}var c=E[r+40>>2];for(var l in r={Fb:E[r>>2],Eb:E[r+4>>2],nb:E[r+8>>2],lb:E[r+12>>2],hb:E[r+16>>2],gb:E[r+20>>2],ob:E[r+24>>2],pb:E[r+28>>2],Nb:E[r+32>>2],Db:E[r+36>>2],Gb:c?j(c):\\\"\\\"},n=j(n),c={\\\"%c\\\":\\\"%a %b %d %H:%M:%S %Y\\\",\\\"%D\\\":\\\"%m/%d/%y\\\",\\\"%F\\\":\\\"%Y-%m-%d\\\",\\\"%h\\\":\\\"%b\\\",\\\"%r\\\":\\\"%I:%M:%S %p\\\",\\\"%R\\\":\\\"%H:%M\\\",\\\"%T\\\":\\\"%H:%M:%S\\\",\\\"%x\\\":\\\"%m/%d/%y\\\",\\\"%X\\\":\\\"%H:%M:%S\\\",\\\"%Ec\\\":\\\"%c\\\",\\\"%EC\\\":\\\"%C\\\",\\\"%Ex\\\":\\\"%m/%d/%y\\\",\\\"%EX\\\":\\\"%H:%M:%S\\\",\\\"%Ey\\\":\\\"%y\\\",\\\"%EY\\\":\\\"%Y\\\",\\\"%Od\\\":\\\"%d\\\",\\\"%Oe\\\":\\\"%e\\\",\\\"%OH\\\":\\\"%H\\\",\\\"%OI\\\":\\\"%I\\\",\\\"%Om\\\":\\\"%m\\\",\\\"%OM\\\":\\\"%M\\\",\\\"%OS\\\":\\\"%S\\\",\\\"%Ou\\\":\\\"%u\\\",\\\"%OU\\\":\\\"%U\\\",\\\"%OV\\\":\\\"%V\\\",\\\"%Ow\\\":\\\"%w\\\",\\\"%OW\\\":\\\"%W\\\",\\\"%Oy\\\":\\\"%y\\\"})n=n.replace(new RegExp(l,\\\"g\\\"),c[l]);var f=\\\"Sunday Monday Tuesday Wednesday Thursday Friday Saturday\\\".split(\\\" \\\"),d=\\\"January February March April May June July August September October November December\\\".split(\\\" \\\");for(l in c={\\\"%a\\\":function(e){return f[e.ob].substring(0,3)},\\\"%A\\\":function(e){return f[e.ob]},\\\"%b\\\":function(e){return d[e.hb].substring(0,3)},\\\"%B\\\":function(e){return d[e.hb]},\\\"%C\\\":function(e){return a((e.gb+1900)/100|0,2)},\\\"%d\\\":function(e){return a(e.lb,2)},\\\"%e\\\":function(e){return i(e.lb,2,\\\" \\\")},\\\"%g\\\":function(e){return s(e).toString().substring(2)},\\\"%G\\\":function(e){return s(e)},\\\"%H\\\":function(e){return a(e.nb,2)},\\\"%I\\\":function(e){return 0==(e=e.nb)?e=12:12<e&&(e-=12),a(e,2)},\\\"%j\\\":function(e){return a(e.lb+Ae(Oe(e.gb+1900)?Ee:Te,e.hb-1),3)},\\\"%m\\\":function(e){return a(e.hb+1,2)},\\\"%M\\\":function(e){return a(e.Eb,2)},\\\"%n\\\":function(){return\\\"\\\\n\\\"},\\\"%p\\\":function(e){return 0<=e.nb&&12>e.nb?\\\"AM\\\":\\\"PM\\\"},\\\"%S\\\":function(e){return a(e.Fb,2)},\\\"%t\\\":function(){return\\\"\\\\t\\\"},\\\"%u\\\":function(e){return e.ob||7},\\\"%U\\\":function(e){var t=new Date(e.gb+1900,0,1),n=0===t.getDay()?t:Se(t,7-t.getDay());return 0>o(n,e=new Date(e.gb+1900,e.hb,e.lb))?a(Math.ceil((31-n.getDate()+(Ae(Oe(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%V\\\":function(e){var t=new Date(e.gb+1901,0,4),n=u(new Date(e.gb+1900,0,4));t=u(t);var r=Se(new Date(e.gb+1900,0,1),e.pb);return 0>o(r,n)?\\\"53\\\":0>=o(t,r)?\\\"01\\\":a(Math.ceil((n.getFullYear()<e.gb+1900?e.pb+32-n.getDate():e.pb+1-n.getDate())/7),2)},\\\"%w\\\":function(e){return e.ob},\\\"%W\\\":function(e){var t=new Date(e.gb,0,1),n=1===t.getDay()?t:Se(t,0===t.getDay()?1:7-t.getDay()+1);return 0>o(n,e=new Date(e.gb+1900,e.hb,e.lb))?a(Math.ceil((31-n.getDate()+(Ae(Oe(e.getFullYear())?Ee:Te,e.getMonth()-1)-31)+e.getDate())/7),2):0===o(n,t)?\\\"01\\\":\\\"00\\\"},\\\"%y\\\":function(e){return(e.gb+1900).toString().substring(2)},\\\"%Y\\\":function(e){return e.gb+1900},\\\"%z\\\":function(e){var t=0<=(e=e.Db);return e=Math.abs(e)/60,(t?\\\"+\\\":\\\"-\\\")+String(\\\"0000\\\"+(e/60*100+e%60)).slice(-4)},\\\"%Z\\\":function(e){return e.Gb},\\\"%%\\\":function(){return\\\"%\\\"}})n.includes(l)&&(n=n.replace(new RegExp(l,\\\"g\\\"),c[l](r)));return(l=function(e){var t=Array(R(e)+1);return D(e,t,0,t.length),t}(n)).length>t?0:(O.set(l,e),l.length-1)}ce||(ce=ce||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}},le=le||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}},fe=fe||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}},de=de||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}},pe=pe||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}},be=be||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}},he=he||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}},ge=ge||{jb:{},xb:1,create:function(e,t){t=t||{};var n=this.xb++;return t.qb=1,t.object=e,this.jb[n]=t,n},get:function(e){if(0!==e)return this.jb[e].object},mb:function(e){this.jb[e].qb++},release:function(e){var t=this.jb[e];t.qb--,0>=t.qb&&delete this.jb[e]}});var xe={a:function(e){return je(e+16)+16},c:function(e,t){W.unshift({sb:e,ib:t})},f:function(e,t){W.unshift({sb:e,ib:t})},b:function(e,t,n){throw new Q(e).ub(t,n),e},K:function(e,t){return e=j(e),ee.Hb(e,t)},o:function(){return 0},R:function(){},L:function(){},r:function(){return 42},B:function(){return 0},M:function(){},Q:function(e,t){return e=j(e),ee.Ib(e,t)},P:function(e,t,n,r,i,a){if(a<<=12,0!=(16&r)&&0!=e%65536)t=-28;else if(0!=(32&r)){e=65536*Math.ceil(t/65536);var o=Le(65536,e);o?(A.fill(0,o,o+e),e=o):e=0,e?(J[e]={wb:e,vb:t,tb:!0,fd:i,Mb:n,flags:r,offset:a},t=e):t=-48}else t=-52;return t},N:function(e,t){var n=J[e];return 0!==t&&n?(t===n.vb&&(J[e]=null,n.tb&&Re(n.wb)),e=0):e=-28,e},m:function(){},J:function(e,t,n){return e=j(e),ee.Jb(e,t,n)},G:function(){},s:function(){},I:function(){},k:function(){B()},v:function(e,t){if(0===e)e=Date.now();else{if(1!==e&&4!==e)return E[De()>>2]=28,-1;e=Z()}return E[t>>2]=e/1e3|0,E[t+4>>2]=e%1e3*1e6|0,0},H:function(e,t){return e-t},za:function(){B(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},j:function(){B(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},Aa:function(){B(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},ya:function(){B(\\\"To use dlopen, you need to use Emscripten's linking support, see https://github.com/emscripten-core/emscripten/wiki/Linking\\\")},S:function(){return 2147483648},A:function(e,t,n){A.copyWithin(e,t,t+n)},l:function(e){var t=A.length;if(2147483648<(e>>>=0))return!1;for(var n=1;4>=n;n*=2){var r=t*(1+.2/n);r=Math.min(r,e+100663296),0<(r=Math.max(e,r))%65536&&(r+=65536-r%65536);e:{try{_.grow(Math.min(2147483648,r)-w.byteLength+65535>>>16),C();var i=1;break e}catch(e){}i=void 0}if(i)return!0}return!1},F:function(e){for(var t=Z();Z()-t<e;);},wa:function(e){var t={devicePreference:\\\"default\\\",powerPreference:\\\"default\\\"};return 0!==e&&(t={devicePreference:[\\\"default\\\",\\\"gpu\\\",\\\"cpu\\\"][T[e>>2]],powerPreference:[\\\"default\\\",\\\"high-performance\\\",\\\"low-power\\\"][T[e+4>>2]]}),ce.create(navigator.ml.createContext(t))},D:function(e,t){var n=0;return _e().forEach((function(r,i){var a=t+n;for(i=E[e+4*i>>2]=a,a=0;a<r.length;++a)O[i++>>0]=r.charCodeAt(a);O[i>>0]=0,n+=r.length+1})),0},E:function(e,t){var n=_e();E[e>>2]=n.length;var r=0;return n.forEach((function(e){r+=e.length+1})),E[t>>2]=r,0},i:function(){return 0},C:function(e,t){return e=1==e||2==e?2:B(),O[t>>0]=e,0},p:function(e,t,n,r){return e=ee.Lb(e),t=ee.Kb(e,t,n),E[r>>2]=t,0},z:function(){},q:function(e,t,n,r){for(var i=0,a=0;a<n;a++){for(var o=E[t+8*a>>2],u=E[t+(8*a+4)>>2],s=0;s<u;s++){var c=A[o+s],l=K[e];0===c||10===c?((1===e?y:v)(k(l,0)),l.length=0):l.push(c)}i+=u}return E[r>>2]=i,0},ca:function(e){var t=Date.now();return E[e>>2]=t/1e3|0,E[e+4>>2]=t%1e3*1e3|0,0},O:function e(t,n){return t=new Date(1e3*E[t>>2]),E[n>>2]=t.getUTCSeconds(),E[n+4>>2]=t.getUTCMinutes(),E[n+8>>2]=t.getUTCHours(),E[n+12>>2]=t.getUTCDate(),E[n+16>>2]=t.getUTCMonth(),E[n+20>>2]=t.getUTCFullYear()-1900,E[n+24>>2]=t.getUTCDay(),E[n+36>>2]=0,E[n+32>>2]=0,E[n+28>>2]=(t.getTime()-Date.UTC(t.getUTCFullYear(),0,1,0,0,0,0))/864e5|0,e.rb||(e.rb=P(\\\"GMT\\\")),E[n+40>>2]=e.rb,n},t:function(e,t){we(),e=new Date(1e3*E[e>>2]),E[t>>2]=e.getSeconds(),E[t+4>>2]=e.getMinutes(),E[t+8>>2]=e.getHours(),E[t+12>>2]=e.getDate(),E[t+16>>2]=e.getMonth(),E[t+20>>2]=e.getFullYear()-1900,E[t+24>>2]=e.getDay();var n=new Date(e.getFullYear(),0,1);E[t+28>>2]=(e.getTime()-n.getTime())/864e5|0,E[t+36>>2]=-60*e.getTimezoneOffset();var r=new Date(e.getFullYear(),6,1).getTimezoneOffset();return e=0|(r!=(n=n.getTimezoneOffset())&&e.getTimezoneOffset()==Math.min(n,r)),E[t+32>>2]=e,e=E[Pe()+(e?4:0)>>2],E[t+40>>2]=e,t},n:function(e){we();var t=new Date(E[e+20>>2]+1900,E[e+16>>2],E[e+12>>2],E[e+8>>2],E[e+4>>2],E[e>>2],0),n=E[e+32>>2],r=t.getTimezoneOffset(),i=new Date(t.getFullYear(),0,1),a=new Date(t.getFullYear(),6,1).getTimezoneOffset(),o=i.getTimezoneOffset(),u=Math.min(o,a);return 0>n?E[e+32>>2]=Number(a!=o&&u==r):0<n!=(u==r)&&(a=Math.max(o,a),t.setTime(t.getTime()+6e4*((0<n?u:a)-r))),E[e+24>>2]=t.getDay(),E[e+28>>2]=(t.getTime()-i.getTime())/864e5|0,E[e>>2]=t.getSeconds(),E[e+4>>2]=t.getMinutes(),E[e+8>>2]=t.getHours(),E[e+12>>2]=t.getDate(),E[e+16>>2]=t.getMonth(),t.getTime()/1e3|0},y:function(e){ce.mb(e)},x:function(e){ce.release(e)},ta:function(e,t,n){return e=fe.get(e),t=he.get(t),n=he.get(n),n=e.add(t,n),he.create(n)},sa:function(e,t,n){return e=fe.get(e),t=he.get(t),n=se(n),n=e.averagePool2d(t,n),he.create(n)},ra:function(e,t,n,r,i){return e=fe.get(e),t=he.get(t),n=he.get(n),r=he.get(r),i={scale:he.get(E[i>>2]),bias:he.get(E[i+4>>2]),axis:E[i+8>>2],epsilon:S[i+12>>2],activation:ge.get(E[i+16>>2])},i=e.batchNormalization(t,n,r,i),he.create(i)},qa:function(e,t){e=fe.get(e),t=be.get(t);try{var n=e.build(t);return le.create(n)}catch(e){return console.log(\\\"builder.build failed: \\\"+e),0}},pa:function(e,t,n){return e=fe.get(e),t=he.get(t),n=e.clamp(t,{minValue:S[n>>2],maxValue:S[n+4>>2]}),he.create(n)},oa:function(e,t,n,r){e=fe.get(e),t=ae(t,n),n=[];for(var i=0;i<t.length;++i)n.push(he.get(t[i]));return r=e.concat(n,r),he.create(r)},na:function(e,t,n){return e=fe.get(e),n=oe(n,(t=ue(t)).type),n=void 0===t.dimensions?e.constant(n[0]):e.constant(t,n),he.create(n)},ma:function(e,t,n,r){return e=fe.get(e),t=he.get(t),n=he.get(n),r={padding:\\\"explicit\\\"===te[E[r+40>>2]]?ae(T[r>>2],E[r+4>>2]):void 0,strides:ae(T[r+8>>2],E[r+12>>2]),dilations:ae(T[r+16>>2],E[r+20>>2]),autoPad:te[E[r+40>>2]],groups:E[r+48>>2],inputLayout:re[E[r+52>>2]],filterLayout:ne[E[r+56>>2]],bias:he.get(E[r+60>>2]),activation:ge.get(E[r+64>>2])},r=e.conv2d(t,n,r),he.create(r)},la:function(e,t,n,r){return e=fe.get(e),t=he.get(t),n=he.get(n),r={c:he.get(E[r>>2]),alpha:S[r+4>>2],beta:S[r+8>>2],aTranspose:0!==O[r+12>>0],bTranspose:0!==O[r+13>>0]},r=e.gemm(t,n,r),he.create(r)},ka:function(e,t,n){return e=fe.get(e),t=j(t),n=ue(n),n=e.input(t,n),he.create(n)},ja:function(e,t,n){return e=fe.get(e),t=he.get(t),n=e.leakyRelu(t,{alpha:S[n>>2]}),he.create(n)},ia:function(e,t){return e=fe.get(e).leakyRelu({alpha:S[t>>2]}),ge.create(e)},ha:function(e,t,n){return e=fe.get(e),t=he.get(t),n=he.get(n),n=e.matmul(t,n),he.create(n)},ga:function(e,t,n){return e=fe.get(e),t=he.get(t),n=se(n),n=e.maxPool2d(t,n),he.create(n)},u:function(e){fe.release(e)},fa:function(e,t){return e=fe.get(e),t=he.get(t),t=e.relu(t),he.create(t)},ea:function(e){return e=fe.get(e).relu(),ge.create(e)},da:function(e,t,n,r){return e=fe.get(e),t=he.get(t),n=ae(r,n),n=e.reshape(t,n),he.create(n)},va:function(e,t,n){return e=le.get(e),t=de.get(t),n=pe.get(n),e.compute(t,n)},ua:function(e){le.mb(e)},w:function(e){le.release(e)},aa:function(e){de.release(e)},ba:function(e,t,n){e=de.get(e),t=j(t),n=0===E[n+12>>2]?oe(n+0):{resource:oe(n+0),dimensions:ae(T[n+16>>2],E[n+12>>2])},e[t]=n},_:function(e){be.release(e)},$:function(e,t,n){e=be.get(e),t=j(t),n=he.get(n),e[t]=n},Y:function(e){pe.release(e)},Z:function(e,t,n){e=pe.get(e),t=j(t),n=oe(n),e[t]=n},e:function(e){he.mb(e)},d:function(e){he.release(e)},X:function(e){ge.mb(e)},h:function(e){ge.release(e)},xa:Me,g:function(e,t,n,r){return Me(e,t,n,r)},W:function(e){return e=ce.get(e),e=new MLGraphBuilder(e),fe.create(e)},V:function(){return de.create({})},U:function(){return be.create({})},T:function(){return pe.create({})}};!function(){function e(e){t.asm=e.exports,_=t.asm.Ba,C(),F=t.asm.fb,U.unshift(t.asm.Ca),H--,t.monitorRunDependencies&&t.monitorRunDependencies(H),0==H&&(null!==q&&(clearInterval(q),q=null),z&&(e=z,z=null,e()))}function n(t){e(t.instance)}function r(e){return function(){if(!m&&(p||b)){if(\\\"function\\\"==typeof fetch&&!N.startsWith(\\\"file://\\\"))return fetch(N,{credentials:\\\"same-origin\\\"}).then((function(e){if(!e.ok)throw\\\"failed to load wasm binary file at '\\\"+N+\\\"'\\\";return e.arrayBuffer()})).catch((function(){return V()}));if(s)return new Promise((function(e,t){s(N,(function(t){e(new Uint8Array(t))}),t)}))}return Promise.resolve().then((function(){return V()}))}().then((function(e){return WebAssembly.instantiate(e,a)})).then(e,(function(e){v(\\\"failed to asynchronously prepare wasm: \\\"+e),B(e)}))}var a={a:xe};if(H++,t.monitorRunDependencies&&t.monitorRunDependencies(H),t.instantiateWasm)try{return t.instantiateWasm(a,e)}catch(e){return v(\\\"Module.instantiateWasm callback failed with error: \\\"+e),!1}(m||\\\"function\\\"!=typeof WebAssembly.instantiateStreaming||X()||N.startsWith(\\\"file://\\\")||\\\"function\\\"!=typeof fetch?r(n):fetch(N,{credentials:\\\"same-origin\\\"}).then((function(e){return WebAssembly.instantiateStreaming(e,a).then(n,(function(e){return v(\\\"wasm streaming compile failed: \\\"+e),v(\\\"falling back to ArrayBuffer instantiation\\\"),r(n)}))}))).catch(i)}(),t.___wasm_call_ctors=function(){return(t.___wasm_call_ctors=t.asm.Ca).apply(null,arguments)},t._OrtInit=function(){return(t._OrtInit=t.asm.Da).apply(null,arguments)},t._OrtCreateSessionOptions=function(){return(t._OrtCreateSessionOptions=t.asm.Ea).apply(null,arguments)},t._OrtSessionOptionsAppendExecutionProviderWebNN=function(){return(t._OrtSessionOptionsAppendExecutionProviderWebNN=t.asm.Fa).apply(null,arguments)},t._OrtAddSessionConfigEntry=function(){return(t._OrtAddSessionConfigEntry=t.asm.Ga).apply(null,arguments)},t._OrtReleaseSessionOptions=function(){return(t._OrtReleaseSessionOptions=t.asm.Ha).apply(null,arguments)},t._OrtCreateSession=function(){return(t._OrtCreateSession=t.asm.Ia).apply(null,arguments)},t._OrtReleaseSession=function(){return(t._OrtReleaseSession=t.asm.Ja).apply(null,arguments)},t._OrtGetInputCount=function(){return(t._OrtGetInputCount=t.asm.Ka).apply(null,arguments)},t._OrtGetOutputCount=function(){return(t._OrtGetOutputCount=t.asm.La).apply(null,arguments)},t._OrtGetInputName=function(){return(t._OrtGetInputName=t.asm.Ma).apply(null,arguments)},t._OrtGetOutputName=function(){return(t._OrtGetOutputName=t.asm.Na).apply(null,arguments)},t._OrtFree=function(){return(t._OrtFree=t.asm.Oa).apply(null,arguments)},t._OrtCreateTensor=function(){return(t._OrtCreateTensor=t.asm.Pa).apply(null,arguments)},t._OrtGetTensorData=function(){return(t._OrtGetTensorData=t.asm.Qa).apply(null,arguments)},t._OrtReleaseTensor=function(){return(t._OrtReleaseTensor=t.asm.Ra).apply(null,arguments)},t._OrtCreateRunOptions=function(){return(t._OrtCreateRunOptions=t.asm.Sa).apply(null,arguments)},t._OrtAddRunConfigEntry=function(){return(t._OrtAddRunConfigEntry=t.asm.Ta).apply(null,arguments)},t._OrtReleaseRunOptions=function(){return(t._OrtReleaseRunOptions=t.asm.Ua).apply(null,arguments)},t._OrtRun=function(){return(t._OrtRun=t.asm.Va).apply(null,arguments)},t._OrtEndProfiling=function(){return(t._OrtEndProfiling=t.asm.Wa).apply(null,arguments)};var ke,je=t._malloc=function(){return(je=t._malloc=t.asm.Xa).apply(null,arguments)},De=t.___errno_location=function(){return(De=t.___errno_location=t.asm.Ya).apply(null,arguments)},Re=t._free=function(){return(Re=t._free=t.asm.Za).apply(null,arguments)},Pe=t.__get_tzname=function(){return(Pe=t.__get_tzname=t.asm._a).apply(null,arguments)},Ce=t.__get_daylight=function(){return(Ce=t.__get_daylight=t.asm.$a).apply(null,arguments)},Fe=t.__get_timezone=function(){return(Fe=t.__get_timezone=t.asm.ab).apply(null,arguments)},Ie=t.stackSave=function(){return(Ie=t.stackSave=t.asm.bb).apply(null,arguments)},Ue=t.stackRestore=function(){return(Ue=t.stackRestore=t.asm.cb).apply(null,arguments)},We=t.stackAlloc=function(){return(We=t.stackAlloc=t.asm.db).apply(null,arguments)},Le=t._memalign=function(){return(Le=t._memalign=t.asm.eb).apply(null,arguments)};function Ye(){function e(){if(!ke&&(ke=!0,t.calledRun=!0,!M)){if($(U),r(t),t.onRuntimeInitialized&&t.onRuntimeInitialized(),t.postRun)for(\\\"function\\\"==typeof t.postRun&&(t.postRun=[t.postRun]);t.postRun.length;){var e=t.postRun.shift();L.unshift(e)}$(L)}}if(!(0<H)){if(t.preRun)for(\\\"function\\\"==typeof t.preRun&&(t.preRun=[t.preRun]);t.preRun.length;)Y();$(I),0<H||(t.setStatus?(t.setStatus(\\\"Running...\\\"),setTimeout((function(){setTimeout((function(){t.setStatus(\\\"\\\")}),1),e()}),1)):e())}}if(t.UTF8ToString=j,t.stringToUTF8=function(e,t,n){return D(e,A,t,n)},t.lengthBytesUTF8=R,t.stackSave=Ie,t.stackRestore=Ue,t.stackAlloc=We,z=function e(){ke||Ye(),ke||(z=e)},t.run=Ye,t.preInit)for(\\\"function\\\"==typeof t.preInit&&(t.preInit=[t.preInit]);0<t.preInit.length;)t.preInit.pop()();return Ye(),e.ready});e.exports=r},967:(e,t)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.iterateExtraOptions=void 0,t.iterateExtraOptions=(e,n,r,i)=>{if(\\\"object\\\"==typeof e&&null!==e){if(r.has(e))throw new Error(\\\"Circular reference in options\\\");r.add(e)}Object.entries(e).forEach((([e,a])=>{const o=n?n+e:e;if(\\\"object\\\"==typeof a)t.iterateExtraOptions(a,o+\\\".\\\",r,i);else if(\\\"string\\\"==typeof a||\\\"number\\\"==typeof a)i(o,a.toString());else{if(\\\"boolean\\\"!=typeof a)throw new Error(\\\"Can't handle extra config type: \\\"+typeof a);i(o,a?\\\"1\\\":\\\"0\\\")}}))}},586:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setRunOptions=void 0;const r=n(967),i=n(983),a=n(361);t.setRunOptions=e=>{const t=a.getInstance();let n=0;const o=[],u=e||{};try{if(void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);void 0===(null==e?void 0:e.terminate)&&(u.terminate=!1);let a=0;if(void 0!==(null==e?void 0:e.tag)&&(a=i.allocWasmString(e.tag,o)),n=t._OrtCreateRunOptions(u.logSeverityLevel,u.logVerbosityLevel,!!u.terminate,a),0===n)throw new Error(\\\"Can't create run options\\\");return void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddRunConfigEntry(n,a,u))throw new Error(`Can't set a run config entry: ${e} - ${r}`)})),[n,o]}catch(e){throw 0!==n&&t._OrtReleaseRunOptions(n),o.forEach(t._free),e}}},919:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.setSessionOptions=void 0;const r=n(967),i=n(983),a=n(361);t.setSessionOptions=e=>{const t=a.getInstance();let n=0;const o=[],u=e||{};(e=>{e.extra||(e.extra={}),e.extra.session||(e.extra.session={});const t=e.extra.session;t.use_ort_model_bytes_directly||(t.use_ort_model_bytes_directly=\\\"1\\\")})(u);try{void 0===(null==e?void 0:e.graphOptimizationLevel)&&(u.graphOptimizationLevel=\\\"all\\\");const a=(e=>{switch(e){case\\\"disabled\\\":return 0;case\\\"basic\\\":return 1;case\\\"extended\\\":return 2;case\\\"all\\\":return 99;default:throw new Error(`unsupported graph optimization level: ${e}`)}})(u.graphOptimizationLevel);void 0===(null==e?void 0:e.enableCpuMemArena)&&(u.enableCpuMemArena=!0),void 0===(null==e?void 0:e.enableMemPattern)&&(u.enableMemPattern=!0),void 0===(null==e?void 0:e.executionMode)&&(u.executionMode=\\\"sequential\\\");const s=(e=>{switch(e){case\\\"sequential\\\":return 0;case\\\"parallel\\\":return 1;default:throw new Error(`unsupported execution mode: ${e}`)}})(u.executionMode);let c=0;if(void 0!==(null==e?void 0:e.logId)&&(c=i.allocWasmString(e.logId,o)),void 0===(null==e?void 0:e.logSeverityLevel))u.logSeverityLevel=2;else if(\\\"number\\\"!=typeof e.logSeverityLevel||!Number.isInteger(e.logSeverityLevel)||e.logSeverityLevel<0||e.logSeverityLevel>4)throw new Error(`log serverity level is not valid: ${e.logSeverityLevel}`);if(void 0===(null==e?void 0:e.logVerbosityLevel))u.logVerbosityLevel=0;else if(\\\"number\\\"!=typeof e.logVerbosityLevel||!Number.isInteger(e.logVerbosityLevel))throw new Error(`log verbosity level is not valid: ${e.logVerbosityLevel}`);if(void 0===(null==e?void 0:e.enableProfiling)&&(u.enableProfiling=!1),n=t._OrtCreateSessionOptions(a,!!u.enableCpuMemArena,!!u.enableMemPattern,s,!!u.enableProfiling,0,c,u.logSeverityLevel,u.logVerbosityLevel),0===n)throw new Error(\\\"Can't create session options\\\");if(void 0!==(null==e?void 0:e.extra)&&r.iterateExtraOptions(e.extra,\\\"\\\",new WeakSet,((e,r)=>{const a=i.allocWasmString(e,o),u=i.allocWasmString(r,o);if(0!==t._OrtAddSessionConfigEntry(n,a,u))throw new Error(`Can't set a session config entry: ${e} - ${r}`)})),null==e?void 0:e.executionProviders)for(const r of e.executionProviders)if(\\\"webnn\\\"===(\\\"string\\\"==typeof r?r:r.name)){let e=0;if(\\\"string\\\"!=typeof r){const t=r;(null==t?void 0:t.devicePreference)&&(e=t.devicePreference)}if(console.log(`webnn device preference: ${e}`),0!==t._OrtSessionOptionsAppendExecutionProviderWebNN(n,e))throw new Error(\\\"Can't append WebNN execution provider\\\");break}return[n,o]}catch(e){throw 0!==n&&t._OrtReleaseSessionOptions(n),o.forEach(t._free),e}}},983:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.allocWasmString=void 0;const r=n(361);t.allocWasmString=(e,t)=>{const n=r.getInstance(),i=n.lengthBytesUTF8(e)+1,a=n._malloc(i);return n.stringToUTF8(e,a,i),t.push(a),a}},349:(e,t,n)=>{\\\"use strict\\\";Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.extractTransferableBuffers=t.endProfiling=t.run=t.releaseSession=t.createSession=t.initOrt=void 0;const r=n(586),i=n(919),a=n(983),o=n(361);t.initOrt=(e,t)=>{const n=o.getInstance()._OrtInit(e,t);if(0!==n)throw new Error(`Can't initialize onnxruntime. error code = ${n}`)};const u=[];t.createSession=(e,t)=>{const n=o.getInstance(),r=n._malloc(e.byteLength);let a=0,s=0,c=[];try{if([s,c]=i.setSessionOptions(t),n.HEAPU8.set(e,r),a=n._OrtCreateSession(r,e.byteLength,s),0===a)throw new Error(\\\"Can't create a session\\\")}finally{n._free(r),n._OrtReleaseSessionOptions(s),c.forEach(n._free)}const l=n._OrtGetInputCount(a),f=n._OrtGetOutputCount(a),d=[],p=[],b=[],h=[];for(let e=0;e<l;e++){const t=n._OrtGetInputName(a,e);if(0===t)throw new Error(\\\"Can't get an input name\\\");p.push(t),d.push(n.UTF8ToString(t))}for(let e=0;e<f;e++){const t=n._OrtGetOutputName(a,e);if(0===t)throw new Error(\\\"Can't get an output name\\\");h.push(t),b.push(n.UTF8ToString(t))}return u.push([a,p,h]),[u.length-1,d,b]},t.releaseSession=e=>{const t=o.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],i=n[1],a=n[2];i.forEach(t._OrtFree),a.forEach(t._OrtFree),t._OrtReleaseSession(r),u[e]=void 0};const s=e=>{switch(e){case\\\"int8\\\":return 3;case\\\"uint8\\\":return 2;case\\\"bool\\\":return 9;case\\\"int16\\\":return 5;case\\\"uint16\\\":return 4;case\\\"int32\\\":return 6;case\\\"uint32\\\":return 12;case\\\"float32\\\":return 1;case\\\"float64\\\":return 11;case\\\"string\\\":return 8;case\\\"int64\\\":return 7;case\\\"uint64\\\":return 13;default:throw new Error(`unsupported data type: ${e}`)}},c=e=>{switch(e){case 3:return\\\"int8\\\";case 2:return\\\"uint8\\\";case 9:return\\\"bool\\\";case 5:return\\\"int16\\\";case 4:return\\\"uint16\\\";case 6:return\\\"int32\\\";case 12:return\\\"uint32\\\";case 1:return\\\"float32\\\";case 11:return\\\"float64\\\";case 8:return\\\"string\\\";case 7:return\\\"int32\\\";case 13:return\\\"uint32\\\";default:throw new Error(`unsupported data type: ${e}`)}},l=e=>{switch(e){case\\\"float32\\\":return Float32Array;case\\\"uint8\\\":return Uint8Array;case\\\"int8\\\":return Int8Array;case\\\"uint16\\\":return Uint16Array;case\\\"int16\\\":return Int16Array;case\\\"int32\\\":return Int32Array;case\\\"bool\\\":return Uint8Array;case\\\"float64\\\":return Float64Array;case\\\"uint32\\\":return Uint32Array;case\\\"int64\\\":return BigInt64Array;case\\\"uint64\\\":return BigUint64Array;default:throw new Error(`unsupported type: ${e}`)}};t.run=(e,t,n,i,f)=>{const d=o.getInstance(),p=u[e];if(!p)throw new Error(\\\"invalid session id\\\");const b=p[0],h=p[1],g=p[2],m=t.length,y=i.length;let v=0,_=[];const w=[],O=[];try{[v,_]=r.setRunOptions(f);for(let e=0;e<m;e++){const t=n[e][0],r=n[e][1],i=n[e][2];let o,u;if(Array.isArray(i)){u=4*i.length,o=d._malloc(u),O.push(o);let e=o/4;for(let t=0;t<i.length;t++){if(\\\"string\\\"!=typeof i[t])throw new TypeError(`tensor data at index ${t} is not a string`);d.HEAPU32[e++]=a.allocWasmString(i[t],O)}}else u=i.byteLength,o=d._malloc(u),O.push(o),d.HEAPU8.set(new Uint8Array(i.buffer,i.byteOffset,u),o);const c=d.stackSave(),l=d.stackAlloc(4*r.length);try{let e=l/4;r.forEach((t=>d.HEAP32[e++]=t));const n=d._OrtCreateTensor(s(t),o,u,l,r.length);if(0===n)throw new Error(\\\"Can't create a tensor\\\");w.push(n)}finally{d.stackRestore(c)}}const e=d.stackSave(),o=d.stackAlloc(4*m),u=d.stackAlloc(4*m),p=d.stackAlloc(4*y),A=d.stackAlloc(4*y);try{let n=o/4,r=u/4,a=p/4,s=A/4;for(let e=0;e<m;e++)d.HEAPU32[n++]=w[e],d.HEAPU32[r++]=h[t[e]];for(let e=0;e<y;e++)d.HEAPU32[a++]=0,d.HEAPU32[s++]=g[i[e]];let f=d._OrtRun(b,u,o,m,A,y,p,v);const _=[];if(0===f)for(let e=0;e<y;e++){const t=d.HEAPU32[p/4+e],n=d.stackSave(),r=d.stackAlloc(16);let i,a=0;try{if(f=d._OrtGetTensorData(t,r,r+4,r+8,r+12),0!==f)throw new Error(`Can't get a tensor data. error code = ${f}`);let e=r/4;const o=d.HEAPU32[e++];a=d.HEAPU32[e++];const u=d.HEAPU32[e++],s=d.HEAPU32[e++],p=[];for(let e=0;e<s;e++)p.push(d.HEAPU32[u/4+e]);d._OrtFree(u);const b=0===p.length?1:p.reduce(((e,t)=>e*t));if(i=c(o),\\\"string\\\"===i){const e=[];let t=a/4;for(let n=0;n<b;n++){const r=d.HEAPU32[t++],i=n===b-1?void 0:d.HEAPU32[t]-r;e.push(d.UTF8ToString(r,i))}_.push([i,p,e])}else{const e=new(l(i))(b);new Uint8Array(e.buffer,e.byteOffset,e.byteLength).set(d.HEAPU8.subarray(a,a+e.byteLength)),_.push([i,p,e])}}finally{d.stackRestore(n),\\\"string\\\"===i&&a&&d._free(a),d._OrtReleaseTensor(t)}}if(0===f)return _;throw new Error(`failed to call OrtRun(). error code = ${f}.`)}finally{d.stackRestore(e)}}finally{w.forEach(d._OrtReleaseTensor),O.forEach(d._free),d._OrtReleaseRunOptions(v),_.forEach(d._free)}},t.endProfiling=e=>{const t=o.getInstance(),n=u[e];if(!n)throw new Error(\\\"invalid session id\\\");const r=n[0],i=t._OrtEndProfiling(r);if(0===i)throw new Error(\\\"Can't get an profile file name\\\");t._OrtFree(i)},t.extractTransferableBuffers=e=>{const t=[];for(const n of e){const e=n[2];!Array.isArray(e)&&e.buffer&&t.push(e.buffer)}return t}},361:function(e,t,n){\\\"use strict\\\";var r=this&&this.__createBinding||(Object.create?function(e,t,n,r){void 0===r&&(r=n),Object.defineProperty(e,r,{enumerable:!0,get:function(){return t[n]}})}:function(e,t,n,r){void 0===r&&(r=n),e[r]=t[n]}),i=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,\\\"default\\\",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var n in e)\\\"default\\\"!==n&&Object.prototype.hasOwnProperty.call(e,n)&&r(t,e,n);return i(t,e),t},o=this&&this.__awaiter||function(e,t,n,r){return new(n||(n=Promise))((function(i,a){function o(e){try{s(r.next(e))}catch(e){a(e)}}function u(e){try{s(r.throw(e))}catch(e){a(e)}}function s(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,u)}s((r=r.apply(e,t||[])).next())}))},u=this&&this.__importDefault||function(e){return e&&e.__esModule?e:{default:e}};Object.defineProperty(t,\\\"__esModule\\\",{value:!0}),t.dispose=t.getInstance=t.initializeWebAssembly=void 0;const s=a(n(449)),c=u(n(474)),l=u(n(932));let f,d=!1,p=!1,b=!1;const h=(e,t)=>t?e?\\\"ort-wasm-simd-threaded.wasm\\\":\\\"ort-wasm-threaded.wasm\\\":e?\\\"ort-wasm-simd.wasm\\\":\\\"ort-wasm.wasm\\\";t.initializeWebAssembly=e=>o(void 0,void 0,void 0,(function*(){if(d)return Promise.resolve();if(p)throw new Error(\\\"multiple calls to 'initializeWebAssembly()' detected.\\\");if(b)throw new Error(\\\"previous call to 'initializeWebAssembly()' failed.\\\");p=!0;const t=e.initTimeout,r=e.numThreads,i=e.simd,a=r>1&&(()=>{try{return\\\"undefined\\\"!=typeof SharedArrayBuffer&&(\\\"undefined\\\"!=typeof MessageChannel&&(new MessageChannel).port1.postMessage(new SharedArrayBuffer(1)),WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,5,4,1,3,1,1,10,11,1,9,0,65,0,254,16,2,0,26,11])))}catch(e){return!1}})(),o=i&&(()=>{try{return WebAssembly.validate(new Uint8Array([0,97,115,109,1,0,0,0,1,4,1,96,0,0,3,2,1,0,10,9,1,7,0,65,0,253,15,26,11]))}catch(e){return!1}})(),u=\\\"string\\\"==typeof e.wasmPaths?e.wasmPaths:void 0,g=h(!1,a),m=h(o,a),y=\\\"object\\\"==typeof e.wasmPaths?e.wasmPaths[m]:void 0;let v=!1;const _=[];if(t>0&&_.push(new Promise((e=>{setTimeout((()=>{v=!0,e()}),t)}))),_.push(new Promise(((e,t)=>{const r=a?c.default:l.default,i={locateFile:(e,t)=>{if(e.endsWith(\\\".worker.js\\\")&&\\\"undefined\\\"!=typeof Blob)return URL.createObjectURL(new Blob([n(118)],{type:\\\"text/javascript\\\"}));if(e===g){const e=null!=u?u:t;return null!=y?y:e+m}return t+e}};if(a)if(\\\"undefined\\\"==typeof Blob)i.mainScriptUrlOrBlob=s.join(\\\"/\\\",\\\"ort-wasm-threaded.js\\\");else{const e=`var ortWasmThreaded=(function(){var _scriptDir;return ${c.default.toString()}})();`;i.mainScriptUrlOrBlob=new Blob([e],{type:\\\"text/javascript\\\"})}r(i).then((t=>{p=!1,d=!0,f=t,e()}),(e=>{p=!1,b=!0,t(e)}))}))),yield Promise.race(_),v)throw new Error(`WebAssembly backend initializing failed due to timeout: ${t}ms`)})),t.getInstance=()=>{if(d&&f)return f;throw new Error(\\\"WebAssembly is not initialized yet.\\\")},t.dispose=()=>{var e;!d||p||b||(p=!0,null===(e=f.PThread)||void 0===e||e.terminateAllThreads(),f=void 0,p=!1,d=!1,b=!0)}},384:()=>{},993:()=>{},908:()=>{},953:()=>{},925:()=>{},449:()=>{}},t={};function n(r){var i=t[r];if(void 0!==i)return i.exports;var a=t[r]={exports:{}};return e[r].call(a.exports,a,a.exports,n),a.exports}n.g=function(){if(\\\"object\\\"==typeof globalThis)return globalThis;try{return this||new Function(\\\"return this\\\")()}catch(e){if(\\\"object\\\"==typeof window)return window}}(),(()=>{\\\"use strict\\\";const e=n(349),t=n(361);self.onmessage=n=>{switch(n.data.type){case\\\"init-wasm\\\":t.initializeWebAssembly(n.data.in).then((()=>postMessage({type:\\\"init-wasm\\\"})),(e=>postMessage({type:\\\"init-wasm\\\",err:e})));break;case\\\"init-ort\\\":try{const{numThreads:t,loggingLevel:r}=n.data.in;e.initOrt(t,r),postMessage({type:\\\"init-ort\\\"})}catch(e){postMessage({type:\\\"init-ort\\\",err:e})}break;case\\\"create\\\":try{const{model:t,options:r}=n.data.in,i=e.createSession(t,r);postMessage({type:\\\"create\\\",out:i})}catch(e){postMessage({type:\\\"create\\\",err:e})}break;case\\\"release\\\":try{const t=n.data.in;e.releaseSession(t),postMessage({type:\\\"release\\\"})}catch(e){postMessage({type:\\\"release\\\",err:e})}break;case\\\"run\\\":try{const{sessionId:t,inputIndices:r,inputs:i,outputIndices:a,options:o}=n.data.in,u=e.run(t,r,i,a,o);postMessage({type:\\\"run\\\",out:u},e.extractTransferableBuffers(u))}catch(e){postMessage({type:\\\"run\\\",err:e})}break;case\\\"end-profiling\\\":try{const t=n.data.in;e.endProfiling(t),postMessage({type:\\\"end-profiling\\\"})}catch(e){postMessage({type:\\\"end-profiling\\\",err:e})}}}})()})();\\n\", \"Worker\", undefined, undefined);\n}\n","\"use strict\";\n\n/* eslint-env browser */\n\n/* eslint-disable no-undef, no-use-before-define, new-cap */\nmodule.exports = function (content, workerConstructor, workerOptions, url) {\n  var globalScope = self || window;\n\n  try {\n    try {\n      var blob;\n\n      try {\n        // New API\n        blob = new globalScope.Blob([content]);\n      } catch (e) {\n        // BlobBuilder = Deprecated, but widely implemented\n        var BlobBuilder = globalScope.BlobBuilder || globalScope.WebKitBlobBuilder || globalScope.MozBlobBuilder || globalScope.MSBlobBuilder;\n        blob = new BlobBuilder();\n        blob.append(content);\n        blob = blob.getBlob();\n      }\n\n      var URL = globalScope.URL || globalScope.webkitURL;\n      var objectURL = URL.createObjectURL(blob);\n      var worker = new globalScope[workerConstructor](objectURL, workerOptions);\n      URL.revokeObjectURL(objectURL);\n      return worker;\n    } catch (e) {\n      return new globalScope[workerConstructor](\"data:application/javascript,\".concat(encodeURIComponent(content)), workerOptions);\n    }\n  } catch (e) {\n    if (!url) {\n      throw Error(\"Inline worker is not supported\");\n    }\n\n    return new globalScope[workerConstructor](url, workerOptions);\n  }\n};","module.exports = __WEBPACK_EXTERNAL_MODULE__2174__;","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(6018);\n"],"sourceRoot":""}